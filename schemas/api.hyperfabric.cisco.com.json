{
 "openapi": "3.0.3",
 "info": {
  "contact": {
   "email": "hyperfabric-support@cisco.com",
   "name": "Cisco Nexus Hyperfabric REST API",
   "url": "https://hyperfabric.cisco.com"
  },
  "description": "Use this documentation to explore the API in detail.\n\nEach request will have a complete description of all the accepted parameters.\n\n## Authentication\n\nRequests are authenticated using Bearer Tokens. Tokens should be created from within the Hyperfabric service web UI and stored securely.\n\nSee the [bearer token](https://developer.cisco.com/docs/hyperfabric/authentication/#bearer-tokens) documentation page for more details.\n",
  "license": {
   "name": "Cisco Licensing",
   "url": "https://www.cisco.com/c/dam/en_us/about/doing_business/legal/Cisco_General_Terms.pdf"
  },
  "termsOfService": "https://www.cisco.com/c/dam/en_us/about/doing_business/legal/Cisco_General_Terms.pdf",
  "title": "Cisco Nexus Hyperfabric REST API",
  "version": "1.0.6-Rev.2025-06-26.DEV"
 },
 "paths": {
  "/bearerTokens": {
   "get": {
    "description": "Get the list of bearer tokens associated with the user.",
    "operationId": "authGetBearerTokens",
    "parameters": [
     {
      "description": "Include metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authGetBearerTokensResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/authBearerTokensResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of bearer tokens.",
    "tags": [
     "Auth"
    ]
   },
   "post": {
    "description": "Add one or more bearer tokens for the user.",
    "operationId": "authCreateBearerTokens",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/authCreateBearerTokensRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/authCreateBearerTokensRequest"
       }
      }
     },
     "description": "Create one or more new bearer tokens.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authCreateBearerTokensResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/authCreateBearerTokensResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more bearer tokens.",
    "tags": [
     "Auth"
    ]
   }
  },
  "/bearerTokens/{tokenId}": {
   "delete": {
    "description": "Delete a specific bearer token associated with the user.",
    "operationId": "authDeleteBearerToken",
    "parameters": [
     {
      "description": "The id of the token to delete.",
      "in": "path",
      "name": "tokenId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific bearer token.",
    "tags": [
     "Auth"
    ]
   },
   "get": {
    "description": "Get a specific bearer token associated with the user.",
    "operationId": "authGetBearerToken",
    "parameters": [
     {
      "description": "The token id.",
      "in": "path",
      "name": "tokenId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authGetBearerTokenResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/authBearerToken"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific bearer token.",
    "tags": [
     "Auth"
    ]
   }
  },
  "/cablingPlansDryrun": {
   "put": {
    "operationId": "fabricsGenerateCablingPlanDryrun",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configGenerateCablingPlanRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configGenerateCablingPlanRequest"
       }
      }
     },
     "description": "Request Body",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGenerateCablingPlanResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGenerateCablingPlanResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/devices": {
   "get": {
    "description": "Get the list of devices associated with the organization, both bound and unbound.",
    "operationId": "devicesGetDevicesForOrg",
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/miscGetDevicesForOrg"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/miscGetDevicesForOrgResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of devices.",
    "tags": [
     "Devices"
    ]
   }
  },
  "/fabrics": {
   "get": {
    "description": "Get the list of fabrics in the organization.",
    "operationId": "fabricsGetAllFabrics",
    "parameters": [
     {
      "description": "Filter by one or more fabric ids and or names.",
      "in": "query",
      "name": "fabricId",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "description": "The max number of fabrics to return in the response.",
      "in": "query",
      "name": "max",
      "schema": {
       "format": "int32",
       "type": "integer"
      }
     },
     {
      "description": "An optional cursor for pagination.",
      "in": "query",
      "name": "cursor",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include the fabric design in the response.",
      "in": "query",
      "name": "includeDesign",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGetAllFabricsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of fabrics.",
    "tags": [
     "Fabrics"
    ]
   },
   "post": {
    "description": "Add a fabric to the organization. Currently only one fabric permitted per call.",
    "operationId": "fabricsAddFabrics",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddFabricsRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configAddFabricsRequest"
       }
      }
     },
     "description": "The request to create a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configAddFabricsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configAddFabricsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add a fabric.",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/fabrics/{fabricId}": {
   "delete": {
    "description": "Delete a specific fabric.",
    "operationId": "fabricsDeleteFabric",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific fabric.",
    "tags": [
     "Fabrics"
    ]
   },
   "get": {
    "description": "Get a specific fabric.",
    "operationId": "fabricsGetFabric",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "description": "Include the fabric design in the response.",
      "in": "query",
      "name": "includeDesign",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabric"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "404": {
      "content": {
       "application/json": {
        "examples": {
         "404": {
          "$ref": "#/components/examples/404"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Not Found",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific fabric.",
    "tags": [
     "Fabrics"
    ]
   },
   "put": {
    "description": "Update a specific fabric.",
    "operationId": "fabricsUpdateFabric",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateFabricRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configFabric"
       }
      }
     },
     "description": "The request to update a specific fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configUpdateFabricResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabric"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific fabric.",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/fabrics/{fabricId}/cablingPlans": {
   "get": {
    "operationId": "fabricsGetCablingPlan",
    "parameters": [
     {
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The group names to filter connections for",
      "in": "query",
      "name": "groupName",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The group ids to filter connections for",
      "in": "query",
      "name": "groupId",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The rail ids to filter connections for",
      "in": "query",
      "name": "railId",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The rail names to filter connections for",
      "in": "query",
      "name": "railName",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node names to filter connections for",
      "in": "query",
      "name": "nodeName",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node ids to filter connections for",
      "in": "query",
      "name": "nodeId",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetCablingPlanResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGetCablingPlanResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "tags": [
     "Fabrics"
    ]
   },
   "put": {
    "operationId": "fabricsGenerateCablingPlan",
    "parameters": [
     {
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configGenerateCablingPlanRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configGenerateCablingPlanRequest"
       }
      }
     },
     "description": "Request Body",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGenerateCablingPlanResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGenerateCablingPlanResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/fabrics/{fabricId}/candidates": {
   "get": {
    "description": "Get the list of candidate configurations in a specific fabric.",
    "operationId": "fabricsGetFabricCandidates",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name.",
      "in": "query",
      "name": "name",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The transaction sequence number of the candidate configuration.",
      "in": "query",
      "name": "txnId",
      "schema": {
       "format": "int64",
       "type": "integer"
      }
     },
     {
      "description": "Include committed/reverted candidate configurations.",
      "in": "query",
      "name": "needInactive",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "description": "Include the list of reviews of the candidate configurations.",
      "in": "query",
      "name": "needReviews",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "description": "Include the list of activity events of the candidate configurations.",
      "in": "query",
      "name": "needEvents",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "description": "Start value of the time range in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (e.g. `YYYY-MM-DDTHH:MM:SSZ`).",
      "in": "query",
      "name": "startTime",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "End value of the time range in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (e.g. `YYYY-MM-DDTHH:MM:SSZ`).",
      "in": "query",
      "name": "endTime",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricCandidatesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGetFabricCandidatesResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of candidate configurations.",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/fabrics/{fabricId}/candidates/{name}": {
   "delete": {
    "description": "Discard a specific candidate configuration in a fabric.",
    "operationId": "fabricsRevertFabricCandidate",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name.",
      "in": "path",
      "name": "name",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Discard a specific candidate configuration.",
    "tags": [
     "Fabrics"
    ]
   },
   "get": {
    "description": "Get a specific candidate configuration in a fabric.",
    "operationId": "fabricsGetFabricCandidate",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name.",
      "in": "path",
      "name": "name",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include committed/reverted candidate configuration.",
      "in": "query",
      "name": "needInactive",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "description": "Include the list of reviews of the candidate configuration.",
      "in": "query",
      "name": "needReviews",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "description": "Include the list of activity events of the candidate configuration.",
      "in": "query",
      "name": "needEvents",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricCandidateResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricCandidate"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific candidate configuration.",
    "tags": [
     "Fabrics"
    ]
   },
   "post": {
    "description": "Commit a specific candidate configuration to the running configuration in a fabric.",
    "operationId": "fabricsCommitFabricCandidate",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name.",
      "in": "path",
      "name": "name",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configCommitFabricCandidateRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configCommitFabricCandidateRequest"
       }
      }
     },
     "description": "The request to commit a specific candidate configuration of a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configCommitFabricCandidateResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configCommitFabricCandidateResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Commit a specific candidate configuration.",
    "tags": [
     "Fabrics"
    ]
   },
   "put": {
    "description": "Add a comment to a specific candidate configuration in a fabric.",
    "operationId": "fabricsReviewFabricCandidate",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name.",
      "in": "path",
      "name": "name",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configReviewFabricCandidateRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configReviewFabricCandidateRequest"
       }
      }
     },
     "description": "The request to add review comments to a specific candidate configuration of a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configReviewFabricCandidateResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configReviewFabricCandidateResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Comment on a specific candidate configuration.",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/fabrics/{fabricId}/connections": {
   "delete": {
    "description": "Delete all connections in a specific fabric.",
    "operationId": "fabricsDeleteFabricConnections",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete all connections.",
    "tags": [
     "Fabrics"
    ]
   },
   "get": {
    "description": "Get the list of connections in a specific fabric.",
    "operationId": "fabricsGetFabricConnections",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricConnectionsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricConnectionsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of connections.",
    "tags": [
     "Fabrics"
    ]
   },
   "post": {
    "description": "Add one or more connections to a specific fabric.",
    "operationId": "fabricsAddFabricConnections",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddFabricConnectionsRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configAddFabricConnectionsRequest"
       }
      }
     },
     "description": "The request to add one or more connections to a specific fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configAddFabricConnectionsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricConnectionsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more connections.",
    "tags": [
     "Fabrics"
    ]
   },
   "put": {
    "description": "Update the list of connections in a specific fabric. This is a complete replacement of the connections in a fabric. If no connections exist new ones will be created.",
    "operationId": "fabricsSetFabricConnections",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configSetFabricConnectionsRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configSetFabricConnectionsRequest"
       }
      }
     },
     "description": "The request to update the list of connections in a specific fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configSetFabricConnectionsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricConnectionsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update the list of connections.",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/fabrics/{fabricId}/connections/{connectionId}": {
   "delete": {
    "description": "Delete a specific connection in a fabric.",
    "operationId": "fabricsDeleteFabricConnection",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The connection id or port name.",
      "in": "path",
      "name": "connectionId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific connection.",
    "tags": [
     "Fabrics"
    ]
   },
   "get": {
    "description": "Get a specific connection in a fabric.",
    "operationId": "fabricsGetFabricConnection",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The connection id, connections are not named.",
      "in": "path",
      "name": "connectionId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricConnection"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsPortConnection"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific connection.",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes": {
   "get": {
    "description": "Get the list of nodes in a specific fabric.",
    "operationId": "nodesGetFabricNodes",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricNodesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGetFabricNodesResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of nodes.",
    "tags": [
     "Nodes"
    ]
   },
   "post": {
    "description": "Add one or more nodes to a specific fabric.",
    "operationId": "nodesAddFabricNodes",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddFabricNodesRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configAddFabricNodesRequest"
       }
      }
     },
     "description": "The request to add one or more nodes to a specific fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configAddFabricNodesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configAddFabricNodesResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more nodes.",
    "tags": [
     "Nodes"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}": {
   "delete": {
    "description": "Delete a specific node in a fabric.",
    "operationId": "nodesDeleteFabricNode",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "A node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific node.",
    "tags": [
     "Nodes"
    ]
   },
   "get": {
    "description": "Get a specific node in a fabric.",
    "operationId": "nodesGetNamedFabricNode",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricNodeResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configNode"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific node.",
    "tags": [
     "Nodes"
    ]
   },
   "put": {
    "description": "Update a specific node in a fabric.",
    "operationId": "nodesUpdateFabricNode",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateFabricNodeRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configNode"
       }
      }
     },
     "description": "The request to update a specific node in a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configNode"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configNode"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific node.",
    "tags": [
     "Nodes"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}/devices": {
   "delete": {
    "description": "Unbind the bound device from a specific node in a fabric.",
    "operationId": "devicesUnbindDevice",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name from which a device is bound.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Unbind the bound device from a node.",
    "tags": [
     "Devices"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}/devices/{deviceId}": {
   "put": {
    "description": "Bind a specific device to a node in a fabric.",
    "operationId": "devicesBindDevice",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name of the node.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The device id or name of the device to bind to the node.",
      "in": "path",
      "name": "deviceId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configBindDeviceResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configBindDeviceResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Bind a specific device to a node.",
    "tags": [
     "Devices"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}/managementPorts": {
   "get": {
    "description": "Get the list of management ports for a specific node in a fabric.",
    "operationId": "nodesGetManagementPorts",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetManagementPortsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configManagementPortsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of management ports.",
    "tags": [
     "Nodes"
    ]
   },
   "post": {
    "description": "Add one or more management ports to a specific node in a fabric.",
    "operationId": "nodesAddManagementPorts",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddManagementPortsRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configAddManagementPortsRequest"
       }
      }
     },
     "description": "The request to add one or more management ports to a specific node in a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configAddManagementPortsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configManagementPortsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more management port.",
    "tags": [
     "Nodes"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}/managementPorts/{id}": {
   "get": {
    "description": "Get a specific management port for a node in a fabric.",
    "operationId": "nodesGetManagementPort",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The management port id or name.",
      "in": "path",
      "name": "id",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetManagementPortResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsManagementPort"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific management port.",
    "tags": [
     "Nodes"
    ]
   },
   "put": {
    "description": "Update a specific management port for a node in a fabric.",
    "operationId": "nodesUpdateManagementPort",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The management port id or name.",
      "in": "path",
      "name": "id",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateManagementPortRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsManagementPort"
       }
      }
     },
     "description": "The request to update a specific management port of a node in a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configUpdateManagementPortResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsManagementPort"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific management port.",
    "tags": [
     "Nodes"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}/ports": {
   "get": {
    "description": "Get the list of ports configuration information for a specific node in a fabric.",
    "operationId": "nodesGetPorts",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetPortsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configPortsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of ports.",
    "tags": [
     "Nodes"
    ]
   },
   "put": {
    "description": "Update the list of ports for a specific node in a fabric. This is a complete replacement of the ports for a node in a fabric.",
    "operationId": "nodesSetPorts",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configSetPortsRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configSetPortsRequest"
       }
      }
     },
     "description": "The request to update the list of ports of a specific node in a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configSetPortsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configPortsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update the list of ports.",
    "tags": [
     "Nodes"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}/ports/{portId}": {
   "delete": {
    "description": "Reset a specific port of a node in a fabric to its default values. Fabric ports cannot be reset. Labels and annotations are not removed.",
    "operationId": "nodesResetPort",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The port id or name.",
      "in": "path",
      "name": "portId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Reset a specific port.",
    "tags": [
     "Nodes"
    ]
   },
   "get": {
    "description": "Get a specific port for a node in a fabric.",
    "operationId": "nodesGetPort",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The port id or name.",
      "in": "path",
      "name": "portId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetPortResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsNetworkPort"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific port.",
    "tags": [
     "Nodes"
    ]
   },
   "put": {
    "description": "Update a specific port for a node in a fabric.",
    "operationId": "nodesUpdatePort",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The port name, id or index.",
      "in": "path",
      "name": "portId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configSetPortRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsNetworkPort"
       }
      }
     },
     "description": "The request to update a specific port of a node in a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configSetPortResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsNetworkPort"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific port.",
    "tags": [
     "Nodes"
    ]
   }
  },
  "/fabrics/{fabricId}/vnis": {
   "get": {
    "description": "Get the list of VNIs in a specific fabric.",
    "operationId": "vnisGetFabricVnis",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricVnisResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricVnisResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of VNIs.",
    "tags": [
     "Vnis"
    ]
   },
   "post": {
    "description": "Add one or more VNIs to a specific fabric.",
    "operationId": "vnisAddFabricVnis",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddFabricVnisRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configAddFabricVnisRequest"
       }
      }
     },
     "description": "The request to add one or more VNIs to a specific fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configAddFabricVnisResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricVnisResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more VNIs.",
    "tags": [
     "Vnis"
    ]
   }
  },
  "/fabrics/{fabricId}/vnis/{vniId}": {
   "delete": {
    "description": "Delete a specific VNI in a fabric.",
    "operationId": "vnisDeleteFabricVni",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The VNI id or name.",
      "in": "path",
      "name": "vniId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific VNI.",
    "tags": [
     "Vnis"
    ]
   },
   "get": {
    "description": "Get a specific VNI in a fabric.",
    "operationId": "vnisGetFabricVni",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The VNI id or name.",
      "in": "path",
      "name": "vniId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricVniResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsVni"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific VNI.",
    "tags": [
     "Vnis"
    ]
   },
   "put": {
    "description": "Update a specific VNI in a fabric.",
    "operationId": "vnisUpdateFabricVni",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The VNI id or name.",
      "in": "path",
      "name": "vniId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateFabricVniRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsVni"
       }
      }
     },
     "description": "The request to update a specific VNI in a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configUpdateFabricVniResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsVni"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific VNI.",
    "tags": [
     "Vnis"
    ]
   }
  },
  "/fabrics/{fabricId}/vnis/{vniId}/members": {
   "get": {
    "description": "Get the list of members of a specific VNI in a fabric.",
    "operationId": "vnisGetFabricVniMembers",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The VNI id or name.",
      "in": "path",
      "name": "vniId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configFabricVniMembersResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricVniMembersResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of VNI members.",
    "tags": [
     "Vnis"
    ]
   },
   "post": {
    "description": "Add one or more members to a specific VNI in a fabric.",
    "operationId": "vnisAddFabricVniMembers",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The VNI id or name.",
      "in": "path",
      "name": "vniId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddFabricVniMembersRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsVlanMember"
       }
      }
     },
     "description": "The request to add one or more members to a specific VNI of a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configFabricVniMembersResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricVniMembersResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more VNI members.",
    "tags": [
     "Vnis"
    ]
   }
  },
  "/fabrics/{fabricId}/vnis/{vniId}/members/{memberId}": {
   "delete": {
    "description": "Delete a specific member of a VNI in a fabric.",
    "operationId": "vnisDeleteFabricVniMember",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The VNI id or name.",
      "in": "path",
      "name": "vniId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The member id or name.",
      "in": "path",
      "name": "memberId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific VNI member.",
    "tags": [
     "Vnis"
    ]
   },
   "get": {
    "description": "Get a specific member of a VNI in a fabric.",
    "operationId": "vnisGetFabricVniMember",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The VNI id or name.",
      "in": "path",
      "name": "vniId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The member id or name.",
      "in": "path",
      "name": "memberId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/modelsVlanMember"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsVlanMember"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific VNI member.",
    "tags": [
     "Vnis"
    ]
   }
  },
  "/fabrics/{fabricId}/vrfs": {
   "get": {
    "description": "Get the list of VRFs in a specific fabric.",
    "operationId": "vrfsGetFabricVrfs",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricVrfsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricVrfsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of VRFs.",
    "tags": [
     "Vrfs"
    ]
   },
   "post": {
    "description": "Add one or more VRFs to a specific fabric.",
    "operationId": "vrfsAddFabricVrfs",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddFabricVrfsRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configAddFabricVrfsRequest"
       }
      }
     },
     "description": "The request to add one or more VRFs to a specific fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configAddFabricVrfsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricVrfsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more VRFs.",
    "tags": [
     "Vrfs"
    ]
   }
  },
  "/fabrics/{fabricId}/vrfs/{vrfId}": {
   "delete": {
    "description": "Delete a specific VRF in a fabric.",
    "operationId": "vrfsDeleteFabricVrf",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The VRF id or name.",
      "in": "path",
      "name": "vrfId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific VRF.",
    "tags": [
     "Vrfs"
    ]
   },
   "get": {
    "description": "Get a specific VRF in a fabric.",
    "operationId": "vrfsGetFabricVrf",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The VRF id or name.",
      "in": "path",
      "name": "vrfId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricVrfResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsVrf"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific VRF.",
    "tags": [
     "Vrfs"
    ]
   },
   "put": {
    "description": "Update a specific VRF in a fabric.",
    "operationId": "vrfsUpdateFabricVrf",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The VRF id or name.",
      "in": "path",
      "name": "vrfId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateFabricVrfRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsVrf"
       }
      }
     },
     "description": "The request to update a specific VRF in a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configUpdateFabricVrfResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsVrf"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific VRF.",
    "tags": [
     "Vrfs"
    ]
   }
  },
  "/fabrics/{fabricId}/vrfs/{vrfId}/staticRoutes": {
   "get": {
    "description": "Get the list of static routes of a specific VRF in a fabric.",
    "operationId": "vrfsGetFabricStaticRoutes",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The vrf id or name.",
      "in": "path",
      "name": "vrfId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricStaticRoutesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricStaticRoutesResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of static routes.",
    "tags": [
     "Vrfs"
    ]
   },
   "post": {
    "description": "Add one or more static routes to a VRF in a fabric.",
    "operationId": "vrfsAddFabricStaticRoutes",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The vrf id or name.",
      "in": "path",
      "name": "vrfId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddFabricStaticRoutesRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configAddFabricStaticRoutesRequest"
       }
      }
     },
     "description": "The request to add one or more static routes to a specific VRF in a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configAddFabricStaticRoutesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricStaticRoutesResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more static routes.",
    "tags": [
     "Vrfs"
    ]
   }
  },
  "/fabrics/{fabricId}/vrfs/{vrfId}/staticRoutes/{routeId}": {
   "delete": {
    "description": "Delete a specific static route of a VRF in a fabric.",
    "operationId": "vrfsDeleteFabricStaticRoute",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The vrf id or name.",
      "in": "path",
      "name": "vrfId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The route id or name.",
      "in": "path",
      "name": "routeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific static route.",
    "tags": [
     "Vrfs"
    ]
   },
   "get": {
    "description": "Get a specific static route of a VRF in a fabric.",
    "operationId": "vrfsGetFabricStaticRoute",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The vrf id or name.",
      "in": "path",
      "name": "vrfId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The route id or name.",
      "in": "path",
      "name": "routeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricStaticRouteResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsStaticRoutes"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific static route.",
    "tags": [
     "Vrfs"
    ]
   },
   "put": {
    "description": "Update a specific static route of a VRF in a fabric.",
    "operationId": "vrfsUpdateFabricStaticRoute",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The vrf id.",
      "in": "path",
      "name": "vrfId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The route id or name.",
      "in": "path",
      "name": "routeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateFabricStaticRouteRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsStaticRoutes"
       }
      }
     },
     "description": "The request to update a specific static route of a VRF in a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configUpdateFabricStaticRouteResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsStaticRoutes"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific static route.",
    "tags": [
     "Vrfs"
    ]
   }
  },
  "/users": {
   "get": {
    "description": "Get the list of users associated with the organization.",
    "operationId": "authGetUsers",
    "parameters": [
     {
      "description": "Only return users with these emails. If set, the roles and enabled query parameters are ignored.",
      "in": "query",
      "name": "emails",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Only return users that are administratively enabled, otherwise include disabled users as well.",
      "in": "query",
      "name": "enabled",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "description": "Only return users with specific roles.",
      "in": "query",
      "name": "roles",
      "schema": {
       "default": "ADMIN",
       "description": "An enum value, select either string or integer",
       "enum": [
        "ADMIN",
        "READ_WRITE",
        "READ_ONLY"
       ],
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authGetUsersResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/authUsersResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a list of users.",
    "tags": [
     "Auth"
    ]
   },
   "post": {
    "description": "Add one or more users to the organization.",
    "operationId": "authSetUsers",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/authAddUsersRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/authSetUsersRequest"
       }
      }
     },
     "description": "The request to add one or more users.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authAddUsersResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/authUsersResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more users.",
    "tags": [
     "Auth"
    ]
   }
  },
  "/users/{userId}": {
   "delete": {
    "description": "Delete a specific user associated with the organization. This will remove all access of the user to the organization.",
    "operationId": "authDeleteUser",
    "parameters": [
     {
      "description": "The user id or email address.",
      "in": "path",
      "name": "userId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific user.",
    "tags": [
     "Auth"
    ]
   },
   "get": {
    "description": "Get a specific user associated with the organization.",
    "operationId": "authGetUser",
    "parameters": [
     {
      "description": "The user id or email address.",
      "in": "path",
      "name": "userId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authGetUserResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsUser"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific user.",
    "tags": [
     "Auth"
    ]
   },
   "put": {
    "description": "Update a specific user associated with the organization.",
    "operationId": "authUpdateUser",
    "parameters": [
     {
      "description": "The user id or email address.",
      "in": "path",
      "name": "userId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/authUpdateUserRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/authUpdateUser"
       }
      }
     },
     "description": "The request to update a specific user.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authUpdateUserResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsUser"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific user.",
    "tags": [
     "Auth"
    ]
   }
  }
 },
 "security": [
  {
   "http": []
  }
 ],
 "servers": [
  {
   "description": "V1 Server",
   "url": "https://hyperfabric.cisco.com/api/v1"
  }
 ],
 "tags": [
  {
   "description": "APIs for managing authorization, account, users, API keys and tokens.",
   "name": "Auth"
  },
  {
   "description": "APIs for managing devices.",
   "name": "Devices"
  },
  {
   "description": "APIs for managing fabrics, candidate configurations and fabric connections.",
   "name": "Fabrics"
  },
  {
   "description": "APIs for managing nodes, ports, port channels and other interfaces.",
   "name": "Nodes"
  },
  {
   "description": "APIs for managing VNIs",
   "name": "Vnis"
  },
  {
   "description": "APIs for managing VRFs.",
   "name": "Vrfs"
  }
 ],
 "components": {
  "examples": {
   "400": {
    "description": "Bad Request",
    "summary": "Bad Request",
    "value": {
     "message": "cannot parse value: not a valid value",
     "field": "value",
     "value": "123",
     "status": 400,
     "errCode": "ERR_CODE_INVALID_VALUE",
     "trackingId": "TrackingId-a5767554-f150-47f5-8e94-425e802b25c9"
    }
   },
   "401": {
    "description": "Unauthorized",
    "summary": "Unauthorized",
    "value": {
     "message": "authorization failure",
     "status": 401,
     "errCode": "ERR_CODE_UNAUTHORIZED",
     "trackingId": "TrackingId-32dee1eb-6447-4275-a441-b9a9bcd90bb7"
    }
   },
   "403": {
    "description": "Forbidden",
    "summary": "Forbidden",
    "value": {
     "message": "insufficient privileges to access resource",
     "status": 403,
     "errCode": "ERR_CODE_PERMISSION_DENIED",
     "trackingId": "TrackingId-c4b86cca-2d39-4269-9f94-1a0b7ff3dbb3"
    }
   },
   "404": {
    "description": "Not Found",
    "summary": "Not Found",
    "value": {
     "message": "user not found",
     "field": "userId",
     "value": "userone@example.com",
     "status": 404,
     "errCode": "ERR_CODE_NOT_FOUND",
     "trackingId": "TrackingId-23243a68-bde0-4539-ac10-d7cbd9a0a8a2"
    }
   },
   "409": {
    "description": "Conflict",
    "summary": "Conflict",
    "value": {
     "message": "user already exists",
     "field": "userId",
     "value": "hyperfabric-example@cisco.com",
     "status": 409,
     "errCode": "ERR_CODE_DATA_CONFLICT",
     "trackingId": "TrackingId-9e517c50-30fc-4c4e-ad1d-a5ce74876b52"
    }
   },
   "429": {
    "description": "Too Many Requests",
    "summary": "Too Many Requests",
    "value": {
     "message": "too many requests",
     "status": 429,
     "errCode": "ERR_CODE_TOO_MANY_REQUESTS",
     "trackingId": "TrackingId-2605e772-2369-4f94-bcee-a1386e05fd74"
    }
   },
   "500": {
    "description": "Internal Server Error",
    "summary": "Internal Server Error",
    "value": {
     "message": "an internal error has occurred",
     "status": 500,
     "errCode": "ERR_CODE_INTERNAL",
     "trackingId": "TrackingId-a619a6f4-36a5-4296-a636-7dd98f5c5657"
    }
   },
   "authAddUsersRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "users": [
      {
       "email": "mary@example.com",
       "enabled": true,
       "role": "ADMIN"
      },
      {
       "email": "jane@example.com",
       "enabled": true,
       "role": "READ_WRITE"
      },
      {
       "email": "james@example.com",
       "enabled": true,
       "role": "READ_ONLY"
      }
     ]
    }
   },
   "authAddUsersResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "users": [
      {
       "id": "6632487c-f570-467d-83cd-8c628ba5e364",
       "email": "fernanda@example.com",
       "provider": "CISCO",
       "metadata": {
        "revisionId": "1",
        "createdBy": "cisco/hyperfabric-example@cisco.com",
        "createdAt": "2024-09-07T02:36:21.839104Z",
        "modifiedBy": "cisco/hyperfabric-example@cisco.com",
        "modifiedAt": "2024-09-07T02:36:21.839104Z"
       },
       "role": "ADMIN"
      },
      {
       "id": "36195b9d-9ef7-4eef-80ae-95562f38da1b",
       "email": "leo@example.com",
       "provider": "CISCO",
       "metadata": {
        "revisionId": "1",
        "createdBy": "cisco/hyperfabric-example@cisco.com",
        "createdAt": "2024-09-07T02:36:21.839104Z",
        "modifiedBy": "cisco/hyperfabric-example@cisco.com",
        "modifiedAt": "2024-09-07T02:36:21.839104Z"
       },
       "role": "READ_WRITE"
      },
      {
       "id": "b1a4baab-2e2c-45ec-b074-ffd13f73f157",
       "email": "james@example.com",
       "provider": "CISCO",
       "metadata": {
        "revisionId": "1",
        "createdBy": "cisco/hyperfabric-example@cisco.com",
        "createdAt": "2024-09-07T02:36:21.839104Z",
        "modifiedBy": "cisco/hyperfabric-example@cisco.com",
        "modifiedAt": "2024-09-07T02:36:21.839104Z"
       },
       "role": "READ_ONLY"
      }
     ]
    }
   },
   "authCreateBearerTokensRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "tokens": [
      {
       "name": "example-token",
       "description": "This is a description of a new token",
       "scope": "TOKEN_SCOPE_ADMIN",
       "notBefore": "2024-09-06T12:00:00Z",
       "notAfter": "2026-09-06T12:00:00Z"
      }
     ]
    }
   },
   "authCreateBearerTokensResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "tokens": [
      {
       "name": "example-token",
       "description": "This is a description of a new token",
       "scope": "TOKEN_SCOPE_ADMIN",
       "notBefore": "2024-09-06T12:00:00Z",
       "notAfter": "2026-09-06T12:00:00Z",
       "token": "\u003cTOKEN-DATA\u003e",
       "tokenId": "a118c19b-0f77-44eb-8be0-be4103ef9eb1",
       "metadata": {
        "revisionId": "1",
        "createdBy": "cisco/hyperfabric-example@cisco.com",
        "createdAt": "2024-10-28T18:56:32.898339Z",
        "modifiedBy": "cisco/hyperfabric-example@cisco.com",
        "modifiedAt": "2024-10-28T18:56:32.898339Z"
       }
      }
     ]
    }
   },
   "authGetBearerTokenResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "name": "example-token",
     "description": "An example bearer token used for demonstration",
     "scope": "TOKEN_SCOPE_ADMIN",
     "notBefore": "2024-09-07T00:26:24.701821Z",
     "notAfter": "2025-09-07T00:26:24.701821Z",
     "tokenId": "cadf5a4b-9e8d-4339-ba44-5e6d4d9f572c"
    }
   },
   "authGetBearerTokensResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "tokens": [
      {
       "name": "example-token",
       "description": "An example bearer token used for demonstration",
       "scope": "TOKEN_SCOPE_ADMIN",
       "notBefore": "2024-09-07T00:26:24.701821Z",
       "notAfter": "2025-09-07T00:26:24.701821Z",
       "tokenId": "cadf5a4b-9e8d-4339-ba44-5e6d4d9f572c",
       "metadata": {
        "revisionId": "1",
        "createdBy": "cisco/hyperfabric-example@cisco.com",
        "createdAt": "2024-09-07T00:26:24.710128Z",
        "modifiedBy": "cisco/hyperfabric-example@cisco.com",
        "modifiedAt": "2024-09-07T00:26:24.710128Z"
       }
      }
     ]
    }
   },
   "authGetUserResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "8730db3d-f6b9-41fe-989e-59ad9b467542",
     "email": "usertwo@example.com",
     "provider": "CISCO",
     "enabled": true,
     "metadata": {
      "revisionId": "1",
      "createdBy": "*",
      "createdAt": "2024-09-10T22:10:05.355828Z",
      "modifiedBy": "*",
      "modifiedAt": "2024-09-10T22:10:05.355828Z"
     },
     "role": "ADMIN"
    }
   },
   "authGetUsersResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "users": [
      {
       "id": "390e2bd6-7381-405e-98e0-7f33bb2f9b33",
       "email": "hyperfabric-example@cisco.com",
       "provider": "CISCO",
       "enabled": true,
       "role": "ADMIN"
      },
      {
       "id": "d4c0b7c3-cced-4e90-8bc3-33d866fe5d7d",
       "email": "userone@example.com",
       "provider": "CISCO",
       "enabled": true,
       "role": "ADMIN"
      },
      {
       "id": "4de1972c-8079-4b6d-b4ca-5a8f0bbff1e4",
       "email": "usertwo@example.com",
       "provider": "CISCO",
       "enabled": true,
       "role": "ADMIN"
      }
     ]
    }
   },
   "authUpdateUserRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "role": "READ_ONLY"
    }
   },
   "authUpdateUserResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "43f5e74d-e1ee-42c3-b57f-f6d1a37703d1",
     "email": "userone@example.com",
     "provider": "CISCO",
     "metadata": {
      "revisionId": "6",
      "createdBy": "*",
      "createdAt": "2024-09-11T02:35:46.125937Z",
      "modifiedBy": "cisco/hyperfabric-example@cisco.com",
      "modifiedAt": "2024-09-11T20:41:27.117265Z"
     },
     "role": "READ_ONLY"
    }
   },
   "configAddFabricConnectionsRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "connections": [
      {
       "local": {
        "portName": "Ethernet1_19",
        "nodeName": "node-leaf0"
       },
       "remote": {
        "portName": "Ethernet1_19",
        "nodeName": "node-spine0"
       }
      },
      {
       "local": {
        "portName": "Ethernet1_22",
        "nodeName": "node-leaf1"
       },
       "remote": {
        "portName": "Ethernet1_22",
        "nodeName": "node-spine0"
       }
      }
     ]
    }
   },
   "configAddFabricConnectionsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "connections": [
      {
       "id": "79d9bf63-2101-4a4d-a29a-82df1bb959bf",
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "local": {
        "portName": "Ethernet1_19",
        "nodeName": "node-leaf0"
       },
       "remote": {
        "portName": "Ethernet1_19",
        "nodeName": "node-spine0"
       }
      },
      {
       "id": "f78582f1-19e6-4efc-89e7-1e3c54ab46e1",
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "local": {
        "portName": "Ethernet1_22",
        "nodeName": "node-leaf1"
       },
       "remote": {
        "portName": "Ethernet1_22",
        "nodeName": "node-spine0"
       }
      }
     ]
    }
   },
   "configAddFabricNodesRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "nodes": [
      {
       "name": "node-leaf0",
       "description": "example fabric node leaf zero",
       "enabled": true,
       "serialNumber": "RESTAA2000",
       "modelName": "HF6100-60L4D",
       "roles": [
        "LEAF"
       ],
       "labels": [
        "TAG_ONE_ZERO"
       ]
      },
      {
       "name": "node-leaf1",
       "description": "example fabric node leaf one",
       "enabled": true,
       "serialNumber": "RESTAA2001",
       "modelName": "HF6100-32D"
      },
      {
       "name": "node-spine0",
       "description": "example fabric node spine zero",
       "enabled": true,
       "serialNumber": "RESTAA2002",
       "modelName": "HF6100-32D",
       "roles": [
        "SPINE"
       ]
      },
      {
       "name": "node-spine1",
       "description": "example fabric node spine one",
       "enabled": true,
       "serialNumber": "RESTAA1001",
       "modelName": "HF6100-32D",
       "roles": [
        "SPINE"
       ]
      }
     ]
    }
   },
   "configAddFabricNodesResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "nodes": [
      {
       "nodeId": "c3c62e65-97dd-42ce-8e72-c6f96efbe50f",
       "name": "node-leaf0",
       "deviceId": "de-ad-00-00-01-04",
       "description": "example fabric node leaf zero",
       "enabled": true,
       "serialNumber": "RESTAA2000",
       "modelName": "HF6100-60L4D",
       "roles": [
        "LEAF"
       ],
       "labels": [
        "TAG_ONE_ZERO"
       ]
      },
      {
       "nodeId": "35c3900a-ebef-4950-9bdf-59e39ef60107",
       "name": "node-leaf1",
       "deviceId": "de-ad-00-00-01-05",
       "description": "example fabric node leaf one",
       "enabled": true,
       "serialNumber": "RESTAA2001",
       "modelName": "HF6100-32D",
       "roles": [
        "LEAF"
       ]
      },
      {
       "nodeId": "d85f664f-9270-4a0a-833d-9d3f38cd4b32",
       "name": "node-spine0",
       "deviceId": "de-ad-00-00-01-06",
       "description": "example fabric node spine zero",
       "enabled": true,
       "serialNumber": "RESTAA2002",
       "modelName": "HF6100-32D",
       "roles": [
        "SPINE"
       ]
      },
      {
       "nodeId": "37653679-1043-46de-9da0-006458518ee6",
       "name": "node-spine1",
       "deviceId": "de-ad-00-00-01-07",
       "description": "example fabric node spine one",
       "enabled": true,
       "serialNumber": "RESTAA1001",
       "modelName": "HF6100-32D",
       "roles": [
        "SPINE"
       ]
      }
     ]
    }
   },
   "configAddFabricStaticRoutesRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "staticRoutes": [
      {
       "name": "Vrf-exampleOne-SR1",
       "enabled": true,
       "routes": [
        {
         "prefix": "10.10.10.0/24",
         "preference": 10,
         "discard": true
        },
        {
         "prefix": "11.10.10.0/24",
         "preference": 10,
         "discard": true
        }
       ]
      }
     ]
    }
   },
   "configAddFabricStaticRoutesResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "staticRoutes": [
      {
       "id": "04fd82ef-9480-449a-b9dc-ad988dfb1bca",
       "name": "Vrf-exampleOne-SR1",
       "enabled": true,
       "fabricId": "example-fabric",
       "routes": [
        {
         "prefix": "10.10.10.0/24",
         "preference": 10,
         "discard": true
        },
        {
         "prefix": "11.10.10.0/24",
         "preference": 10,
         "discard": true
        }
       ],
       "vrfId": "63070717-4135-4680-ab9e-7bc3d0748fa6"
      }
     ]
    }
   },
   "configAddFabricVniMembersRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configAddFabricVnisRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "vnis": [
      {
       "name": "example-fabric-vni1",
       "description": "These are some notes on my VNI",
       "labels": [
        "FABRIC_VNI_ONE_1",
        "FABRIC_VNI_ONE_2"
       ],
       "enabled": true,
       "vni": 1400000
      },
      {
       "name": "example-fabric-vni2",
       "description": "These are some notes on my VNI",
       "labels": [
        "FABRIC_VNI_TWO_1"
       ],
       "enabled": true,
       "vni": 1500000
      }
     ]
    }
   },
   "configAddFabricVnisResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "vnis": [
      {
       "id": "ee3e6931-5821-4cbe-910f-37da88ddde0e",
       "name": "example-fabric-vni1",
       "description": "These are some notes on my VNI",
       "labels": [
        "FABRIC_VNI_ONE_1",
        "FABRIC_VNI_ONE_2"
       ],
       "enabled": true,
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "vni": 1400000
      },
      {
       "id": "f3f3eed9-2f6d-498c-afdd-3b9316d6f506",
       "name": "example-fabric-vni2",
       "description": "These are some notes on my VNI",
       "labels": [
        "FABRIC_VNI_TWO_1"
       ],
       "enabled": true,
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "vni": 1500000
      }
     ]
    }
   },
   "configAddFabricVrfsRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "vrfs": [
      {
       "name": "Vrf-exampleOne",
       "enabled": true
      },
      {
       "name": "Vrf-exampleTwo",
       "description": "Test Vrf for example-fabric",
       "labels": [
        "VRF_LABEL_ONE",
        "vrf_label_two",
        "vrf label three"
       ],
       "enabled": true
      },
      {
       "name": "Vrf-exampleThree",
       "enabled": true
      }
     ]
    }
   },
   "configAddFabricVrfsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "vrfs": [
      {
       "id": "28dc2e3a-d1c3-4c84-a1b5-7e8c25486691",
       "name": "Vrf-exampleOne",
       "enabled": true,
       "fabricId": "dfb30caa-2555-4ae7-b882-3976e46e79b2",
       "vni": 12001000
      },
      {
       "id": "973eff50-b5d5-4034-9a8c-916a3ab653a1",
       "name": "Vrf-exampleThree",
       "enabled": true,
       "fabricId": "dfb30caa-2555-4ae7-b882-3976e46e79b2",
       "vni": 12001002
      },
      {
       "id": "9c8187a0-99ba-45ea-945b-647061d097d1",
       "name": "Vrf-exampleTwo",
       "description": "Test Vrf for example-fabric",
       "labels": [
        "VRF_LABEL_ONE",
        "vrf_label_two",
        "vrf label three"
       ],
       "enabled": true,
       "fabricId": "dfb30caa-2555-4ae7-b882-3976e46e79b2",
       "vni": 12001001
      },
      {
       "id": "3ed068e3-69f3-4342-b9a6-a120f3eef0a5",
       "name": "Vrf12000000",
       "enabled": true,
       "fabricId": "dfb30caa-2555-4ae7-b882-3976e46e79b2",
       "isDefault": true,
       "vni": 12000000
      }
     ]
    }
   },
   "configAddFabricsRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "fabrics": [
      {
       "name": "example-fabric",
       "description": "An example fabric for demonstration",
       "location": "CA-95134",
       "address": "300 East Tasman Drive",
       "city": "San Jose",
       "country": "US",
       "labels": [
        "TAG_ONE",
        "TAG_TWO"
       ]
      }
     ]
    }
   },
   "configAddFabricsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "fabrics": [
      {
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "name": "example-fabric",
       "description": "An example fabric, for demonstration.",
       "location": "CA-95134",
       "address": "300 East Tasman Drive",
       "city": "San Jose",
       "country": "US",
       "labels": [
        "TAG_ONE",
        "TAG_TWO"
       ]
      }
     ]
    }
   },
   "configAddManagementPortsRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "ports": [
      {
       "name": "eth0",
       "ipv4Address": "10.1.1.250/31",
       "ipv4Gateway": "10.1.1.251",
       "ipv6Address": "2a02:1243:5687:0:9c09:2c7a:7c78:9ffc/64",
       "ipv6Gateway": "2a02:1243:5687:0:8d91:ba6b:b24d:9b41",
       "dnsAddresses": [
        "8.8.8.8",
        "8.8.4.4"
       ],
       "proxyAddress": "https://10.1.1.10:8080",
       "proxyUsername": "admin",
       "proxyPassword": "admin123",
       "enabled": true,
       "cloudUrls": [
        "https://a.b.com"
       ],
       "setProxyPassword": true,
       "noProxy": [
        "10.0.0.0/8",
        "68.0.0.0/8",
        "72.0.0.0/8",
        "172.0.0.0/8",
        "172.0.0.0/8",
        "173.0.0.0/8",
        "cisco.com",
        "localhost",
        "127.0.0.1",
        ".local"
       ]
      }
     ]
    }
   },
   "configAddManagementPortsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "ports": [
      {
       "id": "da141c97-9402-4593-9f99-7b74b7d9964e",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "name": "eth0",
       "description": "Management Ethernet Port Configuration",
       "ipv4Address": "10.1.1.250/31",
       "ipv4Gateway": "10.1.1.251",
       "ipv6Address": "2a02:1243:5687:0:9c09:2c7a:7c78:9ffc/64",
       "ipv6Gateway": "2a02:1243:5687:0:8d91:ba6b:b24d:9b41",
       "dnsAddresses": [
        "8.8.8.8",
        "8.8.4.4"
       ],
       "proxyAddress": "https://10.1.1.10:8080",
       "proxyUsername": "admin",
       "proxyCredentialsId": "7828d0b5-209f-4170-972d-94e3975fde97",
       "proxyPassword": "******",
       "enabled": true,
       "ipv4ConfigType": "CONFIG_TYPE_STATIC",
       "ipv6ConfigType": "CONFIG_TYPE_STATIC",
       "cloudUrls": [
        "https://a.b.com"
       ],
       "configOrigin": "CONFIG_ORIGIN_CLOUD",
       "metadata": {
        "revisionId": "1",
        "createdBy": "cisco/hyperfabric-example@cisco.com",
        "createdAt": "2024-09-07T22:16:21.209594Z",
        "modifiedBy": "cisco/hyperfabric-example@cisco.com",
        "modifiedAt": "2024-09-07T22:16:21.209594Z"
       },
       "noProxy": [
        "10.0.0.0/8",
        "68.0.0.0/8",
        "72.0.0.0/8",
        "172.0.0.0/8",
        "172.0.0.0/8",
        "173.0.0.0/8",
        "cisco.com",
        "localhost",
        "127.0.0.1",
        ".local"
       ]
      }
     ]
    }
   },
   "configBindDeviceRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configBindDeviceResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configCommitFabricCandidateRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "comments": "Test commit comment"
    }
   },
   "configCommitFabricCandidateResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "fabricId": "example-fabric",
     "committed": true
    }
   },
   "configFabricVniMembersResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGenerateCablingPlanRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGenerateCablingPlanResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetCablingPlanResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetFabricCandidateResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "fabricId": "e073685c-d5f9-428e-b1e8-ea00db700243",
     "name": "default",
     "active": true,
     "txnId": "1035",
     "createdBy": "cisco/hyperfabric-example@cisco.com",
     "createdAt": "2024-09-30T23:25:28.325706Z",
     "events": [
      {
       "eventId": "1780",
       "timestamp": "2024-09-30T23:25:28.325706Z",
       "username": "cisco/hyperfabric-example@cisco.com",
       "objectType": "NODE",
       "objectId": "80a81623-0992-4b55-8675-a6c678dbf6f5",
       "objectName": "example-fabric-HF6100-60L4D-leaf2",
       "operation": "CREATE"
      },
      {
       "eventId": "1779",
       "timestamp": "2024-09-30T23:25:28.325706Z",
       "username": "cisco/hyperfabric-example@cisco.com",
       "objectType": "NODE",
       "objectId": "f34afebf-c4f6-4f86-bf08-28edf8ff9daa",
       "objectName": "example-fabric-HF6100-60L4D-leaf1",
       "operation": "CREATE"
      },
      {
       "eventId": "1778",
       "timestamp": "2024-09-30T23:25:28.325706Z",
       "username": "cisco/hyperfabric-example@cisco.com",
       "objectType": "NODE",
       "objectId": "a6ddc7ee-3afc-4467-983f-842271de1ff9",
       "objectName": "example-fabric-HF6100-32D-leaf2",
       "operation": "CREATE"
      },
      {
       "eventId": "1777",
       "timestamp": "2024-09-30T23:25:28.325706Z",
       "username": "cisco/hyperfabric-example@cisco.com",
       "objectType": "NODE",
       "objectId": "87d5fa3f-4340-4cdd-86bd-d99abc4affcf",
       "objectName": "example-fabric-HF6100-32D-leaf1",
       "operation": "CREATE"
      },
      {
       "eventId": "1776",
       "timestamp": "2024-09-30T23:25:28.325706Z",
       "username": "cisco/hyperfabric-example@cisco.com",
       "objectType": "NODE",
       "objectId": "fa62591a-cb38-48fa-acd1-97cf4f30d2f7",
       "objectName": "example-fabric-HF6100-32D-spine1",
       "operation": "CREATE"
      },
      {
       "eventId": "1775",
       "timestamp": "2024-09-30T23:25:28.325706Z",
       "username": "cisco/hyperfabric-example@cisco.com",
       "objectType": "FABRIC_TRANSACTION",
       "objectId": "e073685c-d5f9-428e-b1e8-ea00db700243",
       "objectName": "example-fabric",
       "operation": "CREATE"
      }
     ]
    }
   },
   "configGetFabricCandidatesResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "candidates": [
      {
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "name": "default",
       "active": true,
       "txnId": "2261",
       "createdBy": "cisco/hyperfabric-example@cisco.com",
       "createdAt": "2024-09-07T20:42:59.159343Z",
       "events": [
        {
         "eventId": "11147",
         "timestamp": "2024-09-07T22:17:19.031727Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "MANAGEMENT_PORT",
         "objectId": "da141c97-9402-4593-9f99-7b74b7d9964e",
         "objectName": "eth01",
         "parentId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
         "operation": "UPDATE"
        },
        {
         "eventId": "11146",
         "timestamp": "2024-09-07T22:16:21.208334Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "MANAGEMENT_PORT",
         "objectId": "da141c97-9402-4593-9f99-7b74b7d9964e",
         "objectName": "eth01",
         "parentId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
         "operation": "CREATE"
        },
        {
         "eventId": "11145",
         "timestamp": "2024-09-07T21:03:06.010002Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "NODE",
         "objectId": "9a4ef85f-5cd2-4813-a235-953a3d39332b",
         "objectName": "node-spine1",
         "operation": "CREATE"
        },
        {
         "eventId": "11144",
         "timestamp": "2024-09-07T21:03:06.010002Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "NODE",
         "objectId": "17f37f9d-8659-4b17-8709-9bf0789ded72",
         "objectName": "node-spine0",
         "operation": "CREATE"
        },
        {
         "eventId": "11143",
         "timestamp": "2024-09-07T21:03:06.010002Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "NODE",
         "objectId": "77a14049-ade1-4da2-8204-00ee7db4b9dc",
         "objectName": "node-leaf1",
         "operation": "CREATE"
        },
        {
         "eventId": "11142",
         "timestamp": "2024-09-07T21:03:06.010002Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "NODE",
         "objectId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
         "objectName": "node-leaf0",
         "operation": "CREATE"
        },
        {
         "eventId": "11141",
         "timestamp": "2024-09-07T21:02:10.013382Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "FABRIC",
         "objectId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
         "objectName": "example-fabric",
         "operation": "UPDATE"
        },
        {
         "eventId": "11140",
         "timestamp": "2024-09-07T20:48:07.481369Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "FABRIC",
         "objectId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
         "objectName": "example-one",
         "operation": "UPDATE"
        },
        {
         "eventId": "11139",
         "timestamp": "2024-09-07T20:46:05.010508Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "FABRIC",
         "objectId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
         "objectName": "Example One",
         "operation": "UPDATE"
        },
        {
         "eventId": "11137",
         "timestamp": "2024-09-07T20:42:59.159343Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "FABRIC",
         "objectId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
         "objectName": "example-fabric",
         "operation": "CREATE"
        },
        {
         "eventId": "11136",
         "timestamp": "2024-09-07T20:42:59.159343Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "FABRIC_TRANSACTION",
         "objectId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
         "objectName": "example-fabric",
         "operation": "CREATE"
        }
       ]
      }
     ],
     "pagination": {
      "total": 1,
      "cursor": "MTA6MTc6MDAwMDAwMDAwMjI2MSQxNTowMDAwMDAwMDAwMDAx",
      "final": true
     }
    }
   },
   "configGetFabricConnection": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetFabricConnectionsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "connections": [
      {
       "id": "5e694530-40a0-4b27-a88d-2336e351c4d8",
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "local": {
        "portName": "Ethernet1_1",
        "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
        "nodeName": "node-leaf0"
       },
       "remote": {
        "portName": "Ethernet1_1",
        "nodeId": "17f37f9d-8659-4b17-8709-9bf0789ded72",
        "nodeName": "node-spine0"
       },
       "osType": "HYPER_FABRIC"
      },
      {
       "id": "8fcd5ae2-26d8-45ca-8e2e-10442f5b872c",
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "local": {
        "portName": "Ethernet1_8",
        "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
        "nodeName": "node-leaf0"
       },
       "remote": {
        "portName": "Ethernet1_1",
        "nodeId": "9a4ef85f-5cd2-4813-a235-953a3d39332b",
        "nodeName": "node-spine1"
       },
       "osType": "HYPER_FABRIC"
      },
      {
       "id": "04094927-c00e-42b7-8e75-fd38404e9158",
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "local": {
        "portName": "Ethernet1_1",
        "nodeId": "77a14049-ade1-4da2-8204-00ee7db4b9dc",
        "nodeName": "node-leaf1"
       },
       "remote": {
        "portName": "Ethernet1_8",
        "nodeId": "17f37f9d-8659-4b17-8709-9bf0789ded72",
        "nodeName": "node-spine0"
       },
       "osType": "HYPER_FABRIC"
      },
      {
       "id": "06eff3e6-2630-4cd1-8d0f-36de7622bdc6",
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "local": {
        "portName": "Ethernet1_8",
        "nodeId": "77a14049-ade1-4da2-8204-00ee7db4b9dc",
        "nodeName": "node-leaf1"
       },
       "remote": {
        "portName": "Ethernet1_8",
        "nodeId": "9a4ef85f-5cd2-4813-a235-953a3d39332b",
        "nodeName": "node-spine1"
       },
       "osType": "HYPER_FABRIC"
      }
     ]
    }
   },
   "configGetFabricNodeResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
     "name": "node-leaf0",
     "deviceId": "de-ad-00-00-05-83",
     "description": "example fabric node leaf zero",
     "enabled": true,
     "serialNumber": "RESTAA2000",
     "modelName": "8102-64H-O",
     "roles": [
      "LEAF"
     ],
     "labels": [
      "TAG_ONE_ZERO"
     ],
     "annotations": [
      {
       "name": "position",
       "value": "LF001"
      }
     ]
    }
   },
   "configGetFabricNodesResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "nodes": [
      {
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "name": "node-leaf0",
       "deviceId": "de-ad-00-00-05-83",
       "description": "example fabric node leaf zero",
       "enabled": true,
       "serialNumber": "RESTAA2000",
       "modelName": "8102-64H-O",
       "roles": [
        "LEAF"
       ],
       "labels": [
        "TAG_ONE_ZERO"
       ],
       "annotations": [
        {
         "name": "position",
         "value": "LF001"
        }
       ]
      },
      {
       "nodeId": "77a14049-ade1-4da2-8204-00ee7db4b9dc",
       "name": "node-leaf1",
       "deviceId": "de-ad-00-00-05-84",
       "description": "example fabric node leaf one",
       "enabled": true,
       "serialNumber": "RESTAA2001",
       "modelName": "8102-64H-O",
       "roles": [
        "LEAF"
       ],
       "annotations": [
        {
         "name": "position",
         "value": "LF002"
        }
       ]
      },
      {
       "nodeId": "17f37f9d-8659-4b17-8709-9bf0789ded72",
       "name": "node-spine0",
       "deviceId": "de-ad-00-00-05-85",
       "description": "example fabric node spine zero",
       "enabled": true,
       "serialNumber": "RESTAA2002",
       "modelName": "8102-64H-O",
       "roles": [
        "SPINE"
       ],
       "annotations": [
        {
         "name": "position",
         "value": "SP001"
        }
       ]
      },
      {
       "nodeId": "9a4ef85f-5cd2-4813-a235-953a3d39332b",
       "name": "node-spine1",
       "deviceId": "de-ad-00-00-05-86",
       "description": "example fabric node spine one",
       "enabled": true,
       "serialNumber": "RESTAA1001",
       "modelName": "8101-32H-O",
       "roles": [
        "SPINE"
       ],
       "annotations": [
        {
         "name": "position",
         "value": "SP002"
        }
       ]
      }
     ]
    }
   },
   "configGetFabricResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
     "name": "example-fabric",
     "description": "Updated description of example-fabric.",
     "location": "DC-1000",
     "address": "725 Alder Drive",
     "city": "Milpitas",
     "country": "US",
     "metadata": {
      "revisionId": "3",
      "createdBy": "cisco/hyperfabric-example@cisco.com",
      "createdAt": "2024-09-07T20:42:59.161229Z",
      "modifiedBy": "cisco/hyperfabric-example@cisco.com",
      "modifiedAt": "2024-09-07T20:48:07.481461Z"
     }
    }
   },
   "configGetFabricStaticRouteResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "25ac3b72-1414-4214-97f1-1586c8ea76de",
     "name": "Vrf-exampleOne",
     "enabled": true,
     "fabricId": "99999089-a2b2-44d2-9e4e-1c1b8f67861c",
     "routes": [
      {
       "prefix": "10.10.10.0/24",
       "preference": 10,
       "discard": true
      }
     ],
     "vrfId": "63070717-4135-4680-ab9e-7bc3d0748fa6"
    }
   },
   "configGetFabricStaticRoutesResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "staticRoutes": [
      {
       "id": "25ac3b72-1414-4214-97f1-1586c8ea76de",
       "name": "Vrf-exampleOne",
       "enabled": true,
       "fabricId": "99999089-a2b2-44d2-9e4e-1c1b8f67861c",
       "routes": [
        {
         "prefix": "10.10.10.0/24",
         "preference": 10,
         "discard": true
        }
       ],
       "vrfId": "63070717-4135-4680-ab9e-7bc3d0748fa6"
      }
     ]
    }
   },
   "configGetFabricVniResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "f3f3eed9-2f6d-498c-afdd-3b9316d6f506",
     "name": "example-fabric-vni2",
     "description": "These are some notes on my VNI",
     "labels": [
      "FABRIC_VNI_TWO_1"
     ],
     "enabled": true,
     "metadata": {
      "revisionId": "1",
      "createdBy": "cisco/hyperfabric-example@cisco.com",
      "createdAt": "2024-09-07T23:49:54.596634Z",
      "modifiedBy": "cisco/hyperfabric-example@cisco.com",
      "modifiedAt": "2024-09-07T23:49:54.596634Z"
     },
     "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
     "vni": 1500000
    }
   },
   "configGetFabricVnisResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "vnis": [
      {
       "id": "ee3e6931-5821-4cbe-910f-37da88ddde0e",
       "name": "example-fabric-vni1",
       "description": "These are some notes on my VNI",
       "labels": [
        "FABRIC_VNI_ONE_1",
        "FABRIC_VNI_ONE_2"
       ],
       "enabled": true,
       "metadata": {
        "revisionId": "1",
        "createdBy": "cisco/hyperfabric-example@cisco.com",
        "createdAt": "2024-09-07T23:49:54.596634Z",
        "modifiedBy": "cisco/hyperfabric-example@cisco.com",
        "modifiedAt": "2024-09-07T23:49:54.596634Z"
       },
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "vni": 1400000
      },
      {
       "id": "f3f3eed9-2f6d-498c-afdd-3b9316d6f506",
       "name": "example-fabric-vni2",
       "description": "These are some notes on my VNI",
       "labels": [
        "FABRIC_VNI_TWO_1"
       ],
       "enabled": true,
       "metadata": {
        "revisionId": "1",
        "createdBy": "cisco/hyperfabric-example@cisco.com",
        "createdAt": "2024-09-07T23:49:54.596634Z",
        "modifiedBy": "cisco/hyperfabric-example@cisco.com",
        "modifiedAt": "2024-09-07T23:49:54.596634Z"
       },
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "vni": 1500000
      }
     ]
    }
   },
   "configGetFabricVrfResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "bda7fee1-0d1b-482a-b72c-504bafb0254b",
     "name": "Vrf12000000",
     "enabled": true,
     "metadata": {
      "revisionId": "1",
      "createdBy": "cisco/hyperfabric-example@cisco.com",
      "createdAt": "2024-09-07T23:49:54.596634Z",
      "modifiedBy": "cisco/hyperfabric-example@cisco.com",
      "modifiedAt": "2024-09-07T23:49:54.596634Z"
     },
     "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
     "isDefault": true,
     "vni": 12000000
    }
   },
   "configGetFabricVrfsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "vrfs": [
      {
       "id": "bda7fee1-0d1b-482a-b72c-504bafb0254b",
       "name": "Vrf12000000",
       "enabled": true,
       "metadata": {
        "revisionId": "1",
        "createdBy": "cisco/hyperfabric-example@cisco.com",
        "createdAt": "2024-09-07T23:49:54.596634Z",
        "modifiedBy": "cisco/hyperfabric-example@cisco.com",
        "modifiedAt": "2024-09-07T23:49:54.596634Z"
       },
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "isDefault": true,
       "vni": 12000000
      }
     ]
    }
   },
   "configGetFabricsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "fabrics": [
      {
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "name": "example-fabric",
       "description": "An example fabric, for demonstration.",
       "location": "CA-95134",
       "address": "300 East Tasman Drive",
       "city": "San Jose",
       "country": "US",
       "labels": [
        "TAG_ONE",
        "TAG_TWO"
       ]
      }
     ]
    }
   },
   "configGetManagementPortResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetManagementPortsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "ports": [
      {
       "id": "da141c97-9402-4593-9f99-7b74b7d9964e",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "name": "eth0",
       "description": "Management Ethernet Port Configuration",
       "ipv4Address": "10.10.10.1/24",
       "ipv4Gateway": "10.10.10.254",
       "ipv6Address": "2a02:1243:5687:0:9c09:2c7a:7c78:9ffc/33",
       "ipv6Gateway": "2a02:1243:5687:0:8d91:ba6b:b24d:9b41",
       "dnsAddresses": [
        "9.9.9.9/32",
        "8.8.8.8"
       ],
       "proxyAddress": "https://10.10.1.10:8080",
       "proxyUsername": "adminUser",
       "proxyCredentialsId": "7828d0b5-209f-4170-972d-94e3975fde97",
       "proxyPassword": "******",
       "enabled": true,
       "ipv4ConfigType": "CONFIG_TYPE_STATIC",
       "ipv6ConfigType": "CONFIG_TYPE_DHCP",
       "cloudUrls": [
        "https://a.example.com",
        "https://b.example.com"
       ],
       "configOrigin": "CONFIG_ORIGIN_CLOUD",
       "noProxy": [
        "10.0.0.5",
        "2001:db8:3333:4444:5555:6666:7777:8888/8",
        "68.0.0.0/8",
        "72.0.0.0/8",
        "172.0.0.1/8",
        ".cisco.com",
        ".local"
       ]
      }
     ]
    }
   },
   "configGetPortResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "ba9b3d85-c8fb-4163-897a-6f1ef810d5e5",
     "name": "Ethernet1_31",
     "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
     "enabled": true,
     "index": 31,
     "linecard": 1,
     "roles": [
      "UNUSED_PORT"
     ],
     "mtu": 9100,
     "speed": "400G"
    }
   },
   "configGetPortsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "ports": [
      {
       "id": "a2e7f059-d8fa-4338-b708-ad88880f53a5",
       "name": "Ethernet1_1",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 1,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "79d85527-deff-411c-b4ce-3e65bf7f26b6",
       "name": "Ethernet1_2",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 2,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "5b0a077c-dfb8-4a7a-9513-ab9885d4cb2d",
       "name": "Ethernet1_3",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 3,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "0f7c23c9-70a7-4bd3-895b-1409284b46fc",
       "name": "Ethernet1_4",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 4,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "02e90e01-baa7-47cb-bafc-e8c1f607b96d",
       "name": "Ethernet1_5",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 5,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "b1836d46-cdcc-47b9-9221-f0cc348ac136",
       "name": "Ethernet1_6",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 6,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "0f44a759-1d34-4bbc-b962-94e86f7d8690",
       "name": "Ethernet1_7",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 7,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "ff1a5a69-87ad-4cd1-a297-657970f3300e",
       "name": "Ethernet1_8",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 8,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "85a57d79-672d-41e6-a11b-3cb720081afa",
       "name": "Ethernet1_9",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 9,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "9d10bcd8-dda2-4b31-8170-200f7be2c509",
       "name": "Ethernet1_10",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 10,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "17f97356-891a-49c8-99d6-1d88560a2e42",
       "name": "Ethernet1_11",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 11,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "1cac326f-e005-4f77-a431-792be1b64514",
       "name": "Ethernet1_12",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 12,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "5d2db947-0442-436a-a9ec-0ec1d4ac5c5b",
       "name": "Ethernet1_13",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 13,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "644814be-847b-493e-bec6-d25393ad2ba0",
       "name": "Ethernet1_14",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 14,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "47de7950-0307-4080-86e9-4e500fd9c3ec",
       "name": "Ethernet1_15",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 15,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "b0774dc7-e533-4bdb-92e7-6e40538ad0b4",
       "name": "Ethernet1_16",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 16,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "d8c1f18e-d6d2-451a-9d16-a7874dec0972",
       "name": "Ethernet1_17",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 17,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "2837e8a8-3a89-4b62-8112-1d56ac1c305d",
       "name": "Ethernet1_18",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 18,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "6ef64b79-be4a-46fd-97de-a4b201cae651",
       "name": "Ethernet1_19",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 19,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "4d5d29d8-c4f8-44fe-b19b-4babc13cd8dd",
       "name": "Ethernet1_20",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 20,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "7b5f34bd-2022-4863-9ea5-1752feabc496",
       "name": "Ethernet1_21",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 21,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "c6b25417-deed-4430-81af-8ec101804875",
       "name": "Ethernet1_22",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 22,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "976bbbea-21bf-4fa6-b875-ec35c5514915",
       "name": "Ethernet1_23",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 23,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "b96ec97b-9863-446e-934b-33bccf1940cd",
       "name": "Ethernet1_24",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 24,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "8cb7e9c4-3862-4de5-8550-26e47e879c37",
       "name": "Ethernet1_25",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 25,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "4627d67e-3917-456e-bec9-368b145153dc",
       "name": "Ethernet1_26",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 26,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "e7c6287d-7e8a-4af1-8804-a6335a521d9c",
       "name": "Ethernet1_27",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 27,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "7dcf338b-5bbe-481e-9d16-9576ba776851",
       "name": "Ethernet1_28",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 28,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "ce3740e0-db58-435f-9dc7-0c88710d558d",
       "name": "Ethernet1_29",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 29,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "61d8c491-ec9c-4526-9c5c-62ff7504f3aa",
       "name": "Ethernet1_30",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 30,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "ba9b3d85-c8fb-4163-897a-6f1ef810d5e5",
       "name": "Ethernet1_31",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 31,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "d2c9f3f5-362c-4bb1-8451-2c6ae63e1b66",
       "name": "Ethernet1_32",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 32,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      }
     ]
    }
   },
   "configNode": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configReviewFabricCandidateRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "comments": "Test commit comment"
    }
   },
   "configReviewFabricCandidateResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "fabricId": "example-fabric"
    }
   },
   "configSetFabricConnectionsRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "connections": [
      {
       "local": {
        "portName": "Ethernet1_1",
        "nodeName": "node-leaf0"
       },
       "remote": {
        "portName": "Ethernet1_1",
        "nodeName": "node-spine0"
       }
      },
      {
       "local": {
        "portName": "Ethernet1_1",
        "nodeName": "node-leaf1"
       },
       "remote": {
        "portName": "Ethernet1_8",
        "nodeName": "node-spine0"
       }
      },
      {
       "local": {
        "portName": "Ethernet1_8",
        "nodeName": "node-leaf0"
       },
       "remote": {
        "portName": "Ethernet1_1",
        "nodeName": "node-spine1"
       }
      },
      {
       "local": {
        "portName": "Ethernet1_8",
        "nodeName": "node-leaf1"
       },
       "remote": {
        "portName": "Ethernet1_8",
        "nodeName": "node-spine1"
       }
      }
     ]
    }
   },
   "configSetFabricConnectionsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "connections": [
      {
       "id": "5e694530-40a0-4b27-a88d-2336e351c4d8",
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "local": {
        "portName": "Ethernet1_1",
        "nodeName": "node-leaf0"
       },
       "remote": {
        "portName": "Ethernet1_1",
        "nodeName": "node-spine0"
       }
      },
      {
       "id": "04094927-c00e-42b7-8e75-fd38404e9158",
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "local": {
        "portName": "Ethernet1_1",
        "nodeName": "node-leaf1"
       },
       "remote": {
        "portName": "Ethernet1_8",
        "nodeName": "node-spine0"
       }
      },
      {
       "id": "8fcd5ae2-26d8-45ca-8e2e-10442f5b872c",
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "local": {
        "portName": "Ethernet1_8",
        "nodeName": "node-leaf0"
       },
       "remote": {
        "portName": "Ethernet1_1",
        "nodeName": "node-spine1"
       }
      },
      {
       "id": "06eff3e6-2630-4cd1-8d0f-36de7622bdc6",
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "local": {
        "portName": "Ethernet1_8",
        "nodeName": "node-leaf1"
       },
       "remote": {
        "portName": "Ethernet1_8",
        "nodeName": "node-spine1"
       }
      }
     ]
    }
   },
   "configSetPortRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "name": "Ethernet1_19_1",
     "labels": [
      "PORT_ONE_FIVE"
     ],
     "annotations": [
      {
       "name": "port",
       "value": "unused"
      }
     ],
     "enabled": true,
     "roles": [
      "FABRIC_PORT"
     ]
    }
   },
   "configSetPortResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "c8ae152e-79ca-46cf-8be7-2adb3b80f912",
     "name": "Ethernet1_15",
     "labels": [
      "PORT_ONE_FIVE"
     ],
     "annotations": [
      {
       "name": "port",
       "value": "unused"
      }
     ],
     "enabled": true,
     "roles": [
      "UNUSED_PORT"
     ],
     "mtu": 9100
    }
   },
   "configSetPortsRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "ports": [
      {
       "name": "Ethernet1_1",
       "enabled": true,
       "roles": [
        "FABRIC_PORT"
       ]
      },
      {
       "name": "Ethernet1_2",
       "enabled": true,
       "roles": [
        "FABRIC_PORT"
       ]
      },
      {
       "name": "Ethernet1_3",
       "enabled": true,
       "roles": [
        "FABRIC_PORT"
       ]
      },
      {
       "name": "Ethernet1_4",
       "enabled": true,
       "roles": [
        "FABRIC_PORT"
       ]
      },
      {
       "name": "Ethernet1_5",
       "enabled": true,
       "roles": [
        "FABRIC_PORT"
       ]
      },
      {
       "name": "Ethernet1_6",
       "enabled": true,
       "roles": [
        "FABRIC_PORT"
       ]
      },
      {
       "name": "Ethernet1_7",
       "enabled": true,
       "roles": [
        "FABRIC_PORT"
       ]
      },
      {
       "name": "Ethernet1_8",
       "enabled": true,
       "roles": [
        "FABRIC_PORT"
       ]
      },
      {
       "name": "Ethernet1_19",
       "enabled": true,
       "roles": [
        "FABRIC_PORT"
       ]
      },
      {
       "name": "Ethernet1_22",
       "enabled": true,
       "roles": [
        "FABRIC_PORT"
       ]
      }
     ]
    }
   },
   "configSetPortsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "nodeId": "node-leaf1",
     "ports": [
      {
       "id": "e952d32e-3e27-439f-9c2a-160acb347625",
       "name": "Ethernet1_5",
       "nodeId": "77a14049-ade1-4da2-8204-00ee7db4b9dc",
       "enabled": true,
       "roles": [
        "HOST_PORT"
       ]
      },
      {
       "id": "a357480b-aae3-4c46-8e4f-8bc07520080e",
       "name": "Ethernet1_6",
       "nodeId": "77a14049-ade1-4da2-8204-00ee7db4b9dc",
       "enabled": true,
       "roles": [
        "HOST_PORT"
       ]
      },
      {
       "id": "de87b0dd-7bdd-41f1-a67b-0b9849d1577d",
       "name": "Ethernet1_7",
       "nodeId": "77a14049-ade1-4da2-8204-00ee7db4b9dc",
       "enabled": true,
       "roles": [
        "HOST_PORT"
       ]
      },
      {
       "id": "b3a585ed-511d-47d2-af20-7ada742538a4",
       "name": "Ethernet1_8",
       "nodeId": "77a14049-ade1-4da2-8204-00ee7db4b9dc",
       "enabled": true,
       "roles": [
        "HOST_PORT"
       ]
      }
     ]
    }
   },
   "configUpdateFabricNodeRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configUpdateFabricRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "name": "example-fabric",
     "description": "Updated description of example-fabric.",
     "location": "DC-1000",
     "address": "725 Alder Drive",
     "city": "Milpitas",
     "country": "US",
     "topology": "SPINE_LEAF"
    }
   },
   "configUpdateFabricResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
     "name": "example-fabric",
     "description": "Updated description of example-fabric.",
     "location": "DC-1000",
     "address": "725 Alder Drive",
     "city": "Milpitas",
     "country": "US"
    }
   },
   "configUpdateFabricStaticRouteRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "name": "Vrf-exampleOne-SR1",
     "enabled": true,
     "routes": [
      {
       "prefix": "10.10.10.0/24",
       "preference": 10,
       "discard": true
      },
      {
       "prefix": "11.10.10.0/24",
       "preference": 10,
       "discard": true
      },
      {
       "prefix": "12.10.10.0/24",
       "preference": 12,
       "discard": true
      }
     ]
    }
   },
   "configUpdateFabricStaticRouteResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "b7603506-0fe9-4c15-b80d-d73d9e2bdd5a",
     "name": "Vrf-exampleOne-SR1",
     "enabled": true,
     "fabricId": "example-fabric",
     "routes": [
      {
       "prefix": "10.10.10.0/24",
       "preference": 10,
       "discard": true
      },
      {
       "prefix": "11.10.10.0/24",
       "preference": 10,
       "discard": true
      },
      {
       "prefix": "12.10.10.0/24",
       "preference": 12,
       "discard": true
      }
     ],
     "vrfId": "Vrf-exampleOne"
    }
   },
   "configUpdateFabricVniRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "name": "example-fabric-vni2",
     "description": "These are some notes on my VNI",
     "labels": [
      "FABRIC_VNI_TWO_1"
     ],
     "enabled": true,
     "vni": 1500000,
     "svis": [
      {
       "ipv4Addresses": [
        "172.222.40.1/24"
       ],
       "enabled": true
      }
     ]
    }
   },
   "configUpdateFabricVniResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "f3f3eed9-2f6d-498c-afdd-3b9316d6f506",
     "name": "example-fabric-vni2",
     "description": "These are some notes on my VNI",
     "labels": [
      "FABRIC_VNI_TWO_1"
     ],
     "enabled": true,
     "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
     "vni": 1500000,
     "svis": [
      {
       "ipv4Addresses": [
        "172.222.40.1/24"
       ],
       "enabled": true
      }
     ]
    }
   },
   "configUpdateFabricVrfRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "name": "Vrf-examplevrf1",
     "annotations": [
      {
       "name": "position",
       "value": "1234"
      }
     ],
     "enabled": true,
     "isDefault": true
    }
   },
   "configUpdateFabricVrfResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "18a4001d-a7a1-4734-80a4-6b8ccd9f544b",
     "name": "Vrf-examplevrf1",
     "annotations": [
      {
       "name": "position",
       "value": "1234"
      }
     ],
     "enabled": true,
     "fabricId": "example-fabric",
     "vni": 12001003
    }
   },
   "configUpdateManagementPortRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "name": "eth0",
     "description": "Management Ethernet Port Configuration",
     "ipv4Address": "10.10.10.1/24",
     "ipv4Gateway": "10.10.10.254",
     "ipv6Address": "2a02:1243:5687:0:9c09:2c7a:7c78:9ffc/33",
     "ipv6Gateway": "2a02:1243:5687:0:8d91:ba6b:b24d:9b41",
     "dnsAddresses": [
      "9.9.9.9/32",
      "8.8.8.8"
     ],
     "proxyAddress": "https://10.10.1.10:8080",
     "proxyUsername": "adminUser",
     "proxyPassword": "ThisIsMyPassword",
     "enabled": true,
     "ipv4ConfigType": "CONFIG_TYPE_STATIC",
     "ipv6ConfigType": "CONFIG_TYPE_DHCP",
     "cloudUrls": [
      "https://a.example.com",
      "https://b.example.com"
     ],
     "configOrigin": "CONFIG_ORIGIN_CLOUD",
     "setProxyPassword": true,
     "noProxy": [
      "10.0.0.5",
      "2001:db8:3333:4444:5555:6666:7777:8888/8",
      "68.0.0.0/8",
      "72.0.0.0/8",
      "172.0.0.1/8",
      ".cisco.com",
      ".local"
     ]
    }
   },
   "configUpdateManagementPortResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "da141c97-9402-4593-9f99-7b74b7d9964e",
     "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
     "name": "eth0",
     "description": "Management Ethernet Port Configuration",
     "ipv4Address": "10.10.10.1/24",
     "ipv4Gateway": "10.10.10.254",
     "ipv6Address": "2a02:1243:5687:0:9c09:2c7a:7c78:9ffc/33",
     "ipv6Gateway": "2a02:1243:5687:0:8d91:ba6b:b24d:9b41",
     "dnsAddresses": [
      "9.9.9.9/32",
      "8.8.8.8"
     ],
     "proxyAddress": "https://10.10.1.10:8080",
     "proxyUsername": "adminUser",
     "proxyCredentialsId": "7828d0b5-209f-4170-972d-94e3975fde97",
     "proxyPassword": "******",
     "enabled": true,
     "ipv4ConfigType": "CONFIG_TYPE_STATIC",
     "ipv6ConfigType": "CONFIG_TYPE_DHCP",
     "cloudUrls": [
      "https://a.example.com",
      "https://b.example.com"
     ],
     "configOrigin": "CONFIG_ORIGIN_CLOUD",
     "metadata": {
      "revisionId": "2",
      "createdBy": "cisco/hyperfabric-example@cisco.com",
      "createdAt": "2024-09-07T22:16:21.209594Z",
      "modifiedBy": "cisco/hyperfabric-example@cisco.com",
      "modifiedAt": "2024-09-07T22:17:19.031961Z"
     },
     "noProxy": [
      "10.0.0.5",
      "2001:db8:3333:4444:5555:6666:7777:8888/8",
      "68.0.0.0/8",
      "72.0.0.0/8",
      "172.0.0.1/8",
      ".cisco.com",
      ".local"
     ]
    }
   },
   "miscGetDevicesForOrg": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "devices": [
      {
       "deviceId": "02-17-26-ec-01-02",
       "nodeId": "ea456ac1-002a-4234-8f1b-621cd6394daf",
       "serialNumber": "TFAB32377850",
       "modelName": "HF6100-32D",
       "fabricId": "2e91560c-c772-4a59-b2c5-55ec07a0aa6a",
       "roles": [
        "LEAF"
       ],
       "name": "node-leaf2",
       "nodeType": "NODE_SWITCH",
       "fabricName": "example-fabric"
      },
      {
       "deviceId": "02-17-58-16-01-00",
       "nodeId": "bbcab819-4cff-4a62-b3ea-5208b1a5c0b0",
       "serialNumber": "TFAB66177940",
       "modelName": "HF6100-32D",
       "fabricId": "2e91560c-c772-4a59-b2c5-55ec07a0aa6a",
       "roles": [
        "LEAF"
       ],
       "name": "node-leaf0",
       "nodeType": "NODE_SWITCH",
       "fabricName": "example-fabric"
      },
      {
       "deviceId": "02-17-99-15-00-01",
       "nodeId": "2d5993b1-ce8e-4c8e-9e94-6096c9a9e30c",
       "serialNumber": "TFAB48637318",
       "modelName": "HF6100-32D",
       "fabricId": "2e91560c-c772-4a59-b2c5-55ec07a0aa6a",
       "roles": [
        "SPINE"
       ],
       "name": "node-spine1",
       "nodeType": "NODE_SWITCH",
       "fabricName": "example-fabric"
      },
      {
       "deviceId": "02-17-a6-c8-00-00",
       "nodeId": "06cb5dd2-53b2-4769-a29e-5d7348161d07",
       "serialNumber": "TFAB91627504",
       "modelName": "HF6100-32D",
       "fabricId": "2e91560c-c772-4a59-b2c5-55ec07a0aa6a",
       "roles": [
        "SPINE"
       ],
       "name": "node-spine0",
       "nodeType": "NODE_SWITCH",
       "fabricName": "example-fabric"
      },
      {
       "deviceId": "02-17-ab-dc-01-03",
       "nodeId": "17e5e934-8a1e-4953-88d9-3009a5443ddb",
       "serialNumber": "TFAB20728764",
       "modelName": "HF6100-32D",
       "fabricId": "2e91560c-c772-4a59-b2c5-55ec07a0aa6a",
       "roles": [
        "LEAF"
       ],
       "name": "node-leaf3",
       "nodeType": "NODE_SWITCH",
       "fabricName": "example-fabric"
      },
      {
       "deviceId": "02-17-f3-93-01-01",
       "nodeId": "eb7e67e7-72bf-47af-8b87-c109f647c455",
       "serialNumber": "TFAB42283379",
       "modelName": "HF6100-32D",
       "fabricId": "2e91560c-c772-4a59-b2c5-55ec07a0aa6a",
       "roles": [
        "LEAF"
       ],
       "name": "node-leaf1",
       "nodeType": "NODE_SWITCH",
       "fabricName": "example-fabric"
      }
     ]
    }
   },
   "modelsVlanMember": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   }
  },
  "headers": {
   "cache-control": {
    "description": "Determines client caching behavior",
    "example": "no-cache",
    "schema": {
     "description": "Determines client caching behavior",
     "type": "string"
    }
   },
   "content-encoding": {
    "description": "The encoding the response data",
    "example": "N/A",
    "schema": {
     "description": "The encoding the response data",
     "type": "string"
    }
   },
   "content-type": {
    "description": "The MIME type the response data",
    "example": "application/json",
    "schema": {
     "description": "The MIME type the response data",
     "type": "string"
    }
   },
   "date": {
    "description": "A timestamp when the response was processed",
    "example": "Tue, 10 Sep 2024 17:02:52 GMT",
    "schema": {
     "description": "A timestamp when the response was processed",
     "pattern": "^(((Mon|Tue|Wed|Thu|Fri|Sat|Sun)),\\s[0-9]{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s([0-9]{4})\\s([0-9]{2}):([0-9]{2})(:([0-9]{2}))?\\sGMT$",
     "type": "string"
    }
   },
   "trackingid": {
    "description": "A unique value generated for the response for debugging purposes",
    "example": "b4c08212-0a64-4edd-971a-d78562e1786f",
    "schema": {
     "description": "A unique value generated for the response for debugging purposes",
     "type": "string"
    }
   }
  },
  "schemas": {
   "authBearerToken": {
    "description": "A Bearer Token is a JSON Web Token (JWT) used for authentication and authorization against the Cisco Nexus Hyperfabric REST API. The JWT is a compact, URL-safe means of representing a JSON object containing a set of key-value pairs as described in RFC 7159. It is passed as Bearer token in the Authentication header of every HTTP API request.",
    "properties": {
     "description": {
      "description": "The description is a user-defined field to store notes about the bearer token.",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The user-defined name of the bearer token.",
      "type": "string"
     },
     "notAfter": {
      "description": "The end date and time for the validity of the bearer token in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (e.g. `YYYY-MM-DDTHH:MM:SSZ`).",
      "format": "date-time",
      "type": "string"
     },
     "notBefore": {
      "description": "The start date and time for the validity of the bearer token in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (e.g. `YYYY-MM-DDTHH:MM:SSZ`).",
      "format": "date-time",
      "type": "string"
     },
     "scope": {
      "$ref": "#/components/schemas/modelsTokenScope"
     },
     "token": {
      "description": "This is a read-only field. The JWT token that represent the bearer token. The token is only available at the bearer token creation.",
      "readOnly": true,
      "type": "string"
     },
     "tokenId": {
      "description": "This is a read-only field. The unique identifier of the bearer token.",
      "readOnly": true,
      "type": "string"
     }
    },
    "type": "object"
   },
   "authBearerTokensResponse": {
    "description": "Returns a list of bearer tokens.",
    "properties": {
     "tokens": {
      "description": "A list of bearer tokens.",
      "items": {
       "$ref": "#/components/schemas/authBearerToken"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "authCreateBearerTokensRequest": {
    "description": "Create one or more new bearer tokens.",
    "properties": {
     "tokens": {
      "description": "The new tokens to be created.",
      "items": {
       "$ref": "#/components/schemas/authNewBearerToken"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "authCreateBearerTokensResponse": {
    "description": "Create a new bearer token. Currently only a single bearer token can be created at a time.",
    "properties": {
     "tokens": {
      "description": "The newly created tokens.",
      "items": {
       "$ref": "#/components/schemas/authBearerToken"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "authNewBearerToken": {
    "description": "A new bearer token definition.",
    "properties": {
     "description": {
      "description": "A description for the token.",
      "type": "string"
     },
     "name": {
      "description": "The user provided name for the token.",
      "type": "string"
     },
     "notAfter": {
      "description": "Sets the time after which the token cannot be used.",
      "format": "date-time",
      "type": "string"
     },
     "notBefore": {
      "description": "Sets the time at which the token can be used.",
      "format": "date-time",
      "type": "string"
     },
     "scope": {
      "$ref": "#/components/schemas/modelsTokenScope"
     }
    },
    "type": "object"
   },
   "authSetUsersRequest": {
    "description": "The request to add one or more users.",
    "properties": {
     "users": {
      "description": "A list of users to be added.",
      "items": {
       "$ref": "#/components/schemas/modelsUser"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "authUpdateUser": {
    "description": "Update a specific user.\nUpdate a specific user associated with the organization.",
    "properties": {
     "enabled": {
      "description": "Enable/disable the user.",
      "type": "boolean"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering Users.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "role": {
      "$ref": "#/components/schemas/modelsUserRole"
     }
    },
    "type": "object"
   },
   "authUsersResponse": {
    "description": "The response to a request for a list of users.",
    "properties": {
     "users": {
      "description": "A list of users.",
      "items": {
       "$ref": "#/components/schemas/modelsUser"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "commonErrCode": {
    "default": "ERR_CODE_INTERNAL",
    "description": "An error code provides additional information about a failed API request.",
    "enum": [
     "ERR_CODE_INTERNAL",
     "ERR_CODE_INVALID_UUID",
     "ERR_CODE_PERMISSION_DENIED",
     "ERR_CODE_OUT_OF_RANGE",
     "ERR_CODE_INVALID_TYPE",
     "ERR_CODE_INVALID_VALUE",
     "ERR_CODE_UNKNOWN_PARAMETER",
     "ERR_CODE_SERVICE_UNAVAILABLE",
     "ERR_CODE_NOT_FOUND",
     "ERR_CODE_NOT_IMPLEMENTED",
     "ERR_CODE_TOO_MANY_REQUESTS",
     "ERR_CODE_NO_KNOWN_CODE",
     "ERR_CODE_NO_REGISTERED_MARSHALERS",
     "ERR_CODE_UNSUPPORTED_CONTENT_TYPE",
     "ERR_CODE_DATA_CONFLICT",
     "ERR_CODE_UNAUTHORIZED",
     "ERR_CODE_READ_ONLY_FIELD",
     "ERR_CODE_MISSING_REQUIRED_ARG",
     "ERR_CODE_REQUEST_VALIDATION",
     "ERR_CODE_INVALID_CLI_CMD",
     "ERR_CODE_JSON_UNMARSHAL_ERROR",
     "ERR_CODE_JSON_MARSHAL_ERROR",
     "ERR_CODE_JSON_NO_DATA",
     "ERR_CODE_CSV_UNMARSHAL_ERROR",
     "ERR_CODE_CSV_MARSHAL_ERROR",
     "ERR_CODE_CSV_INVALID_DATA",
     "ERR_CODE_CSV_UNKNOWN_HEADER",
     "ERR_CODE_CSV_INVALID_VALUE",
     "ERR_CODE_CSV_NO_DATA",
     "ERR_CODE_YAML_NO_DATA",
     "ERR_CODE_YAML_UNMARSHAL_ERROR",
     "ERR_CODE_YAML_MARSHAL_ERROR",
     "ERR_CODE_PEM_NO_DATA",
     "ERR_CODE_PEM_UNMARSHAL_ERROR",
     "ERR_CODE_PEM_MARSHAL_ERROR",
     "ERR_CODE_PEM_INVALID_KEY_TYPE",
     "ERR_CODE_PEM_INVALID_KEY_DATA",
     "ERR_CODE_FORM_MARSHAL_ERROR",
     "ERR_CODE_FORM_UNMARSHAL_ERROR",
     "ERR_CODE_FORM_NO_DATA",
     "ERR_CODE_NO_FABRICS_DEFINED",
     "ERR_CODE_NO_FABRIC_CONNECTIONS_DEFINED",
     "ERR_CODE_TOO_MANY_FABRICS_DEFINED",
     "ERR_CODE_CHASSIS_ALREADY_ASSIGNED",
     "ERR_CODE_NO_PORTS_FOR_CHASSIS",
     "ERR_CODE_INVALID_CONFIRMATION_CODE"
    ],
    "type": "string"
   },
   "commonPaginationResponse": {
    "description": "PaginationResponse defines common pagination properties that all GET gRPC responses should have. PaginationResponse is to be embedded in all GET gRPC response messages.",
    "properties": {
     "cursor": {
      "description": "Last used search cursor. Next pagination will start after this.",
      "type": "string"
     },
     "final": {
      "description": "Indicates an end of query results.",
      "type": "boolean"
     },
     "total": {
      "description": "Total number of objects found by query.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "commonRestError": {
    "description": "A REST API Error is returned when the Hyperfabric service failed to execute the received REST API request to inform the user on the type of the error and other useful information for troubleshooting the request.",
    "properties": {
     "causes": {
      "description": "A list of underlying causes.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "critical": {
      "description": "The flag that indicates if the error is a critical error or not.",
      "type": "boolean"
     },
     "errCode": {
      "$ref": "#/components/schemas/commonErrCode"
     },
     "field": {
      "description": "The name of the relevant field.",
      "type": "string"
     },
     "message": {
      "description": "The error message.",
      "type": "string"
     },
     "notes": {
      "description": "Additional information about the error.",
      "type": "string"
     },
     "status": {
      "description": "The HTTP status code associated with the error.",
      "format": "int32",
      "type": "integer"
     },
     "trackingId": {
      "description": "A unique identifier for each request, used for tracking purposes.",
      "type": "string"
     },
     "value": {
      "description": "The value of the relevant field.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configActivityEvent": {
    "description": "ActivityEvent encapsulates an activity log event.",
    "properties": {
     "eventId": {
      "description": "The monotonically increasing event identifier.",
      "type": "string"
     },
     "objectId": {
      "description": "The object identifier.",
      "type": "string"
     },
     "objectName": {
      "description": "The object name (maybe empty).",
      "type": "string"
     },
     "objectType": {
      "$ref": "#/components/schemas/modelsObjectType"
     },
     "operation": {
      "$ref": "#/components/schemas/modelsOperation"
     },
     "parentId": {
      "description": "The object identifier of parent object.",
      "type": "string"
     },
     "parentType": {
      "$ref": "#/components/schemas/modelsObjectType"
     },
     "timestamp": {
      "description": "The activity event timestamp.",
      "format": "date-time",
      "type": "string"
     },
     "username": {
      "description": "The user who triggered the activity event.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configAddFabricConnectionsRequest": {
    "description": "The request to add one or more connections to a specific fabric.",
    "properties": {
     "connections": {
      "description": "A list of connections to be added to the fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsPortConnection"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configAddFabricNodesRequest": {
    "description": "The request to add one or more nodes to a specific fabric.",
    "properties": {
     "nodes": {
      "description": "A list of nodes to be added to the fabric.",
      "items": {
       "$ref": "#/components/schemas/configNode"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configAddFabricNodesResponse": {
    "description": "The response returned to a request to add a list of nodes to a specific fabric.",
    "properties": {
     "nodes": {
      "description": "The list of newly added nodes to the fabric.",
      "items": {
       "$ref": "#/components/schemas/configNode"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configAddFabricStaticRoutesRequest": {
    "description": "The request to add one or more static routes to a specific VRF in a fabric.",
    "properties": {
     "staticRoutes": {
      "description": "A list of static routes to be added to the VRF.",
      "items": {
       "$ref": "#/components/schemas/modelsStaticRoutes"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configAddFabricVnisRequest": {
    "description": "The request to add one or more VNIs to a specific fabric.",
    "properties": {
     "vnis": {
      "description": "A list of VNIs to be added to the fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsVni"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configAddFabricVrfsRequest": {
    "description": "The request to add one or more VRFs to a specific fabric.",
    "properties": {
     "vrfs": {
      "description": "A list of VRFs to be added to the fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsVrf"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configAddFabricsRequest": {
    "description": "The request to create a fabric.",
    "properties": {
     "fabrics": {
      "description": "A list of one fabric to be created.",
      "items": {
       "$ref": "#/components/schemas/configFabric"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configAddFabricsResponse": {
    "description": "The response returned to a request to create a fabric.",
    "properties": {
     "fabrics": {
      "description": "A list of the newly created fabric.",
      "items": {
       "$ref": "#/components/schemas/configFabric"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configAddManagementPortsRequest": {
    "description": "The request to add one or more management ports to a specific node in a fabric.",
    "properties": {
     "ports": {
      "description": "A list of management ports to be added to the node.",
      "items": {
       "$ref": "#/components/schemas/modelsManagementPort"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configBindDeviceResponse": {
    "description": "The response to a request to bind a specific device to a node in a fabric.",
    "properties": {
     "deviceId": {
      "description": "The device id or name of the device to bind to the node.",
      "type": "string"
     },
     "nodeId": {
      "description": "The node id or name of the node.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configCandidateReview": {
    "description": "CandidateReview represents a candidate review record. CandidateReview records are created when users add review comments.",
    "properties": {
     "comments": {
      "description": "Transaction comments.",
      "type": "string"
     },
     "createdAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "createdBy": {
      "description": "UserId of the user who added the comments.",
      "type": "string"
     },
     "operation": {
      "$ref": "#/components/schemas/modelsOperation"
     }
    },
    "type": "object"
   },
   "configCommitFabricCandidateRequest": {
    "description": "The request to commit a specific candidate configuration of a fabric.",
    "properties": {
     "comments": {
      "description": "The reasons for the candidate configuration commit.",
      "type": "string"
     },
     "revisionId": {
      "description": "The candidate configuration revision identifier.\nThe commit request will be rejected if the provided revision identifier is not the same than the most recent one known to the Hyperfabric service.",
      "type": "string"
     }
    },
    "required": [
     "comments"
    ],
    "type": "object"
   },
   "configCommitFabricCandidateResponse": {
    "description": "The response to a request to commit a specific candidate configuration of a fabric.",
    "properties": {
     "committed": {
      "description": "Indicates that the pending candidate configuration was committed.",
      "type": "boolean"
     },
     "fabricId": {
      "description": "The fabric identifier.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configFabric": {
    "description": "A Fabric is a collection of nodes, connections that represents the interconnections between the nodes, the configuration of the ports of the nodes and the logical constructs deployed across the fabric such as VRFs, logical networks named VNIs and other services.",
    "properties": {
     "address": {
      "description": "The physical street address where the fabric is located (E.g. 320 My Street).",
      "type": "string"
     },
     "annotations": {
      "description": "A list of name-value annotations to store user-defined data including complex data such as JSON associated with the fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "city": {
      "description": "The city in which the fabric is located (E.g. San Jose).",
      "type": "string"
     },
     "country": {
      "description": "The country code in which the fabric is located (E.g. US).",
      "type": "string"
     },
     "description": {
      "description": "The description is a user-defined field to store notes about the fabric.",
      "type": "string"
     },
     "fabricId": {
      "description": "This is a read-only field. The unique identifier of the fabric.",
      "readOnly": true,
      "type": "string"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering fabrics.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "location": {
      "description": "The location is a user-defined field to store information about the location of the fabric (E.g. SJC01).",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The user-defined name of the fabric.",
      "type": "string"
     },
     "topology": {
      "$ref": "#/components/schemas/modelsFabricTopology"
     }
    },
    "required": [
     "name"
    ],
    "type": "object"
   },
   "configFabricCandidate": {
    "description": "A candidate configuration represents a staging area for changes to a fabric and its children to be compiled before being reviewed and commited. Once commited, the candidate configuration becomes the running configuration and the candidate configuration is emptied.",
    "properties": {
     "active": {
      "description": "This is a read-only field. The flag that indicates if the candidate configuration has pending changes or not.",
      "readOnly": true,
      "type": "boolean"
     },
     "createdAt": {
      "description": "This is a read-only field. The timestamp when this object was created in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (e.g. `YYYY-MM-DDTHH:MM:SSZ`).",
      "format": "date-time",
      "readOnly": true,
      "type": "string"
     },
     "createdBy": {
      "description": "This is a read-only field. The identity provider and email of the user that created the candidate configuration.",
      "readOnly": true,
      "type": "string"
     },
     "events": {
      "description": "This is a read-only field. A list of the activity events of the candidate configuration.",
      "items": {
       "$ref": "#/components/schemas/configActivityEvent"
      },
      "readOnly": true,
      "type": "array"
     },
     "fabricId": {
      "description": "This is a read-only field. The unique identifier of the fabric to which the candidate is associated to.",
      "readOnly": true,
      "type": "string"
     },
     "modifiedAt": {
      "description": "This is a read-only field. The timestamp when this object was last modified in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (e.g. `YYYY-MM-DDTHH:MM:SSZ`).",
      "format": "date-time",
      "readOnly": true,
      "type": "string"
     },
     "modifiedBy": {
      "description": "This is a read-only field. The identity provider and email of the user that modified the candidate configuration last.",
      "readOnly": true,
      "type": "string"
     },
     "name": {
      "description": "This is a read-only field. The name of the candidate configuration. Only the `default` candidate configuration is currently support.",
      "readOnly": true,
      "type": "string"
     },
     "reviews": {
      "description": "This is a read-only field. A list of the reviews of the candidate configuration.",
      "items": {
       "$ref": "#/components/schemas/configCandidateReview"
      },
      "readOnly": true,
      "type": "array"
     },
     "revisionId": {
      "description": "This is a read-only field. An integer that represents the current revision identifier of the candidate configuration.",
      "readOnly": true,
      "type": "string"
     },
     "txnId": {
      "description": "This is a read-only field. The transaction sequence number of the candidate configuration.",
      "readOnly": true,
      "type": "string"
     },
     "type": {
      "$ref": "#/components/schemas/modelsCandidateType"
     }
    },
    "type": "object"
   },
   "configFabricConnectionsResponse": {
    "description": "The response returned to a request for the list of connections in a specific fabric.",
    "properties": {
     "connections": {
      "description": "The list of connections in the fabric",
      "items": {
       "$ref": "#/components/schemas/modelsPortConnection"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configFabricStaticRoutesResponse": {
    "description": "The response returned to a request for the list of static routes of a specific VRF in a fabric.",
    "properties": {
     "staticRoutes": {
      "description": "A list of static routes definitions.",
      "items": {
       "$ref": "#/components/schemas/modelsStaticRoutes"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configFabricVniMembersResponse": {
    "description": "The response returned to a request for a list of members of a VNI in a fabric.",
    "properties": {
     "members": {
      "description": "A list of members of a VNI.",
      "items": {
       "$ref": "#/components/schemas/modelsVlanMember"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configFabricVnisResponse": {
    "description": "The response returned to a request for a list of VNIs in a fabric.",
    "properties": {
     "vnis": {
      "description": "A list of VNIs in a fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsVni"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configFabricVrfsResponse": {
    "description": "The response returned to a request for a list of VRFs in a fabric.",
    "properties": {
     "vrfs": {
      "description": "A list of VRFs in a fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsVrf"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configGenerateCablingPlanRequest": {
    "description": "Description not available",
    "properties": {
     "design": {
      "$ref": "#/components/schemas/modelsFabricDesign"
     },
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "filters": {
      "$ref": "#/components/schemas/modelsCablingRequestFilters"
     }
    },
    "type": "object"
   },
   "configGenerateCablingPlanResponse": {
    "description": "Description not available",
    "properties": {
     "connections": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsCablingConnection"
      },
      "type": "array"
     },
     "execSummary": {
      "$ref": "#/components/schemas/modelsCablingPlanExecutionSummary"
     },
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configGetAllFabricsResponse": {
    "description": "The response returned to a request for a list of fabrics.",
    "properties": {
     "cursor": {
      "description": "A cursor will be provided if there are more fabrics to be returned.",
      "type": "string"
     },
     "fabrics": {
      "description": "A list of fabrics",
      "items": {
       "$ref": "#/components/schemas/configFabric"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configGetCablingPlanResponse": {
    "description": "Description not available",
    "properties": {
     "connections": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsCablingConnection"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configGetFabricCandidatesResponse": {
    "description": "The response to a request for a list of candidate configurations of a specific fabric.",
    "properties": {
     "candidates": {
      "description": "A list of candidate configurations of a specific fabric",
      "items": {
       "$ref": "#/components/schemas/configFabricCandidate"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configGetFabricNodesResponse": {
    "description": "The response returned to a request for the list of nodes in a specific fabric.",
    "properties": {
     "nodes": {
      "description": "The list of nodes in the fabric",
      "items": {
       "$ref": "#/components/schemas/configNode"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configManagementPortsResponse": {
    "description": "The response returned to a request for the list of management ports of a specific node in a fabric.",
    "properties": {
     "ports": {
      "description": "The list of management ports of a specific node.",
      "items": {
       "$ref": "#/components/schemas/modelsManagementPort"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configNode": {
    "description": "A Node is a logical representation of a device in a fabric that allows the separation to the logical configuration from the actual physical device simplifying RMA and hardware replacements. When associated or bound to a node, a device assumes the node identity and all its associated configuration. A node can be pre-configured and referenced in other fabric level constructs such as VRFs, VNIs and Link Aggregation Groups (LAGs) before a device is bound to it allowing for pre-configuration of a complete fabric.",
    "properties": {
     "annotations": {
      "description": "A list of name-value annotations to store user-defined data including complex data such as JSON associated with the node.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "description": {
      "description": "The description is a user-defined field to store notes about the node.",
      "type": "string"
     },
     "deviceId": {
      "description": "The unique identifier of the device associated with the node.",
      "type": "string"
     },
     "enabled": {
      "description": "This is a read-only field. The enabled state of the node which indicates if the node is enabled or disabled.",
      "readOnly": true,
      "type": "boolean"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering nodes.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "location": {
      "description": "The location is a user-defined field to store information about the location of the node (E.g. SJC01).",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "modelName": {
      "description": "The name of the hardware model of the node.",
      "type": "string"
     },
     "name": {
      "description": "The user-defined name of the node. The name is used as hostname for the node and need to comply with DNS restrictions, is case-insensitive and must be unique in the organization.",
      "type": "string"
     },
     "nodeId": {
      "description": "This is a read-only field. The unique identifier of the node.",
      "readOnly": true,
      "type": "string"
     },
     "psuAirflows": {
      "description": "Airflows and corresponding psu models of the node.",
      "items": {
       "$ref": "#/components/schemas/modelsPsuAirflow"
      },
      "type": "array"
     },
     "roles": {
      "description": "A list of roles for the node.",
      "items": {
       "$ref": "#/components/schemas/modelsNodeRole"
      },
      "type": "array"
     },
     "serialNumber": {
      "description": "The serial number of the device associated with the node.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configPortsResponse": {
    "description": "The response returned to a request for the list of ports of a specific node in fabric.",
    "properties": {
     "ports": {
      "description": "The list of ports of the node.",
      "items": {
       "$ref": "#/components/schemas/modelsNetworkPort"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configReviewFabricCandidateRequest": {
    "description": "The request to add review comments to a specific candidate configuration of a fabric.",
    "properties": {
     "comments": {
      "description": "The comments to be added as a review to the candidate configuration.",
      "type": "string"
     },
     "fabricId": {
      "description": "The fabric id or name.",
      "type": "string"
     },
     "name": {
      "description": "The candidate configuration name.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configReviewFabricCandidateResponse": {
    "description": "The response to a request to add review comments to a specific candidate configuration of a fabric.",
    "properties": {
     "fabricId": {
      "description": "The fabric identifier.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configSetFabricConnectionsRequest": {
    "description": "The request to update the list of connections in a specific fabric.",
    "properties": {
     "connections": {
      "description": "The list of connections for the fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsPortConnection"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configSetPortsRequest": {
    "description": "The request to update the list of ports of a specific node in a fabric.",
    "properties": {
     "ports": {
      "description": "The list of ports of the node.",
      "items": {
       "$ref": "#/components/schemas/modelsNetworkPort"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "miscDevice": {
    "description": "A Device is a physical device such as a Cisco 6000 switch managed by Cisco Nexus Hyperfabric that can be bound to a node in a fabric.",
    "properties": {
     "claimedAt": {
      "description": "The timestamp at which the device was claimed.",
      "format": "date-time",
      "type": "string"
     },
     "deviceId": {
      "description": "The device identifier of the device.",
      "type": "string"
     },
     "fabricId": {
      "description": "The unique identifier of the fabric of the node to which the device is bound.",
      "type": "string"
     },
     "fabricName": {
      "description": "The name of the fabric that the devices belongs to.",
      "type": "string"
     },
     "modelName": {
      "description": "The model name of the device.",
      "type": "string"
     },
     "name": {
      "description": "The name of the device.",
      "type": "string"
     },
     "nodeId": {
      "description": "The unique identifier of the node to which the device is bound.",
      "type": "string"
     },
     "nodeType": {
      "$ref": "#/components/schemas/modelsNodeType"
     },
     "roles": {
      "description": "A list of roles associated with the node to which the device is bound.",
      "items": {
       "$ref": "#/components/schemas/modelsNodeRole"
      },
      "type": "array"
     },
     "serialNumber": {
      "description": "The serial number of the device.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "miscGetDevicesForOrgResponse": {
    "description": "Description not available",
    "properties": {
     "devices": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/miscDevice"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "modelsAirflowType": {
    "default": "AIRFLOW_TYPE_PORT_SIDE_INTAKE",
    "description": "Airflow enumerates various types of Airflow.",
    "enum": [
     "AIRFLOW_TYPE_PORT_SIDE_INTAKE",
     "AIRFLOW_TYPE_PORT_SIDE_EXHAUST"
    ],
    "type": "string"
   },
   "modelsAnnotation": {
    "description": "Annotation defines a typed name/value pair to store user-defined data including complex data such as JSON.",
    "properties": {
     "dataType": {
      "$ref": "#/components/schemas/modelsDataType"
     },
     "name": {
      "description": "The user-defined name used to uniquely identify the annotation.",
      "type": "string"
     },
     "value": {
      "description": "The value of the annotation expressed as a string.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsCablingConnection": {
    "description": "Description not available",
    "properties": {
     "cablePluggablePid": {
      "description": "The pluggable pid to be used for the cable in the connection",
      "type": "string"
     },
     "node1GroupId": {
      "description": "Description not available",
      "type": "string"
     },
     "node1GroupName": {
      "description": "The switch or server group id and name the node1 is associated with",
      "type": "string"
     },
     "node1HwsetName": {
      "description": "The hw set name for node1",
      "type": "string"
     },
     "node1Id": {
      "description": "The external node id of the first node in the connection",
      "type": "string"
     },
     "node1Name": {
      "description": "The id and name of the first node in the connection",
      "type": "string"
     },
     "node1PortName": {
      "description": "The port name for the first node in the connection",
      "type": "string"
     },
     "node1PortPluggablePid": {
      "description": "The model name/pid for the pluggable to be used in the first node:port",
      "type": "string"
     },
     "node2GroupId": {
      "description": "Description not available",
      "type": "string"
     },
     "node2GroupName": {
      "description": "The switch group id and name the node2 is associated with",
      "type": "string"
     },
     "node2HwsetName": {
      "description": "The hw set name for node1",
      "type": "string"
     },
     "node2Id": {
      "description": "The external node id of the second node in the override rule",
      "type": "string"
     },
     "node2Name": {
      "description": "The id and name of the second node in the connection",
      "type": "string"
     },
     "node2PortName": {
      "description": "The port name for the second node in the connectivity rule",
      "type": "string"
     },
     "node2PortPluggablePid": {
      "description": "The model name/pid for the pluggable to be used in the second node:port",
      "type": "string"
     },
     "node2RailId": {
      "description": "The external rail id associated with the node2 connection",
      "type": "string"
     },
     "node2RailName": {
      "description": "The rail name associated with the node2 connection",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsCablingPlanExecutionSummary": {
    "description": "Description not available",
    "properties": {
     "exceptions": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsRuleExecutionException"
      },
      "type": "array"
     },
     "execStatus": {
      "$ref": "#/components/schemas/modelsCablingPlanStatus"
     }
    },
    "type": "object"
   },
   "modelsCablingPlanStatus": {
    "default": "CABLING_PLAN_STATUS_SUCCESS",
    "description": "Description not available",
    "enum": [
     "CABLING_PLAN_STATUS_SUCCESS",
     "CABLING_PLAN_STATUS_FAILURE_PORTS_UNAVAILABLE"
    ],
    "type": "string"
   },
   "modelsCablingRequestFilters": {
    "description": "Description not available",
    "properties": {
     "dryRun": {
      "description": "Description not available",
      "type": "boolean"
     },
     "failFast": {
      "description": "Description not available",
      "type": "boolean"
     },
     "includeCablingPlan": {
      "description": "Description not available",
      "type": "boolean"
     }
    },
    "type": "object"
   },
   "modelsCablingStrategy": {
    "default": "CABLING_STRATEGY_PACKED",
    "description": "CablingStrategy defines the mode in which ports are chosen to satisfy the connectivity rules between two topology groups",
    "enum": [
     "CABLING_STRATEGY_PACKED",
     "CABLING_STRATEGY_ASCENDING_ODD",
     "CABLING_STRATEGY_STRICT_ROUND_ROBIN",
     "CABLING_STRATEGY_BEST_EFFORT_ROUND_ROBIN"
    ],
    "type": "string"
   },
   "modelsCandidateType": {
    "default": "CANDIDATE_CONFIGS",
    "description": "CandidateType defines an enumeration of candidate types.",
    "enum": [
     "CANDIDATE_CONFIGS",
     "CANDIDATE_MAINTENANCE_ON",
     "CANDIDATE_MAINTENANCE_OFF",
     "CANDIDATE_NEUTRAL"
    ],
    "type": "string"
   },
   "modelsConfigOrigin": {
    "default": "CONFIG_ORIGIN_CLOUD",
    "description": "ConfigOrigin is used by a management port to indicate if the configuration was provided by the cloud or the device.",
    "enum": [
     "CONFIG_ORIGIN_CLOUD",
     "CONFIG_ORIGIN_DEVICE"
    ],
    "type": "string"
   },
   "modelsConfigType": {
    "default": "CONFIG_TYPE_STATIC",
    "description": "ConfigType is used by a management port to indicate if the IP configuration is static or DHCP.",
    "enum": [
     "CONFIG_TYPE_STATIC",
     "CONFIG_TYPE_DHCP"
    ],
    "type": "string"
   },
   "modelsConnectedState": {
    "default": "CONNECTED_STATE_NOT_CONNECTED",
    "description": "ConnectedState is used by a management port to indicate if the port is successfully connected to the Hyperfabric service. It is distinct from the AdminState.",
    "enum": [
     "CONNECTED_STATE_NOT_CONNECTED",
     "CONNECTED_STATE_CONNECTED"
    ],
    "type": "string"
   },
   "modelsDataType": {
    "default": "STRING",
    "description": "DataType defines an enumeration of data types.",
    "enum": [
     "STRING",
     "INT32",
     "UINT32",
     "INT64",
     "UINT64",
     "BOOL",
     "TIME",
     "UUID",
     "DURATION",
     "JSON"
    ],
    "type": "string"
   },
   "modelsDesignObjectBaseData": {
    "description": "The BlueprintObjectbase_data defines the common base_data present in every object of the blueprint",
    "properties": {
     "fabricId": {
      "description": "The fabric_id that this blueprint object is associated with",
      "type": "string"
     },
     "id": {
      "description": "The external id of the blueprint object (will be populated for node_id)",
      "type": "string"
     },
     "name": {
      "description": "The name of the blueprint object",
      "type": "string"
     },
     "position": {
      "description": "The relative position of the object in its next level aggregation. For example position of device in hw_set, position of hw_set in switch/server group, position of switch/server group in tier.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "shortName": {
      "description": "The short name of the blueprint object",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsFabricDesign": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "fabricName": {
      "description": "Description not available",
      "type": "string"
     },
     "nodePortConnRules": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsNodePortConnectivityRule"
      },
      "type": "array"
     },
     "nodePortOverrideRules": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsNodePortOverrideRule"
      },
      "type": "array"
     },
     "railGroups": {
      "description": "The rail groups associated with the design",
      "items": {
       "$ref": "#/components/schemas/modelsRailGroup"
      },
      "type": "array"
     },
     "serverGroupConnRules": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsServerGroupConnectivityRule"
      },
      "type": "array"
     },
     "switchGroupConnRules": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsSwitchGroupConnectivityRule"
      },
      "type": "array"
     },
     "tiers": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsTier"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "modelsFabricTopology": {
    "default": "MESH",
    "description": "FabricTopology defines an enumeration of types of fabric topologies.",
    "enum": [
     "MESH",
     "SPINE_LEAF",
     "DESIGN_BASED"
    ],
    "type": "string"
   },
   "modelsHwSet": {
    "description": "Description not available",
    "properties": {
     "airflowType": {
      "$ref": "#/components/schemas/modelsAirflowType"
     },
     "baseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "deviceModelName": {
      "description": "The model name/pid of the devices in the hw set.",
      "type": "string"
     },
     "nodes": {
      "description": "The node ids corresponding to the devices in the hw set This list will be sorted by the relative position of the nodes within the hardware set. For templates, this will have the name of the nodes, otherwise, this will be the node uuids",
      "items": {
       "$ref": "#/components/schemas/modelsDesignObjectBaseData"
      },
      "type": "array"
     },
     "psuModelName": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsInterfaceStp": {
    "description": "The Spanning Tree Protocol (STP) interface configuration for the port. The configuration is only used when a VLAN is deployed on the port.",
    "properties": {
     "bpduGuard": {
      "description": "BPDU guard enforces that the connected device does not send STP BPDUs on the port. If STP BPDUs are received on the port where BPDU guard is enabled the port will be automatically shutdown. User can re-enable the port administratively after ensuring the BPDUs have stopped coming on the port.",
      "type": "boolean"
     },
     "enabled": {
      "description": "The enabled state of the Spanning-Tree Protocol (STP) which indicates if STP is enabled or disabled on the port. Requires at least one of the other properties to also be enabled.",
      "type": "boolean"
     },
     "portFast": {
      "description": "PortFast allows ports to move to forwarding state quickly when the connected device that is not participating in spanning-tree. PortFast is enabled by default on all ports.",
      "type": "boolean"
     },
     "rootGuard": {
      "description": "Root guard enforces the root bridge placement in the network and allows STP to interoperate with user network bridges while still maintaining the bridged network topology that the administrator requires. When BPDUs are received on a root guard enabled port, the STP state will be moved to \"Root inconsistent\" state to indicate this condition. Once the port stops receiving superior BPDUs, root guard will automatically set the port back to a FORWARDING state after the timeout period has expired.",
      "type": "boolean"
     },
     "uplinkFast": {
      "description": "UplinkFast feature enhances STP performance for switches with redundant uplinks. Using the default value for the standard STP forward delay, convergence following a transition from an active link to a redundant link can take up to 30 seconds; 15 seconds for listening and an additional 15 seconds for learning. UplinkFast maintains a list of backup path to the root bridge and immediately move one of the backup paths to forwarding state to speed up the network recovery.",
      "type": "boolean"
     }
    },
    "type": "object"
   },
   "modelsInterfaceType": {
    "default": "NETWORK_PORT_INTERFACE",
    "description": "InterfaceType defines an enumeration of network interface types.",
    "enum": [
     "NETWORK_PORT_INTERFACE",
     "LOOPBACK_INTERFACE",
     "VLAN_INTERFACE",
     "PORT_CHANNEL_INTERFACE",
     "SUB_PORT_INTERFACE"
    ],
    "type": "string"
   },
   "modelsIpmProbeType": {
    "default": "IPM_PROBE_TYPE_BIDIRECTIONAL",
    "description": "IpmProbeType defines the ipm probe configuration between two topology groups",
    "enum": [
     "IPM_PROBE_TYPE_BIDIRECTIONAL",
     "IPM_PROBE_TYPE_UNIDRECTIONAL"
    ],
    "type": "string"
   },
   "modelsIpmSetting": {
    "description": "Description not available",
    "properties": {
     "ipmConfigId": {
      "description": "uuid to reference the ipm configuration",
      "type": "string"
     },
     "ipmTarget": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "probeType": {
      "$ref": "#/components/schemas/modelsIpmProbeType"
     }
    },
    "type": "object"
   },
   "modelsManagementPort": {
    "description": "A management port encapsulates the configuration and properties of an Out of Band network interface of a node used to communicate with the Cisco Nexus Hyperfabric service.",
    "properties": {
     "cloudUrls": {
      "description": "A list of one or more Cloud URLs used by a node.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "configOrigin": {
      "$ref": "#/components/schemas/modelsConfigOrigin"
     },
     "connectedState": {
      "$ref": "#/components/schemas/modelsConnectedState"
     },
     "description": {
      "description": "The description is a user-defined field to store notes about the management port.",
      "type": "string"
     },
     "dnsAddresses": {
      "description": "A list of one or more DNS IP addresses used by the node.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "enabled": {
      "description": "The administrative state of the management port which indicates if the management port is enabled or disabled.",
      "type": "boolean"
     },
     "id": {
      "description": "This is a read-only field. The unique identifier of the management port.",
      "readOnly": true,
      "type": "string"
     },
     "ipv4Address": {
      "description": "The IPv4 host address for the management port of the node.",
      "type": "string"
     },
     "ipv4ConfigType": {
      "$ref": "#/components/schemas/modelsConfigType"
     },
     "ipv4Gateway": {
      "description": "The IPv4 gateway address for the management port of the node.",
      "type": "string"
     },
     "ipv6Address": {
      "description": "The IPv6 host address for the management port of the node.",
      "type": "string"
     },
     "ipv6ConfigType": {
      "$ref": "#/components/schemas/modelsConfigType"
     },
     "ipv6Gateway": {
      "description": "The IPv6 gateway address for the management port of the node.",
      "type": "string"
     },
     "loginPassword": {
      "description": "Password used by system user to login to the device. An empty password is treated as \"use current password\", and not as \"no password\".",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The name of the management port of the node (E.g. eth0)",
      "type": "string"
     },
     "noProxy": {
      "description": "A list of IP addresses or domain names that should not be proxied.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "nodeId": {
      "description": "This is a read-only field. The unique identifier of the node to which this management port belongs to.",
      "readOnly": true,
      "type": "string"
     },
     "portType": {
      "$ref": "#/components/schemas/modelsPortType"
     },
     "proxyAddress": {
      "description": "The URL for a configured HTTPs proxy for the node.",
      "type": "string"
     },
     "proxyCredentialsId": {
      "description": "A unique identifier of a set of credentials for the proxy.",
      "type": "string"
     },
     "proxyPassword": {
      "description": "A password to be used to authenticate to the proxy. Once set, this attribute is not returned.",
      "type": "string"
     },
     "proxyUsername": {
      "description": "A username to be used to authenticate to the proxy.",
      "type": "string"
     },
     "setProxyPassword": {
      "description": "The flag to indicate that the proxy password should be cleared.",
      "type": "boolean"
     }
    },
    "type": "object"
   },
   "modelsMetadata": {
    "description": "Metadata defines a map of attributes related to the lifecycle of the object.",
    "properties": {
     "createdAt": {
      "description": "This is a read-only field. The timestamp when this object was created in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (e.g. `YYYY-MM-DDTHH:MM:SSZ`).",
      "format": "date-time",
      "readOnly": true,
      "type": "string"
     },
     "createdBy": {
      "description": "This is a read-only field. The identity provider and email of the user that created this object.",
      "readOnly": true,
      "type": "string"
     },
     "modifiedAt": {
      "description": "This is a read-only field. The timestamp when this object was last modified in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (e.g. `YYYY-MM-DDTHH:MM:SSZ`).",
      "format": "date-time",
      "readOnly": true,
      "type": "string"
     },
     "modifiedBy": {
      "description": "This is a read-only field. The identity provider and email of the user that modified this object last.",
      "readOnly": true,
      "type": "string"
     },
     "revisionId": {
      "description": "This is a read-only field. An integer that represent the current revision of the object.",
      "readOnly": true,
      "type": "string"
     }
    },
    "readOnly": true,
    "type": "object"
   },
   "modelsNetworkInterface": {
    "description": "NetworkInterface encapsulates properties of a network interface attached to a VRF. A NetworkInterface maybe a network port, VLAN interface (SVI), loopback, port channel or a sub-interface.",
    "properties": {
     "ipv4Addresses": {
      "description": "IPv4 addresses of network interface. IPv4 addresses are readonly, and are set by some APIs (E.g. GetVrfs API when NeedIps is set to true).",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "ipv6Addresses": {
      "description": "IPv6 addresses of network interface. IPv6 addresses are readonly, and are set by some APIs (E.g. GetVrfs API when NeedIps is set to true).",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "name": {
      "description": "The name of the network interface.",
      "type": "string"
     },
     "nodeId": {
      "description": "The node identifier where the interface is located. API users may specify either node name or node identifier.",
      "type": "string"
     },
     "type": {
      "$ref": "#/components/schemas/modelsInterfaceType"
     },
     "vlanId": {
      "description": "VLAN identifier - required only for VLAN interface. Name field is ignored when VlanId is specified.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vni": {
      "description": "The parent VNI of the VLAN. Valid only for VLAN interfaces.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "modelsNetworkPort": {
    "description": "A Port encapsulates the configuration and properties of a front panel network interface of a node used as fabric port to interconnect with other nodes, as routed port to peer at Layer 3 with external devices, as Link Aggregation Group member or as a host port to connect to other endpoints via Layer 2 (VLAN).",
    "properties": {
     "annotations": {
      "description": "A list of name-value annotations to store user-defined data including complex data such as JSON associated with the port.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "breakout": {
      "description": "This is a read-only field. The flag that indicates if the port is in breakout mode or not.",
      "readOnly": true,
      "type": "boolean"
     },
     "breakoutIndex": {
      "description": "This is a read-only field. The index number of the breakout in the parent port. The breakout index is not set when the port is not in breakout mode.",
      "maximum": 4294967295,
      "minimum": 0,
      "readOnly": true,
      "type": "integer"
     },
     "description": {
      "description": "The description is a user-defined field to store notes about the port.",
      "type": "string"
     },
     "enabled": {
      "description": "The enabled state of the port which indicates if the port is enabled or disabled.",
      "type": "boolean"
     },
     "fec": {
      "description": "The Forward Error Correction (FEC) mode of the port. Supported modes are \"rs\" and \"none\". The FEC must be set to \"none\" for 100G DR/FR/LR pluggable optics.",
      "type": "string"
     },
     "forceCounter": {
      "description": "The Force Counter can be incremented to force the port configuration to be forcefully reapplied when there are no other configuration changes such as to recover (un-shut) a port blocked by STP.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "id": {
      "description": "This is a read-only field. The unique identifier of the port.",
      "readOnly": true,
      "type": "string"
     },
     "index": {
      "description": "This is a read-only field. The index number of the port on the linecard.",
      "maximum": 4294967295,
      "minimum": 0,
      "readOnly": true,
      "type": "integer"
     },
     "ipv4Addresses": {
      "description": "A list of up to two IPv4 host addresses with subnet mask to be configured on the port. Requires the `ROUTED_PORT` role to be configured in roles and the port to be associated with a VRF.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "ipv6Addresses": {
      "description": "A list of up to two IPv6 host addresses with subnet mask to be configured on the port. Requires the `ROUTED_PORT` role to be configured in roles and the port to be associated with a VRF.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering ports.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "linecard": {
      "description": "This is a read-only field. The index number of the linecard to which this port belongs to.",
      "maximum": 4294967295,
      "minimum": 0,
      "readOnly": true,
      "type": "integer"
     },
     "linkDown": {
      "description": "Prevent traffic from being forwarded by the port. Requires `enabled` to be set to `true` (equivalent to `Admin State` set to `Up`) and role to be one of `UNUSED_PORT`, `ROUTED_PORT` or `HOST_PORT`.",
      "type": "boolean"
     },
     "maxSpeed": {
      "description": "This is a read-only field. The maximum speed of the port as reported by the system (E.g. 10G).",
      "readOnly": true,
      "type": "string"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "mtu": {
      "description": "The Maximum Transmission Unit (MTU) of the port of the node. Default value is 9100. The MTU value must be between 1500 and 9100.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "name": {
      "description": "The name of the port of the node. The name must have a prefix of Ethernet (E.g. Ethernet1_1) and cannot be modified.",
      "type": "string"
     },
     "nodeId": {
      "description": "This is a read-only field. The unique identifier of the node to which this port belongs to.",
      "readOnly": true,
      "type": "string"
     },
     "pluggable": {
      "description": "The name of the model (PID) of the pluggable cable or optic expected to be used in the port.",
      "type": "string"
     },
     "portAlias": {
      "description": "This specifies the alias for the port. The name of the port is always in canonical form but in the server case, this would also indicate the ensXXX alias for the port.",
      "type": "string"
     },
     "roles": {
      "description": "A list of roles of the port. The port roles list is mandatory, and must contain exactly one role.",
      "items": {
       "$ref": "#/components/schemas/modelsPortRole"
      },
      "type": "array"
     },
     "speed": {
      "description": "The configurable speed mode of the port (E.g. 10G). The port speed cannot be set for a port in breakout mode.",
      "type": "string"
     },
     "stp": {
      "$ref": "#/components/schemas/modelsInterfaceStp"
     },
     "subInfCount": {
      "description": "This is a read-only field. The number of sub-interfaces configured on the port.",
      "maximum": 4294967295,
      "minimum": 0,
      "readOnly": true,
      "type": "integer"
     },
     "systemModified": {
      "description": "This specifies if any port configurations have been made by the system (as opposed to being manual user changes). When the cabling algorithm requires making changes to the configuration and this port no longer requires such config changes, we can reset the port configuration. We should never modify the port configs if they were not made by the system",
      "type": "boolean"
     },
     "vlanIds": {
      "description": "This is a read-only field. A list of VLAN IDs deployed on the port of the node.",
      "items": {
       "maximum": 4294967295,
       "minimum": 0,
       "type": "integer"
      },
      "readOnly": true,
      "type": "array"
     },
     "vnis": {
      "description": "This is a read-only field. A list of VNIs attached to the port of the node.",
      "items": {
       "maximum": 4294967295,
       "minimum": 0,
       "type": "integer"
      },
      "readOnly": true,
      "type": "array"
     },
     "vrfId": {
      "description": "The unique identifier of the VRF associated with the port. The VRF identifier is required for a port with the `ROUTED_PORT` role.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsNodePortConnectivityRule": {
    "description": "Description not available",
    "properties": {
     "cablePluggablePid": {
      "description": "The pluggable pid to be used for the cable in the rule",
      "type": "string"
     },
     "node1Id": {
      "description": "The external node id and name of the first node in the connectivity rule",
      "type": "string"
     },
     "node1Name": {
      "description": "Description not available",
      "type": "string"
     },
     "node1PortName": {
      "description": "The port name for the first node in the connectivity rule",
      "type": "string"
     },
     "node1PortPluggablePid": {
      "description": "The model name/pid for the pluggable to be used in the first node:port",
      "type": "string"
     },
     "node2Id": {
      "description": "The id and name of the second node in the connectivity rule",
      "type": "string"
     },
     "node2Name": {
      "description": "Description not available",
      "type": "string"
     },
     "node2PortName": {
      "description": "The port name for the second node in the connectivity rule",
      "type": "string"
     },
     "node2PortPluggablePid": {
      "description": "The model name/pid for the pluggable to be used in the second node:port",
      "type": "string"
     },
     "notes": {
      "description": "The notes associated with the connectivity rule. This could",
      "type": "string"
     },
     "ruleId": {
      "description": "The id of the rule",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsNodePortOverrideRule": {
    "description": "Description not available",
    "properties": {
     "nodeId": {
      "description": "The id and name of the node in the override rule",
      "type": "string"
     },
     "nodeName": {
      "description": "Description not available",
      "type": "string"
     },
     "nodePortName": {
      "description": "The port name for the node in the override rule",
      "type": "string"
     },
     "pluggable": {
      "description": "Pluggable associated with the node port. Can be a specific breakout configuration.",
      "type": "string"
     },
     "ruleId": {
      "description": "The id of the rule",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsNodeRole": {
    "default": "LEAF",
    "description": "NodeRole defines an enumeration of roles that can be associated with a node.",
    "enum": [
     "LEAF",
     "SPINE",
     "SERVER",
     "SWITCH"
    ],
    "type": "string"
   },
   "modelsNodeType": {
    "default": "NODE_BLUEPRINT",
    "description": "NodeType defines an enumeration of node types.",
    "enum": [
     "NODE_BLUEPRINT",
     "NODE_SWITCH",
     "NODE_SERVER"
    ],
    "type": "string"
   },
   "modelsObjectType": {
    "default": "USER",
    "description": "ObjectType defines an enumeration of types of objects.",
    "enum": [
     "USER",
     "TENANT",
     "FABRIC",
     "NODE",
     "NETWORK_PORT",
     "PORT_CONNECTION",
     "VLAN",
     "SVI",
     "DHCP_RELAY",
     "VRF",
     "STATIC_ROUTES",
     "PORT_CHANNEL",
     "FABRIC_TRANSACTION",
     "ORGANIZATION",
     "BEARER_TOKEN",
     "API_KEY",
     "REST_KEY",
     "VNI",
     "MANAGEMENT_PORT",
     "LOOPBACK",
     "SUB_INTERFACE",
     "PER_VLAN_STP",
     "BGP_PEER",
     "PORT_BREAKOUT",
     "BGP_POLICY",
     "PREFIX_LIST",
     "DEVICE",
     "NOTIFICATION_ENDPOINT",
     "CERTIFICATES",
     "FABRIC_IMAGE_UPDATE",
     "NODE_IMAGE_PACKAGE",
     "IMAGE_PACKAGE",
     "IPM_CONFIG",
     "NODE_IMAGE_UPDATE",
     "NODE_METADATA",
     "NOTIFICATION_SETTINGS",
     "DSCP_CONFIG",
     "TIER",
     "SWITCH_GROUP",
     "SERVER_GROUP",
     "RAIL_GROUP",
     "RAIL",
     "HW_SET",
     "SWITCH_GROUP_CONN_RULE",
     "SERVER_GROUP_CONN_RULE",
     "NODE_PORT_CONN_RULE",
     "NODE_PORT_OVERRIDE_RULE"
    ],
    "type": "string"
   },
   "modelsOperation": {
    "default": "CREATE",
    "description": "Operation defines an enumeration of the types of operations or actions.",
    "enum": [
     "CREATE",
     "UPDATE",
     "DELETE",
     "ENABLE",
     "DISABLE",
     "LOGIN",
     "LOGOUT",
     "COMMIT",
     "REVERT",
     "BIND",
     "UNBIND",
     "COMMENT"
    ],
    "type": "string"
   },
   "modelsOsType": {
    "default": "HYPER_FABRIC",
    "description": "OsType defines an enumeration of various device operating system types.",
    "enum": [
     "HYPER_FABRIC",
     "NEXUS",
     "IOS_XE",
     "IOS_XR",
     "LINUX",
     "WINDOWS"
    ],
    "type": "string"
   },
   "modelsPlacementStrategy": {
    "default": "PLACEMENT_STRATEGY_TYPE_PACKED",
    "description": "PlacementStrategy defines how the rails are placed on the switches in the switch group they are associated with",
    "enum": [
     "PLACEMENT_STRATEGY_TYPE_PACKED",
     "PLACEMENT_STRATEGY_TYPE_SEQUENTIAL"
    ],
    "type": "string"
   },
   "modelsPortConnection": {
    "description": "A Connection represents the bidirectional physical interconnection between two ports of two nodes in a fabric. The role of the ports in a connection will be automatically configured as `FABRIC_PORT`. Cisco Nexus Hyperfabric uses the connections to generate a possible Bill Of Material, cabling plan and to verify the correct implementation of the desired connectivity intent in a fabric.",
    "properties": {
     "description": {
      "description": "The description is a user-defined field to store notes about the connection.",
      "type": "string"
     },
     "fabricId": {
      "description": "This is a read-only field. The identifier of the fabric to which this connection belongs to.",
      "readOnly": true,
      "type": "string"
     },
     "id": {
      "description": "This is a read-only field. The unique identifier of the connection.",
      "readOnly": true,
      "type": "string"
     },
     "local": {
      "$ref": "#/components/schemas/modelsPortEndpoint"
     },
     "osType": {
      "$ref": "#/components/schemas/modelsOsType"
     },
     "pluggable": {
      "description": "The type or name of the model (PID) of the pluggable cable or optic expected to be used for the connection.",
      "type": "string"
     },
     "remote": {
      "$ref": "#/components/schemas/modelsPortEndpoint"
     },
     "remotePluggable": {
      "description": "The type or name of the model (PID) of the pluggable cable or optic expected to be used for the remote end of the connection",
      "type": "string"
     },
     "remoteRailId": {
      "description": "The remote rail id and name",
      "type": "string"
     },
     "unrecognized": {
      "description": "This is a read-only field. The flag that indicates if the remote side of the connection is recognized or not.",
      "readOnly": true,
      "type": "boolean"
     }
    },
    "type": "object"
   },
   "modelsPortEndpoint": {
    "description": "PortEndpoint defines a globally unique port location or endpoint.",
    "properties": {
     "nodeId": {
      "description": "The unique identifier of the node.",
      "type": "string"
     },
     "nodeName": {
      "description": "The user-defined name of the node.",
      "type": "string"
     },
     "portName": {
      "description": "The canonical name of the port (E.g. Ethernet1_1).",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsPortRole": {
    "default": "UNUSED_PORT",
    "description": "PortRole defines an enumeration of roles of ports or port channels.",
    "enum": [
     "UNUSED_PORT",
     "FABRIC_PORT",
     "HOST_PORT",
     "ROUTED_PORT",
     "LAG_PORT"
    ],
    "type": "string"
   },
   "modelsPortType": {
    "default": "DATA_PORT",
    "description": "PortType enumerates the categories of ports",
    "enum": [
     "DATA_PORT",
     "MGMT_PORT",
     "BMC_PORT"
    ],
    "type": "string"
   },
   "modelsPsuAirflow": {
    "description": "PsuAirflow encapsulates Airflow and corresponding Psu model.",
    "properties": {
     "airflow": {
      "$ref": "#/components/schemas/modelsAirflowType"
     },
     "psuModel": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsRail": {
    "description": "Description not available",
    "properties": {
     "baseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     }
    },
    "type": "object"
   },
   "modelsRailGroup": {
    "description": "Description not available",
    "properties": {
     "baseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "count": {
      "description": "number of rails in the group. This corresponds to the number of GPUs on the platform.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "overallGroupPosition": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "railWidth": {
      "description": "number of reserved ports in a rail. This loosely corresponds to the number of servers in the server group associated with the rail group this rail is a member of. The user can pre-allocate ports for future use by configuring a larger width than the number of currently associated servers.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "rails": {
      "description": "all the rails that are members of this rail group",
      "items": {
       "$ref": "#/components/schemas/modelsRail"
      },
      "type": "array"
     },
     "strategy": {
      "$ref": "#/components/schemas/modelsPlacementStrategy"
     },
     "switchGroup": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     }
    },
    "type": "object"
   },
   "modelsRouteInfo": {
    "description": "RouteInfo defines a specific single IPv4 or IPv6 static route which inludes an IPv4 or IPv6 prefix in CIDR notation and a next-hop address of the same IP version.",
    "properties": {
     "discard": {
      "description": "The flag that defines if the traffic matching the static route is silently discarded or not. This is also referred to as a null route or a black hole route.",
      "type": "boolean"
     },
     "interface": {
      "description": "The next-hop interface or network port name.",
      "type": "string"
     },
     "nextHop": {
      "description": "The next-hop IP address. Must be a host IP address.",
      "type": "string"
     },
     "nextVrf": {
      "description": "The name of the VRF where the next-hop is present.",
      "type": "string"
     },
     "nodeId": {
      "description": "The unique identifier of the node where the route is deployed.",
      "type": "string"
     },
     "preference": {
      "description": "The route preference value (ascending) which sets the administrative distance. The range is from 1 to 255.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "prefix": {
      "description": "The IPv4 or IPv6 prefix in CIDR notation.",
      "type": "string"
     },
     "tag": {
      "$ref": "#/components/schemas/modelsRouteTag"
     }
    },
    "type": "object"
   },
   "modelsRouteTag": {
    "default": "TAG_BLUE",
    "description": "RouteTag defines an enumeration of custom route tags. The following values are reserved and should not be used, TAG_AMBER",
    "enum": [
     "TAG_AMBER",
     "TAG_BLACK",
     "TAG_BLUE",
     "TAG_GREEN",
     "TAG_RED",
     "TAG_PURPLE",
     "TAG_YELLOW"
    ],
    "type": "string"
   },
   "modelsRuleExecutionException": {
    "description": "Description not available",
    "properties": {
     "deficitCount": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "node1Id": {
      "description": "Description not available",
      "type": "string"
     },
     "node1Name": {
      "description": "Description not available",
      "type": "string"
     },
     "node2Id": {
      "description": "Description not available",
      "type": "string"
     },
     "node2Name": {
      "description": "Description not available",
      "type": "string"
     },
     "node2RailId": {
      "description": "Description not available",
      "type": "string"
     },
     "node2RailName": {
      "description": "Description not available",
      "type": "string"
     },
     "svrGroupRule": {
      "$ref": "#/components/schemas/modelsServerGroupConnectivityRule"
     },
     "swGroupRule": {
      "$ref": "#/components/schemas/modelsSwitchGroupConnectivityRule"
     }
    },
    "type": "object"
   },
   "modelsServerGroup": {
    "description": "Description not available",
    "properties": {
     "baseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "baseModel": {
      "description": "Description not available",
      "type": "string"
     },
     "hwSets": {
      "description": "The hw sets that belong to this switch group This list will be sorted by the relative position of the hardware sets within the switch group",
      "items": {
       "$ref": "#/components/schemas/modelsHwSet"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "modelsServerGroupConnectivityRule": {
    "description": "Description not available",
    "properties": {
     "cablePluggablePid": {
      "description": "The pluggable pid to be used for the cable in the rule",
      "type": "string"
     },
     "ipmProbes": {
      "description": "Ipm settings for indirect connections",
      "items": {
       "$ref": "#/components/schemas/modelsIpmSetting"
      },
      "type": "array"
     },
     "notes": {
      "description": "The notes associated with the connectivity rule. This could describe",
      "type": "string"
     },
     "numDirectConnections": {
      "description": "number of direct connections between group 1 and group 2",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "portGroupType": {
      "$ref": "#/components/schemas/modelsServerPortGroupType"
     },
     "railGroupBaseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "ruleId": {
      "description": "The id of the rule",
      "type": "string"
     },
     "serverGroupBaseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "serverGroupPluggablePid": {
      "description": "The pluggable pid to be used for the ports of the devices in the server group",
      "type": "string"
     },
     "strategy": {
      "$ref": "#/components/schemas/modelsCablingStrategy"
     },
     "switchGroupBaseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "switchGroupBreakout": {
      "description": "Breakout mode at the switches in sw group in this rule",
      "type": "boolean"
     },
     "switchGroupPluggablePid": {
      "description": "The pluggable pid to be used for the ports of the devices in the switch group",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsServerPortGroupType": {
    "default": "NORTH_SOUTH",
    "description": "ServerPortGroupType enumerates various categories of server ports",
    "enum": [
     "NORTH_SOUTH",
     "EAST_WEST",
     "NORTH_SOUTH_BMC",
     "LOM_ETHERNET",
     "BMC",
     "EAST_WEST_BMC"
    ],
    "type": "string"
   },
   "modelsStaticRoutes": {
    "description": "The Static Routes object is a child object of a VRF that encapsulates a set of IP static routes pointing to a next-hop. The next-hop must be accessible through one of the routed interfaces associated with the parent VRF.",
    "properties": {
     "annotations": {
      "description": "A list of name-value annotations to store user-defined data including complex data such as JSON associated with the static routes.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "description": {
      "description": "The description is a user-defined field to store notes about the static routes.",
      "type": "string"
     },
     "enabled": {
      "description": "The enabled state of the static routes which indicates if the static routes is enabled or disabled.",
      "type": "boolean"
     },
     "fabricId": {
      "description": "This is a read-only field. The unique identifier of the fabric to which this static routes belong.",
      "readOnly": true,
      "type": "string"
     },
     "id": {
      "description": "This is a read-only field. The unique identifier of the static routes object.",
      "readOnly": true,
      "type": "string"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering static routes.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The user-defined name of the static routes. The static routes name has to be unique, and is case-insensitive.",
      "type": "string"
     },
     "routes": {
      "description": "A list of IP static route definitions.",
      "items": {
       "$ref": "#/components/schemas/modelsRouteInfo"
      },
      "type": "array"
     },
     "vrfId": {
      "description": "This is a read-only field. The unique identifier of the VRF to which this static routes belong to. The VRF identifier is immutable once set.",
      "readOnly": true,
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsSvi": {
    "description": "A Switch Virtual Interface (SVI) or VLAN interface is a logical Layer 3 interface that connects a VLAN to a Layer 3 virtual routing and forwarding (VRF) instance and acts as a gateway for the hosts connected to the VLAN. A Static Anycast Gateway SVI is an SVI deployed on multiple devices enabling the use of the same gateway IP addresses across all the nodes that are part of a VNI.",
    "properties": {
     "enabled": {
      "description": "The enabled state of the SVI which indicates if the SVI is enabled or disabled.",
      "type": "boolean"
     },
     "ipv4Addresses": {
      "description": "A list of up to two IPv4 host addresses with subnet mask to be configured on the SVI. If there are two IP addresses on the SVI, then there are two possibilities. \ta) If IPS are in two different networks, then SVI gets two networks. \tb) If IPS are in the same network, then the first IP address is the primary gateway \t  and second IP address is the secondary gateway.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "ipv6Addresses": {
      "description": "A list of up to one IPv6 host address with subnet mask to be configured on the SVI.",
      "items": {
       "type": "string"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "modelsSwitchGroup": {
    "description": "Description not available",
    "properties": {
     "baseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "baseModel": {
      "description": "Description not available",
      "type": "string"
     },
     "hwSets": {
      "description": "The hw sets that belong to this switch group This list will be sorted by the relative position of the hardware sets within the switch group",
      "items": {
       "$ref": "#/components/schemas/modelsHwSet"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "modelsSwitchGroupConnectivityRule": {
    "description": "Description not available",
    "properties": {
     "cablePluggablePid": {
      "description": "The pluggable pid to be used for the cable in the rule",
      "type": "string"
     },
     "ipmProbes": {
      "description": "ipm configuration(s) for this rule",
      "items": {
       "$ref": "#/components/schemas/modelsIpmSetting"
      },
      "type": "array"
     },
     "notes": {
      "description": "The notes associated with the connectivity rule. This could describe",
      "type": "string"
     },
     "numDirectConnections": {
      "description": "number of direct connections between group 1 and group 2",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "ruleId": {
      "description": "The id of the rule",
      "type": "string"
     },
     "strategy": {
      "$ref": "#/components/schemas/modelsCablingStrategy"
     },
     "switchGroup1BaseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "switchGroup1Breakout": {
      "description": "Breakout applied at the switches in sw group 1 in this rule",
      "type": "boolean"
     },
     "switchGroup1PluggablePid": {
      "description": "The pluggable pid to be used for the ports of the devices in group 1",
      "type": "string"
     },
     "switchGroup2BaseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "switchGroup2Breakout": {
      "description": "Breakout applied at the switches in sw group 2 in this rule",
      "type": "boolean"
     },
     "switchGroup2PluggablePid": {
      "description": "The pluggable pid to be used for the ports of the devices in group 2",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsTier": {
    "description": "Description not available",
    "properties": {
     "allowedTierTypes": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsTierType"
      },
      "type": "array"
     },
     "baseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "serverGroups": {
      "description": "The server groups that are a part of the tier if one of the allowed tier types is a server group",
      "items": {
       "$ref": "#/components/schemas/modelsServerGroup"
      },
      "type": "array"
     },
     "switchGroups": {
      "description": "The switch groups that are a part of the tier if one of the allowed tier types is a switch group",
      "items": {
       "$ref": "#/components/schemas/modelsSwitchGroup"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "modelsTierType": {
    "default": "TIER_TYPE_SWITCH_GROUP",
    "description": "TierType enumerates the types of tiers in a fabric topology",
    "enum": [
     "TIER_TYPE_SWITCH_GROUP",
     "TIER_TYPE_SERVER_GROUP",
     "TIER_TYPE_RAIL_GROUP"
    ],
    "type": "string"
   },
   "modelsTokenScope": {
    "default": "TOKEN_SCOPE_ADMIN",
    "description": "TokenScope defines an enumeration of scopes that represents different level of privileges that can be associated with bearer tokens and API keys.",
    "enum": [
     "TOKEN_SCOPE_ADMIN",
     "TOKEN_SCOPE_READ_ONLY",
     "TOKEN_SCOPE_READ_WRITE"
    ],
    "type": "string"
   },
   "modelsUser": {
    "description": "A User is a Cisco.com account, identified by email, authorized to access a specific Cisco Nexus Hyperfabric Organization with a specific role that represents the level of privilege of the user. Only a user with administrative privileges may modify another user's user record.",
    "properties": {
     "email": {
      "description": "The email address of the user.",
      "type": "string"
     },
     "enabled": {
      "description": "The enabled state of the user which indicates if the user is enabled or disabled.",
      "type": "boolean"
     },
     "id": {
      "description": "This is a read-only field. The unique identifier of a user.",
      "readOnly": true,
      "type": "string"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering users.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "lastLogin": {
      "description": "This is a read-only field. The last recorded web interface login time of the user in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (e.g. `YYYY-MM-DDTHH:MM:SSZ`).",
      "format": "date-time",
      "readOnly": true,
      "type": "string"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "role": {
      "$ref": "#/components/schemas/modelsUserRole"
     }
    },
    "type": "object"
   },
   "modelsUserRole": {
    "default": "ADMIN",
    "description": "UserRole defines an enumeration of roles that represents different level of privileges that can be associated with a user.",
    "enum": [
     "ADMIN",
     "READ_WRITE",
     "READ_ONLY"
    ],
    "type": "string"
   },
   "modelsVlanMember": {
    "description": "A VNI VLAN Member represents the attachement of a specific VNI to a port or port channel untagged or using a dot1q VLAN ID (also known as a trunk). The role of the port or port channel has to be configured as `HOST_PORT`.",
    "properties": {
     "port": {
      "$ref": "#/components/schemas/modelsPortEndpoint"
     },
     "untagged": {
      "description": "The flag that defines if the VNI VLAN member is configured as untagged or not.",
      "type": "boolean"
     },
     "vlanId": {
      "description": "The VLAN ID to be used as dot1Q encapsulation for the VNI on a port of the node or a port channel. The VLAN ID must be between 2 and 3600.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "modelsVni": {
    "description": "A VNI represents a Layer 2 or Layer 3 logical network that can be extended across the fabric and mapped to a VLAN ID on specific ports and port channels. A VNI can be mapped to a VRF and configured with an SVI to serve as an Anycast Gateway.",
    "properties": {
     "annotations": {
      "description": "A list of name-value annotations to store user-defined data including complex data such as JSON associated with the VNI.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "description": {
      "description": "The description is a user-defined field to store notes about the VNI.",
      "type": "string"
     },
     "enabled": {
      "description": "This is a read-only field. The enabled state of the VNI which indicates if the VNI is enabled or disabled.",
      "readOnly": true,
      "type": "boolean"
     },
     "fabricId": {
      "description": "This is a read-only field. The unique identifier of the fabric to which this VNI belongs to.",
      "readOnly": true,
      "type": "string"
     },
     "id": {
      "description": "This is a read-only field. The unique identifier of the VNI.",
      "readOnly": true,
      "type": "string"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering VNIs.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The user-defined name of the VNI. The VNI name has to be unique, and is case-insensitive.",
      "type": "string"
     },
     "svis": {
      "description": "A list of Switch Virtual Interfaces (SVIs) for the VNI.",
      "items": {
       "$ref": "#/components/schemas/modelsSvi"
      },
      "type": "array"
     },
     "vni": {
      "description": "The VXLAN Network Identifier (VNI) used for the VNI. The value must be between 2 and 6000000.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vrfId": {
      "description": "The unique identifier of the VRF associated with the VNI.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsVrf": {
    "description": "A VRF is a virtual-routing-and-forwarding instance that represents a routing table deployed across nodes in the fabric to implement VRF-lite and the ability to have multiple routing tables on a single device. A VRF can be associated to multiple VNIs configured with an Anycast Gateway SVI.",
    "properties": {
     "annotations": {
      "description": "A list of name-value annotations to store user-defined data including complex data such as JSON associated with the VRF.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "asn": {
      "description": "The Autonomous System Number (ASN) used for the VRF external BGP peering.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "description": {
      "description": "The description is a user-defined field to store notes about the VRF.",
      "type": "string"
     },
     "enabled": {
      "description": "This is a read-only field. The enabled state of the VRF which indicates if the VRF is enabled or disabled.",
      "readOnly": true,
      "type": "boolean"
     },
     "fabricId": {
      "description": "This is a read-only field. The unique identifier of the fabric to which this VRF belongs to.",
      "readOnly": true,
      "type": "string"
     },
     "id": {
      "description": "This is a read-only field. The unique identifier of the VRF.",
      "readOnly": true,
      "type": "string"
     },
     "interfaces": {
      "description": "This is a read-only field. A list of interfaces that are associated with the VRF.",
      "items": {
       "$ref": "#/components/schemas/modelsNetworkInterface"
      },
      "readOnly": true,
      "type": "array"
     },
     "isDefault": {
      "description": "This is a read-only field. The flag that indicates if the VRF is the default (auto-created) VRF or not.",
      "readOnly": true,
      "type": "boolean"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering VRFs.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The user-defined name of the VRF. The VRF name has to be unique, and is case-insensitive. The name should start with `Vrf`, `VRF`, `VRf` or `VrF`, followed by an optional `-` separator and end with an alpha-numeric string of 1 to 16 character.",
      "type": "string"
     },
     "vni": {
      "description": "The VXLAN Network Identifier (VNI) used for the VRF.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   }
  },
  "securitySchemes": {
   "http": {
    "bearerFormat": "JWT",
    "description": "A bearer token issued by the service",
    "scheme": "bearer",
    "type": "http"
   }
  }
 }
}
