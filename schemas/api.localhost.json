{
 "openapi": "3.0.3",
 "info": {
  "contact": {
   "email": "hyperfabric-support@cisco.com",
   "name": "Cisco Nexus Hyperfabric REST API",
   "url": "https://localhost:4242"
  },
  "description": "Use this documentation to explore the API in detail.\n\nEach request will have a complete description of all the accepted parameters.\n\n## Authentication\n\nRequests are authenticated using Bearer Tokens. Tokens should be created from within the Hyperfabric service web UI and stored securely.\n\nSee the [bearer token](https://developer.cisco.com/docs/hyperfabric/authentication/#bearer-tokens) documentation page for more details.\n",
  "license": {
   "name": "Cisco Licensing",
   "url": "https://www.cisco.com/c/dam/en_us/about/doing_business/legal/Cisco_General_Terms.pdf"
  },
  "termsOfService": "https://www.cisco.com/c/dam/en_us/about/doing_business/legal/Cisco_General_Terms.pdf",
  "title": "Cisco Nexus Hyperfabric REST API",
  "version": "0.0.1-Rev.2025-06-26.DEV"
 },
 "paths": {
  "/apiKeys": {
   "get": {
    "description": "Get the list of API keys associated with the user.",
    "operationId": "authGetApiKeys",
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authApiKeysResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/authApiKeysResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of API keys.",
    "tags": [
     "Auth"
    ]
   },
   "post": {
    "description": "Add one or more API keys by uploading the PEM encoded public keys, either ed25519 or RSA.\n\nAsymmetric keys can be used to sign REST requests as an alternative to using bearer tokens. The caller must sign the request correctly using their private key. The response will include a generated fingerprint of the key which should be included in the Authorization header along with the signature.",
    "operationId": "authUploadApiKey",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/authUploadApiKeyRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/authUploadApiKeyRequest"
       }
      }
     },
     "description": "Request Body",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authApiKey"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/authApiKey"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more API keys.",
    "tags": [
     "Auth"
    ]
   }
  },
  "/apiKeys/{keyId}": {
   "delete": {
    "description": "Delete a specific API key associated with the user.",
    "operationId": "authDeleteApiKey",
    "parameters": [
     {
      "description": "The id of the key to delete.",
      "in": "path",
      "name": "keyId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific API key.",
    "tags": [
     "Auth"
    ]
   }
  },
  "/assertions/counters": {
   "get": {
    "operationId": "historyGetAssertionHistoryCounterReport",
    "parameters": [
     {
      "description": "The start time in datetime string format",
      "in": "query",
      "name": "startTime",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The end time in datetime string format",
      "in": "query",
      "name": "endTime",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The query granularity in time interval",
      "in": "query",
      "name": "granularity",
      "schema": {
       "default": "PT1M",
       "description": "An enum value, select either string or integer",
       "enum": [
        "PT1M",
        "PT5M",
        "PT10M",
        "PT15M",
        "PT20M",
        "PT30M",
        "PT1H",
        "PT2H",
        "PT3H",
        "PT4H",
        "PT5H",
        "PT6H",
        "PT7H",
        "PT8H",
        "PT9H",
        "PT10H",
        "PT11H",
        "PT12H",
        "P1D",
        "P2D",
        "P3D",
        "P1W",
        "P1M",
        "P2M",
        "P3M"
       ],
       "type": "string"
      }
     },
     {
      "description": "The maximum number (default to 500) of results to return in a single response.",
      "in": "query",
      "name": "limit",
      "schema": {
       "format": "int32",
       "type": "integer"
      }
     },
     {
      "description": "Filter by the fabric UUID or name",
      "in": "query",
      "name": "fabric",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Filter by the device MAC address or name",
      "in": "query",
      "name": "device",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Filter by the port id or name",
      "in": "query",
      "name": "port",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Filter by one or more assertion types.",
      "in": "query",
      "name": "assertType",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Filter by one or more counter_type",
      "in": "query",
      "name": "counterType",
      "schema": {
       "default": "NEW_ONLY",
       "description": "An enum value, select either string or integer",
       "enum": [
        "NEW_ONLY",
        "CLEARED_ONLY",
        "CONFIG_ACTIVITY"
       ],
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/readerAssertCounterReportResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/readerAssertCounterReportResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "404": {
      "content": {
       "application/json": {
        "examples": {
         "404": {
          "$ref": "#/components/examples/404"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Not Found",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "409": {
      "content": {
       "application/json": {
        "examples": {
         "409": {
          "$ref": "#/components/examples/409"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Conflict",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of assertion counters and type history",
    "tags": [
     "History"
    ]
   }
  },
  "/assertions/records": {
   "get": {
    "operationId": "historyGetAssertionHistoryRecord",
    "parameters": [
     {
      "description": "The start time in datetime string format",
      "in": "query",
      "name": "startTime",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The end time in datetime string format",
      "in": "query",
      "name": "endTime",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The query granularity in time interval",
      "in": "query",
      "name": "granularity",
      "schema": {
       "default": "PT1M",
       "description": "An enum value, select either string or integer",
       "enum": [
        "PT1M",
        "PT5M",
        "PT10M",
        "PT15M",
        "PT20M",
        "PT30M",
        "PT1H",
        "PT2H",
        "PT3H",
        "PT4H",
        "PT5H",
        "PT6H",
        "PT7H",
        "PT8H",
        "PT9H",
        "PT10H",
        "PT11H",
        "PT12H",
        "P1D",
        "P2D",
        "P3D",
        "P1W",
        "P1M",
        "P2M",
        "P3M"
       ],
       "type": "string"
      }
     },
     {
      "description": "The maximum number (default to 500) of results to return in a single response.",
      "in": "query",
      "name": "limit",
      "schema": {
       "format": "int32",
       "type": "integer"
      }
     },
     {
      "description": "Filter by the fabric id",
      "in": "query",
      "name": "fabric",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Filter by the device id",
      "in": "query",
      "name": "device",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Filter by the port id or name",
      "in": "query",
      "name": "port",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Filter by one or more assertion types.",
      "in": "query",
      "name": "assertType",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Filter by one or more counter_type",
      "in": "query",
      "name": "counterType",
      "schema": {
       "default": "NEW_ONLY",
       "description": "An enum value, select either string or integer",
       "enum": [
        "NEW_ONLY",
        "CLEARED_ONLY",
        "CONFIG_ACTIVITY"
       ],
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/readerAssertHistoryApiRecordResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/readerAssertHistoryApiRecordResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "404": {
      "content": {
       "application/json": {
        "examples": {
         "404": {
          "$ref": "#/components/examples/404"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Not Found",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "409": {
      "content": {
       "application/json": {
        "examples": {
         "409": {
          "$ref": "#/components/examples/409"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Conflict",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of assertion history records",
    "tags": [
     "History"
    ]
   }
  },
  "/bearerTokens": {
   "get": {
    "description": "Get the list of bearer tokens associated with the user.",
    "operationId": "authGetBearerTokens",
    "parameters": [
     {
      "description": "Include metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authGetBearerTokensResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/authBearerTokensResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of bearer tokens.",
    "tags": [
     "Auth"
    ]
   },
   "post": {
    "description": "Add one or more bearer tokens for the user.",
    "operationId": "authCreateBearerTokens",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/authCreateBearerTokensRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/authCreateBearerTokensRequest"
       }
      }
     },
     "description": "Create one or more new bearer tokens.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authCreateBearerTokensResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/authCreateBearerTokensResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more bearer tokens.",
    "tags": [
     "Auth"
    ]
   }
  },
  "/bearerTokens/{tokenId}": {
   "delete": {
    "description": "Delete a specific bearer token associated with the user.",
    "operationId": "authDeleteBearerToken",
    "parameters": [
     {
      "description": "The id of the token to delete.",
      "in": "path",
      "name": "tokenId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific bearer token.",
    "tags": [
     "Auth"
    ]
   },
   "get": {
    "description": "Get a specific bearer token associated with the user.",
    "operationId": "authGetBearerToken",
    "parameters": [
     {
      "description": "The token id.",
      "in": "path",
      "name": "tokenId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authGetBearerTokenResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/authBearerToken"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific bearer token.",
    "tags": [
     "Auth"
    ]
   }
  },
  "/blueprintTemplates": {
   "get": {
    "operationId": "fabricsGetFabricBlueprintTemplates",
    "parameters": [
     {
      "description": "filter by template types",
      "in": "query",
      "name": "templateTypes",
      "schema": {
       "default": "TEMPLATE_TYPE_SWITCH_FABRICS",
       "description": "An enum value, select either string or integer",
       "enum": [
        "TEMPLATE_TYPE_SWITCH_FABRICS",
        "TEMPLATE_TYPE_AI_CLUSTERS",
        "TEMPLATE_TYPE_CUSTOM_TEMPLATE"
       ],
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricBlueprintTemplatesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGetFabricBlueprintTemplatesResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get all the fabric blueprint templates",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/blueprintTemplates/{blueprintTemplateId}": {
   "get": {
    "operationId": "fabricsGetFabricBlueprintTemplateData",
    "parameters": [
     {
      "description": "required blueprint filter (id or name)",
      "in": "path",
      "name": "blueprintTemplateId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "in": "query",
      "name": "includeTenantObjects",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricBlueprintTemplatesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGetFabricBlueprintTemplateDataResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the fabric blueprint template for a specific template id",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/cablingPlansDryrun": {
   "put": {
    "operationId": "fabricsGenerateCablingPlanDryrun",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configGenerateCablingPlanRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configGenerateCablingPlanRequest"
       }
      }
     },
     "description": "Request Body",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGenerateCablingPlanResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGenerateCablingPlanResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/certificates": {
   "get": {
    "operationId": "certificatesGetOrgCertificates",
    "parameters": [
     {
      "description": "A set of identifiers.",
      "in": "query",
      "name": "ids",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "A set of names.",
      "in": "query",
      "name": "names",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetOrgCertificatesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGetOrgCertificatesResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "GetOrgCertificates queries and returns org certificates.",
    "tags": [
     "Certificates"
    ]
   },
   "post": {
    "operationId": "certificatesAddOrgCertificates",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddOrgCertificatesRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsCertificates"
       }
      }
     },
     "description": "Create organization certificates.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configAddOrgCertificatesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configAddOrgCertificatesResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "AddOrgCertificates will create org an certificate.",
    "tags": [
     "Certificates"
    ]
   }
  },
  "/certificates/{certificateId}": {
   "delete": {
    "operationId": "certificatesDeleteOrgCertificate",
    "parameters": [
     {
      "description": "The id or name of the certificate.",
      "in": "path",
      "name": "certificateId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "DeleteOrgCertificate will delete an org certificate.",
    "tags": [
     "Certificates"
    ]
   },
   "get": {
    "operationId": "certificatesGetOrgCertificate",
    "parameters": [
     {
      "description": "The id or name of the certificate.",
      "in": "path",
      "name": "certificateId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetOrgCertificateResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGetOrgCertificateResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "GetOrgCertificate queries and returns an org certificate.",
    "tags": [
     "Certificates"
    ]
   },
   "put": {
    "operationId": "certificatesUpdateOrgCertificate",
    "parameters": [
     {
      "description": "The id or name of the certificate.",
      "in": "path",
      "name": "certificateId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configPutOrgCertificateRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsCertificates"
       }
      }
     },
     "description": "Update an organization certificate.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configPutOrgCertificateResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configUpdateOrgCertificateResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "UpdateOrgCertificate will update org an certificate.",
    "tags": [
     "Certificates"
    ]
   }
  },
  "/chatbots/invitations": {
   "get": {
    "operationId": "chatbotsGetChatbotInvitations",
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/miscGetInvitationsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/miscGetInvitationsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get chatbot invitation entries for all supported chat platforms",
    "tags": [
     "Chatbots"
    ]
   }
  },
  "/chatbots/linkedAccounts": {
   "get": {
    "description": "The API caller's organization is used implicitly as a request filter. A chat_platform query parameter can be set to retrieve the records specific to that platform.",
    "operationId": "chatbotsGetLinkedAccounts",
    "parameters": [
     {
      "description": "Collects the linked accounts for the specified chat platform. If unspecified, returns all linked accounts for that org.",
      "in": "query",
      "name": "chatPlatform",
      "schema": {
       "default": "PLATFORM_DISCORD",
       "description": "An enum value, select either string or integer",
       "enum": [
        "PLATFORM_DISCORD",
        "PLATFORM_WEBEX",
        "PLATFORM_SLACK",
        "PLATFORM_MS_TEAMS"
       ],
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/miscGetLinkedAccountsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/miscGetLinkedAccountsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a set of existing linked accounts.",
    "tags": [
     "Chatbots"
    ]
   },
   "post": {
    "operationId": "chatbotsSetLinkedAccount",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/miscSetLinkedAccountRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/miscSetLinkedAccountRequest"
       }
      }
     },
     "description": "SetLinkedAccountRequest creates a new linked account.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/miscSetLinkedAccountResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/miscSetLinkedAccountResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Create a new chatbot linked account.",
    "tags": [
     "Chatbots"
    ]
   }
  },
  "/chatbots/linkedAccounts/candidates": {
   "post": {
    "description": "A linked account candidate contains all information to identify a remote chatbot user account.",
    "operationId": "chatbotsGetChatAccountCandidateWithPasscode",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/miscGetCandidateInfoWithPasscodeRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/miscGetCandidateInfoWithPasscodeRequest"
       }
      }
     },
     "description": "GetCandidateInfoWithPasscodeRequest validates the totp passcode and retrieves the remote chat user account candidate information associated with the passcode.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/miscGetCandidateInfoWithPasscodeResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/miscGetCandidateInfoWithPasscodeResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a linked account candidate associated with a passcode.",
    "tags": [
     "Chatbots"
    ]
   }
  },
  "/chatbots/linkedAccounts/{accountId}": {
   "delete": {
    "operationId": "chatbotsDeleteLinkedAccount",
    "parameters": [
     {
      "description": "Identifier of the linked account to be marked as DELETED.",
      "in": "path",
      "name": "accountId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Mark an existing chatbot linked account as DELETED.",
    "tags": [
     "Chatbots"
    ]
   },
   "put": {
    "description": "The update can enable/disable the admin state of the linked account.",
    "operationId": "chatbotsUpdateLinkedAccount",
    "parameters": [
     {
      "description": "Identifier of the target linked account record to be updated.",
      "in": "path",
      "name": "accountId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/miscUpdateLinkedAccountRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/miscUpdateLinkedAccountRequest"
       }
      }
     },
     "description": "UpdateLinkedAccountRequest updates an existing linked account identified with an account id.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/miscUpdateLinkedAccountResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/miscUpdateLinkedAccountResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update an existing chatbot linked account.",
    "tags": [
     "Chatbots"
    ]
   }
  },
  "/contexts": {
   "get": {
    "operationId": "miscGetUserContexts",
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/routingGetUserContextsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/routingGetUserContextsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get user contexts",
    "tags": [
     "Misc"
    ]
   }
  },
  "/credentials/{credentialsId}": {
   "get": {
    "description": "Get a specific set of credentials.",
    "operationId": "credentialsGetSingleCredentials",
    "parameters": [
     {
      "description": "The id of the set of credentials to fetch.",
      "in": "path",
      "name": "credentialsId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/modelsCredentials"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsCredentials"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific set of credentials.",
    "tags": [
     "Credentials"
    ]
   }
  },
  "/devices": {
   "get": {
    "description": "Get the list of devices associated with the organization, both bound and unbound.",
    "operationId": "devicesGetDevicesForOrg",
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/miscGetDevicesForOrg"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/miscGetDevicesForOrgResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of devices.",
    "tags": [
     "Devices"
    ]
   },
   "post": {
    "description": "Claim ownership of one or more devices and assign those devices to the organization.",
    "operationId": "fabricsClaimDevices",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configClaimDevicesRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configClaimDevicesRequest"
       }
      }
     },
     "description": "Request Body",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configClaimDevicesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configClaimDevicesResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Claim one or more devices into the organization.",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/devices/neighbors": {
   "get": {
    "operationId": "devicesGetDiscoveredDevices",
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/miscGetDiscoveredDevicesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/miscGetDiscoveredDevicesResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get all the discovered devices that eligible for spider claim",
    "tags": [
     "Devices"
    ]
   }
  },
  "/devices/{deviceId}": {
   "delete": {
    "description": "Unclaim a specific device from the organization. After being unclaimed, a device becomes an unknown device to the organization and can be claimed by another organization.",
    "operationId": "fabricsUnclaimDevice",
    "parameters": [
     {
      "in": "path",
      "name": "deviceId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Unclaim a specific device.",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/entitlements": {
   "get": {
    "operationId": "fabricsGetEntitlementUsage",
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetEntitlementUsageResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGetEntitlementUsageResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get entitlements",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/events": {
   "get": {
    "description": "Get the list of user activity events. User activity events are generated by the service when a user modifies configuration objects.",
    "operationId": "miscGetActivityEvents",
    "parameters": [
     {
      "description": "Optional start time of the query time range.",
      "in": "query",
      "name": "startTime",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Optional end time of the query time range.",
      "in": "query",
      "name": "endTime",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Filter by object types.",
      "in": "query",
      "name": "objectTypes",
      "schema": {
       "default": "USER",
       "description": "An enum value, select either string or integer",
       "enum": [
        "USER",
        "TENANT",
        "FABRIC",
        "NODE",
        "NETWORK_PORT",
        "PORT_CONNECTION",
        "VLAN",
        "SVI",
        "DHCP_RELAY",
        "VRF",
        "STATIC_ROUTES",
        "PORT_CHANNEL",
        "FABRIC_TRANSACTION",
        "ORGANIZATION",
        "BEARER_TOKEN",
        "API_KEY",
        "REST_KEY",
        "VNI",
        "MANAGEMENT_PORT",
        "LOOPBACK",
        "SUB_INTERFACE",
        "PER_VLAN_STP",
        "BGP_PEER",
        "PORT_BREAKOUT",
        "BGP_POLICY",
        "PREFIX_LIST",
        "DEVICE",
        "NOTIFICATION_ENDPOINT",
        "CERTIFICATES",
        "FABRIC_IMAGE_UPDATE",
        "NODE_IMAGE_PACKAGE",
        "IMAGE_PACKAGE",
        "IPM_CONFIG",
        "NODE_IMAGE_UPDATE",
        "NODE_METADATA",
        "NOTIFICATION_SETTINGS",
        "DSCP_CONFIG",
        "TIER",
        "SWITCH_GROUP",
        "SERVER_GROUP",
        "RAIL_GROUP",
        "RAIL",
        "HW_SET",
        "SWITCH_GROUP_CONN_RULE",
        "SERVER_GROUP_CONN_RULE",
        "NODE_PORT_CONN_RULE",
        "NODE_PORT_OVERRIDE_RULE"
       ],
       "type": "string"
      }
     },
     {
      "description": "Filter by object identifier.",
      "in": "query",
      "name": "objectIds",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Filter by username.",
      "in": "query",
      "name": "usernames",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Filter by timestamp.",
      "in": "query",
      "name": "objectNames",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The type of user operation.",
      "in": "query",
      "name": "operations",
      "schema": {
       "default": "CREATE",
       "description": "An enum value, select either string or integer",
       "enum": [
        "CREATE",
        "UPDATE",
        "DELETE",
        "ENABLE",
        "DISABLE",
        "LOGIN",
        "LOGOUT",
        "COMMIT",
        "REVERT",
        "BIND",
        "UNBIND",
        "COMMENT"
       ],
       "type": "string"
      }
     },
     {
      "description": "Maximum number of objects to return.",
      "in": "query",
      "name": "pagination.limit",
      "schema": {
       "format": "int32",
       "type": "integer"
      }
     },
     {
      "description": "Start after the supplied cursor.",
      "in": "query",
      "name": "pagination.cursor",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Sort by this field.",
      "in": "query",
      "name": "pagination.sortBy",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Sort in the descending order.",
      "in": "query",
      "name": "pagination.sortDesc",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetActivityEventsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGetActivityEventsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of user activity events.",
    "tags": [
     "Misc"
    ]
   }
  },
  "/fabrics": {
   "get": {
    "description": "Get the list of fabrics in the organization.",
    "operationId": "fabricsGetAllFabrics",
    "parameters": [
     {
      "description": "Filter by one or more fabric ids and or names.",
      "in": "query",
      "name": "fabricId",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "description": "The max number of fabrics to return in the response.",
      "in": "query",
      "name": "max",
      "schema": {
       "format": "int32",
       "type": "integer"
      }
     },
     {
      "description": "An optional cursor for pagination.",
      "in": "query",
      "name": "cursor",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include the fabric design in the response.",
      "in": "query",
      "name": "includeDesign",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGetAllFabricsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of fabrics.",
    "tags": [
     "Fabrics"
    ]
   },
   "post": {
    "description": "Add a fabric to the organization. Currently only one fabric permitted per call.",
    "operationId": "fabricsAddFabrics",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddFabricsRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configAddFabricsRequest"
       }
      }
     },
     "description": "The request to create a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configAddFabricsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configAddFabricsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add a fabric.",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/fabrics/configurations": {
   "post": {
    "description": "Import a fabric based on a fabric configuration.",
    "operationId": "fabricsImportFabricConfiguration",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configExportedFabricConfiguration"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configExportedFabricConfiguration"
       }
      }
     },
     "description": "An exported FabricConfiguration.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configFabricConfig"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricConfig"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Import fabric configuration.",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/fabrics/{fabricId}": {
   "delete": {
    "description": "Delete a specific fabric.",
    "operationId": "fabricsDeleteFabric",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific fabric.",
    "tags": [
     "Fabrics"
    ]
   },
   "get": {
    "description": "Get a specific fabric.",
    "operationId": "fabricsGetFabric",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "description": "Include the fabric design in the response.",
      "in": "query",
      "name": "includeDesign",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabric"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "404": {
      "content": {
       "application/json": {
        "examples": {
         "404": {
          "$ref": "#/components/examples/404"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Not Found",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific fabric.",
    "tags": [
     "Fabrics"
    ]
   },
   "put": {
    "description": "Update a specific fabric.",
    "operationId": "fabricsUpdateFabric",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateFabricRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configFabric"
       }
      }
     },
     "description": "The request to update a specific fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configUpdateFabricResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabric"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific fabric.",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/fabrics/{fabricId}/assertions": {
   "put": {
    "description": "Latch or unlatch one or more assertions of a fabric.",
    "operationId": "assertionsLatchUnlatchAssertions",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configLatchUnlatchAssertionsRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configLatchUnlatchAssertionsRequest"
       }
      }
     },
     "description": "The request to latch/unlatch a list of assertions of a specific fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configLatchUnlatchAssertionsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configLatchUnlatchAssertionsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Latch/unlatch one or more assertions.",
    "tags": [
     "Assertions"
    ]
   }
  },
  "/fabrics/{fabricId}/bgpPolicies": {
   "get": {
    "description": "Get the list of BGP policies of a specific fabric.",
    "operationId": "bgppoliciesGetFabricBgpPolicies",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricBgpPoliciesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricBgpPoliciesResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of BGP policies.",
    "tags": [
     "Bgp Policies"
    ]
   },
   "post": {
    "description": "Add one or more BGP policies to a specific fabric.",
    "operationId": "bgppoliciesAddFabricBgpPolicies",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddFabricBgpPoliciesRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configAddFabricBgpPoliciesRequest"
       }
      }
     },
     "description": "The request to add one or more BGP policies to a specific fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configAddFabricBgpPoliciesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricBgpPoliciesResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more BGP policies.",
    "tags": [
     "Bgp Policies"
    ]
   }
  },
  "/fabrics/{fabricId}/bgpPolicies/{policyId}": {
   "delete": {
    "description": "Delete a specific BGP policy of a fabric.",
    "operationId": "bgppoliciesDeleteFabricBgpPolicy",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The BGP policy id or name.",
      "in": "path",
      "name": "policyId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific BGP policy.",
    "tags": [
     "Bgp Policies"
    ]
   },
   "get": {
    "description": "Get a specific BGP policy of a fabric.",
    "operationId": "bgppoliciesGetFabricBgpPolicy",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The BGP policy id or name.",
      "in": "path",
      "name": "policyId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricBgpPolicyResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsBgpPolicy"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific BGP policy.",
    "tags": [
     "Bgp Policies"
    ]
   },
   "put": {
    "description": "Update a specific BGP policy of a fabric.",
    "operationId": "bgppoliciesUpdateFabricBgpPolicy",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The BGP policy id or name.",
      "in": "path",
      "name": "policyId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateFabricBgpPolicyRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsBgpPolicy"
       }
      }
     },
     "description": "The request to update a specific BGP policies in a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configUpdateFabricBgpPolicyResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsBgpPolicy"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific BGP policy.",
    "tags": [
     "Bgp Policies"
    ]
   }
  },
  "/fabrics/{fabricId}/billOfMaterials": {
   "get": {
    "description": "Get the Bill Of Materials (BOM) of the products in a specific fabric.",
    "operationId": "fabricsGetFabricBom",
    "parameters": [
     {
      "description": "Fabric UUID",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate name.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricBomResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGetFabricBomResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the Bill Of Materials.",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/fabrics/{fabricId}/cablingPlans": {
   "get": {
    "operationId": "fabricsGetCablingPlan",
    "parameters": [
     {
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The group names to filter connections for",
      "in": "query",
      "name": "groupName",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The group ids to filter connections for",
      "in": "query",
      "name": "groupId",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The rail ids to filter connections for",
      "in": "query",
      "name": "railId",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The rail names to filter connections for",
      "in": "query",
      "name": "railName",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node names to filter connections for",
      "in": "query",
      "name": "nodeName",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node ids to filter connections for",
      "in": "query",
      "name": "nodeId",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetCablingPlanResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGetCablingPlanResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "tags": [
     "Fabrics"
    ]
   },
   "put": {
    "operationId": "fabricsGenerateCablingPlan",
    "parameters": [
     {
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configGenerateCablingPlanRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configGenerateCablingPlanRequest"
       }
      }
     },
     "description": "Request Body",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGenerateCablingPlanResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGenerateCablingPlanResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/fabrics/{fabricId}/candidates": {
   "get": {
    "description": "Get the list of candidate configurations in a specific fabric.",
    "operationId": "fabricsGetFabricCandidates",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name.",
      "in": "query",
      "name": "name",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The transaction sequence number of the candidate configuration.",
      "in": "query",
      "name": "txnId",
      "schema": {
       "format": "int64",
       "type": "integer"
      }
     },
     {
      "description": "Include committed/reverted candidate configurations.",
      "in": "query",
      "name": "needInactive",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "description": "Include the list of reviews of the candidate configurations.",
      "in": "query",
      "name": "needReviews",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "description": "Include the list of activity events of the candidate configurations.",
      "in": "query",
      "name": "needEvents",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "description": "Start value of the time range in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (e.g. `YYYY-MM-DDTHH:MM:SSZ`).",
      "in": "query",
      "name": "startTime",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "End value of the time range in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (e.g. `YYYY-MM-DDTHH:MM:SSZ`).",
      "in": "query",
      "name": "endTime",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricCandidatesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGetFabricCandidatesResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of candidate configurations.",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/fabrics/{fabricId}/candidates/{name}": {
   "delete": {
    "description": "Discard a specific candidate configuration in a fabric.",
    "operationId": "fabricsRevertFabricCandidate",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name.",
      "in": "path",
      "name": "name",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Discard a specific candidate configuration.",
    "tags": [
     "Fabrics"
    ]
   },
   "get": {
    "description": "Get a specific candidate configuration in a fabric.",
    "operationId": "fabricsGetFabricCandidate",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name.",
      "in": "path",
      "name": "name",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include committed/reverted candidate configuration.",
      "in": "query",
      "name": "needInactive",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "description": "Include the list of reviews of the candidate configuration.",
      "in": "query",
      "name": "needReviews",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "description": "Include the list of activity events of the candidate configuration.",
      "in": "query",
      "name": "needEvents",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricCandidateResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricCandidate"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific candidate configuration.",
    "tags": [
     "Fabrics"
    ]
   },
   "post": {
    "description": "Commit a specific candidate configuration to the running configuration in a fabric.",
    "operationId": "fabricsCommitFabricCandidate",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name.",
      "in": "path",
      "name": "name",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configCommitFabricCandidateRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configCommitFabricCandidateRequest"
       }
      }
     },
     "description": "The request to commit a specific candidate configuration of a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configCommitFabricCandidateResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configCommitFabricCandidateResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Commit a specific candidate configuration.",
    "tags": [
     "Fabrics"
    ]
   },
   "put": {
    "description": "Add a comment to a specific candidate configuration in a fabric.",
    "operationId": "fabricsReviewFabricCandidate",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name.",
      "in": "path",
      "name": "name",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configReviewFabricCandidateRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configReviewFabricCandidateRequest"
       }
      }
     },
     "description": "The request to add review comments to a specific candidate configuration of a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configReviewFabricCandidateResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configReviewFabricCandidateResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Comment on a specific candidate configuration.",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/fabrics/{fabricId}/configurations": {
   "get": {
    "description": "Get the entire configuration of a specific fabric.",
    "operationId": "fabricsExportFabricConfiguration",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configExportedFabricConfiguration"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configExportedFabricConfiguration"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Export fabric configuration.",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/fabrics/{fabricId}/connections": {
   "delete": {
    "description": "Delete all connections in a specific fabric.",
    "operationId": "fabricsDeleteFabricConnections",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete all connections.",
    "tags": [
     "Fabrics"
    ]
   },
   "get": {
    "description": "Get the list of connections in a specific fabric.",
    "operationId": "fabricsGetFabricConnections",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricConnectionsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricConnectionsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of connections.",
    "tags": [
     "Fabrics"
    ]
   },
   "post": {
    "description": "Add one or more connections to a specific fabric.",
    "operationId": "fabricsAddFabricConnections",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddFabricConnectionsRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configAddFabricConnectionsRequest"
       }
      }
     },
     "description": "The request to add one or more connections to a specific fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configAddFabricConnectionsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricConnectionsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more connections.",
    "tags": [
     "Fabrics"
    ]
   },
   "put": {
    "description": "Update the list of connections in a specific fabric. This is a complete replacement of the connections in a fabric. If no connections exist new ones will be created.",
    "operationId": "fabricsSetFabricConnections",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configSetFabricConnectionsRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configSetFabricConnectionsRequest"
       }
      }
     },
     "description": "The request to update the list of connections in a specific fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configSetFabricConnectionsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricConnectionsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update the list of connections.",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/fabrics/{fabricId}/connections/{connectionId}": {
   "delete": {
    "description": "Delete a specific connection in a fabric.",
    "operationId": "fabricsDeleteFabricConnection",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The connection id or port name.",
      "in": "path",
      "name": "connectionId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific connection.",
    "tags": [
     "Fabrics"
    ]
   },
   "get": {
    "description": "Get a specific connection in a fabric.",
    "operationId": "fabricsGetFabricConnection",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The connection id, connections are not named.",
      "in": "path",
      "name": "connectionId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricConnection"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsPortConnection"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific connection.",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/fabrics/{fabricId}/devices/{deviceId}/assertions": {
   "get": {
    "description": "Get the list of assertions of a specific device in a fabric.",
    "operationId": "assertionsGetDeviceAssertions",
    "parameters": [
     {
      "description": "The device id or name.",
      "in": "path",
      "name": "deviceId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Filter by assertion latch state.",
      "in": "query",
      "name": "state",
      "schema": {
       "default": "LATCHED",
       "description": "An enum value, select either string or integer",
       "enum": [
        "LATCHED",
        "UNLATCHED"
       ],
       "type": "string"
      }
     },
     {
      "description": "Filter by one or more assertion types.",
      "in": "query",
      "name": "type",
      "schema": {
       "default": "CONFIG_ADDED_TO_DB",
       "description": "An enum value, select either string or integer",
       "enum": [
        "CONFIG_ADDED_TO_DB",
        "PORT_LINK_UP",
        "DEVICE_CONNECTED_TO_CLOUD",
        "PORT_EXPECTED_NEIGHBOR",
        "PORT_NOT_CONNECTED_TO_FABRIC",
        "DEVICE_CONNECTED_TO_FABRIC",
        "PORT_LINK_DOWN",
        "PORT_CONNECTION_SPEED_MATCH",
        "PORT_SPEED_CONSISTENT",
        "VLAN_HAS_TRAFFIC",
        "STATIC_DEFAULT_ROUTE_EXISTS",
        "MANAGEMENT_PORT_CONFIG_SAME",
        "DEVICE_RESOURCE_USAGE_BELOW_THRESHOLD",
        "BGP_PEER_ESTABLISHED",
        "EXPECTED_PORT_BREAKOUT_EXISTS",
        "SUB_INTERFACE_UP",
        "SUB_INTERFACE_DOWN",
        "PORT_CHANNEL_MEMBER_UP",
        "PORT_VLAN_STP_STATE_CONSISTENT",
        "PORT_PLUGGABLE_PID_SAME",
        "DEVICE_ENV_PSU_USAGE_BELOW_THRESHOLD",
        "PORT_NO_UNKNOWN_VLAN_FOUND",
        "DEVICE_FAN_SPEED_BELOW_THRESHOLD",
        "DEVICE_TEMPERATURE_BELOW_THRESHOLD"
       ],
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/stateGetDeviceAssertionsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/stateAssertionsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "404": {
      "content": {
       "application/json": {
        "examples": {
         "404": {
          "$ref": "#/components/examples/404"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Not Found",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "409": {
      "content": {
       "application/json": {
        "examples": {
         "409": {
          "$ref": "#/components/examples/409"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Conflict",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of device assertions.",
    "tags": [
     "Assertions"
    ]
   }
  },
  "/fabrics/{fabricId}/devices/{deviceId}/counters": {
   "get": {
    "description": "Get the list of counters information of a specific device.",
    "operationId": "stateGetDeviceCounters",
    "parameters": [
     {
      "description": "The device id or name.",
      "in": "path",
      "name": "deviceId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/stateGetDeviceCounters"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/stateCountersResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "404": {
      "content": {
       "application/json": {
        "examples": {
         "404": {
          "$ref": "#/components/examples/404"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Not Found",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "409": {
      "content": {
       "application/json": {
        "examples": {
         "409": {
          "$ref": "#/components/examples/409"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Conflict",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of device counters.",
    "tags": [
     "State"
    ]
   }
  },
  "/fabrics/{fabricId}/devices/{deviceId}/managementPorts": {
   "get": {
    "description": "Get the management port configuration reported by an unbound device.",
    "operationId": "devicesGetDeviceManagementPorts",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The device id or name.",
      "in": "path",
      "name": "deviceId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/stateGetDeviceManagementPortsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/stateDeviceManagementPortsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "404": {
      "content": {
       "application/json": {
        "examples": {
         "404": {
          "$ref": "#/components/examples/404"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Not Found",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "409": {
      "content": {
       "application/json": {
        "examples": {
         "409": {
          "$ref": "#/components/examples/409"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Conflict",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the device management port configuration.",
    "tags": [
     "Devices"
    ]
   }
  },
  "/fabrics/{fabricId}/devices/{deviceId}/ports/{port}/assertions": {
   "get": {
    "description": "Get the list of assertions for a specific port of a device in a fabric.",
    "operationId": "assertionsGetDevicePortAssertions",
    "parameters": [
     {
      "description": "The device id or name.",
      "in": "path",
      "name": "deviceId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The port index or name.",
      "in": "path",
      "name": "port",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Filter by assertion latch state.",
      "in": "query",
      "name": "state",
      "schema": {
       "default": "LATCHED",
       "description": "An enum value, select either string or integer",
       "enum": [
        "LATCHED",
        "UNLATCHED"
       ],
       "type": "string"
      }
     },
     {
      "description": "Filter by one or more assertion types.",
      "in": "query",
      "name": "type",
      "schema": {
       "default": "CONFIG_ADDED_TO_DB",
       "description": "An enum value, select either string or integer",
       "enum": [
        "CONFIG_ADDED_TO_DB",
        "PORT_LINK_UP",
        "DEVICE_CONNECTED_TO_CLOUD",
        "PORT_EXPECTED_NEIGHBOR",
        "PORT_NOT_CONNECTED_TO_FABRIC",
        "DEVICE_CONNECTED_TO_FABRIC",
        "PORT_LINK_DOWN",
        "PORT_CONNECTION_SPEED_MATCH",
        "PORT_SPEED_CONSISTENT",
        "VLAN_HAS_TRAFFIC",
        "STATIC_DEFAULT_ROUTE_EXISTS",
        "MANAGEMENT_PORT_CONFIG_SAME",
        "DEVICE_RESOURCE_USAGE_BELOW_THRESHOLD",
        "BGP_PEER_ESTABLISHED",
        "EXPECTED_PORT_BREAKOUT_EXISTS",
        "SUB_INTERFACE_UP",
        "SUB_INTERFACE_DOWN",
        "PORT_CHANNEL_MEMBER_UP",
        "PORT_VLAN_STP_STATE_CONSISTENT",
        "PORT_PLUGGABLE_PID_SAME",
        "DEVICE_ENV_PSU_USAGE_BELOW_THRESHOLD",
        "PORT_NO_UNKNOWN_VLAN_FOUND",
        "DEVICE_FAN_SPEED_BELOW_THRESHOLD",
        "DEVICE_TEMPERATURE_BELOW_THRESHOLD"
       ],
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/stateGetDevicePortAssertionsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/stateAssertionsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "404": {
      "content": {
       "application/json": {
        "examples": {
         "404": {
          "$ref": "#/components/examples/404"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Not Found",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "409": {
      "content": {
       "application/json": {
        "examples": {
         "409": {
          "$ref": "#/components/examples/409"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Conflict",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of port assertions.",
    "tags": [
     "Assertions"
    ]
   }
  },
  "/fabrics/{fabricId}/devices/{deviceId}/ports/{port}/counters": {
   "get": {
    "description": "Get the list of port counters information on a specific port of a device.",
    "operationId": "stateGetDevicePortCounters",
    "parameters": [
     {
      "description": "The chassis id or name.",
      "in": "path",
      "name": "deviceId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The port id, index or name.",
      "in": "path",
      "name": "port",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/stateGetDevicePortCounters"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/stateCountersResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "404": {
      "content": {
       "application/json": {
        "examples": {
         "404": {
          "$ref": "#/components/examples/404"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Not Found",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "409": {
      "content": {
       "application/json": {
        "examples": {
         "409": {
          "$ref": "#/components/examples/409"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Conflict",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of device port counters.",
    "tags": [
     "State"
    ]
   }
  },
  "/fabrics/{fabricId}/devices/{deviceId}/sensors": {
   "get": {
    "description": "Get the list of sensor information of a specific device.",
    "operationId": "stateGetDeviceSensors",
    "parameters": [
     {
      "description": "The device id or name.",
      "in": "path",
      "name": "deviceId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/stateSensorsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/stateSensorsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "404": {
      "content": {
       "application/json": {
        "examples": {
         "404": {
          "$ref": "#/components/examples/404"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Not Found",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "409": {
      "content": {
       "application/json": {
        "examples": {
         "409": {
          "$ref": "#/components/examples/409"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Conflict",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of device sensor information.",
    "tags": [
     "State"
    ]
   }
  },
  "/fabrics/{fabricId}/dhcpRelays": {
   "get": {
    "description": "Get the list of dhcp relays in a specific fabric.",
    "operationId": "networksGetFabricDhcpRelays",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the running configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configFabricDhcpRelaysResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricDhcpRelaysResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the dhcp relays of a fabric.",
    "tags": [
     "Networks"
    ]
   }
  },
  "/fabrics/{fabricId}/dscpConfigs": {
   "get": {
    "description": "Get the list of DscpConfig objects in the fabric.",
    "operationId": "dscpGetDscpConfigs",
    "parameters": [
     {
      "description": "The fabric identifier.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate name.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "A set of DscpConfig object identifiers.",
      "in": "query",
      "name": "ids",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "A set of DscpConfig object names.",
      "in": "query",
      "name": "names",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Return default configs only.",
      "in": "query",
      "name": "defaultOnly",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configTenantsObjectsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configTenantsObjectsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of DscpConfig objects.",
    "tags": [
     "Dscp"
    ]
   }
  },
  "/fabrics/{fabricId}/inventories": {
   "get": {
    "description": "Get the list of discovered devices via LLDP in a specific fabric.",
    "operationId": "devicesGetFabricInventories",
    "parameters": [
     {
      "description": "Query inventories of a given Fabric. This is valid only when at least one of the discovered device is bound to a blueprint Fabric. Fabric identifier must be of the blueprint Fabric.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Query inventories that matches a specific topology.",
      "in": "query",
      "name": "topology",
      "schema": {
       "default": "MESH",
       "description": "An enum value, select either string or integer",
       "enum": [
        "MESH",
        "SPINE_LEAF",
        "DESIGN_BASED"
       ],
       "type": "string"
      }
     },
     {
      "description": "Query inventories that include a set of node identifiers.",
      "in": "query",
      "name": "nodeIds",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricInventoriesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGetFabricInventoriesResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of discovered devices.",
    "tags": [
     "Devices"
    ]
   }
  },
  "/fabrics/{fabricId}/ipmConfigs": {
   "get": {
    "description": "Get the list of IpmConfig objects in the fabric.",
    "operationId": "ipmconfigGetIpmConfigs",
    "parameters": [
     {
      "description": "The fabric identifier.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate name.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "A set of IpmConfig object identifiers.",
      "in": "query",
      "name": "ids",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "A set of IpmConfig object names.",
      "in": "query",
      "name": "names",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configTenantsObjectsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configTenantsObjectsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of IpmConfig objects.",
    "tags": [
     "Ipm Config"
    ]
   }
  },
  "/fabrics/{fabricId}/loopbacks": {
   "get": {
    "description": "Get the list of all loopback interfaces in a specific fabric.",
    "operationId": "networksGetFabricLoopbacks",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the running configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configFabricLoopbacksResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricLoopbacksResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the loopbacks of a fabric.",
    "tags": [
     "Networks"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes": {
   "get": {
    "description": "Get the list of nodes in a specific fabric.",
    "operationId": "nodesGetFabricNodes",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricNodesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGetFabricNodesResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of nodes.",
    "tags": [
     "Nodes"
    ]
   },
   "post": {
    "description": "Add one or more nodes to a specific fabric.",
    "operationId": "nodesAddFabricNodes",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddFabricNodesRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configAddFabricNodesRequest"
       }
      }
     },
     "description": "The request to add one or more nodes to a specific fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configAddFabricNodesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configAddFabricNodesResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more nodes.",
    "tags": [
     "Nodes"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}": {
   "delete": {
    "description": "Delete a specific node in a fabric.",
    "operationId": "nodesDeleteFabricNode",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "A node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific node.",
    "tags": [
     "Nodes"
    ]
   },
   "get": {
    "description": "Get a specific node in a fabric.",
    "operationId": "nodesGetNamedFabricNode",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricNodeResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configNode"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific node.",
    "tags": [
     "Nodes"
    ]
   },
   "put": {
    "description": "Update a specific node in a fabric.",
    "operationId": "nodesUpdateFabricNode",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateFabricNodeRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configNode"
       }
      }
     },
     "description": "The request to update a specific node in a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configNode"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configNode"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific node.",
    "tags": [
     "Nodes"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}/assertions": {
   "get": {
    "description": "Get the list of assertions of a specific device in a fabric.",
    "operationId": "assertionsGetNodeAssertions",
    "parameters": [
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Filter by assertion latch state.",
      "in": "query",
      "name": "state",
      "schema": {
       "default": "LATCHED",
       "description": "An enum value, select either string or integer",
       "enum": [
        "LATCHED",
        "UNLATCHED"
       ],
       "type": "string"
      }
     },
     {
      "description": "Filter by one or more assertion types.",
      "in": "query",
      "name": "type",
      "schema": {
       "default": "CONFIG_ADDED_TO_DB",
       "description": "An enum value, select either string or integer",
       "enum": [
        "CONFIG_ADDED_TO_DB",
        "PORT_LINK_UP",
        "DEVICE_CONNECTED_TO_CLOUD",
        "PORT_EXPECTED_NEIGHBOR",
        "PORT_NOT_CONNECTED_TO_FABRIC",
        "DEVICE_CONNECTED_TO_FABRIC",
        "PORT_LINK_DOWN",
        "PORT_CONNECTION_SPEED_MATCH",
        "PORT_SPEED_CONSISTENT",
        "VLAN_HAS_TRAFFIC",
        "STATIC_DEFAULT_ROUTE_EXISTS",
        "MANAGEMENT_PORT_CONFIG_SAME",
        "DEVICE_RESOURCE_USAGE_BELOW_THRESHOLD",
        "BGP_PEER_ESTABLISHED",
        "EXPECTED_PORT_BREAKOUT_EXISTS",
        "SUB_INTERFACE_UP",
        "SUB_INTERFACE_DOWN",
        "PORT_CHANNEL_MEMBER_UP",
        "PORT_VLAN_STP_STATE_CONSISTENT",
        "PORT_PLUGGABLE_PID_SAME",
        "DEVICE_ENV_PSU_USAGE_BELOW_THRESHOLD",
        "PORT_NO_UNKNOWN_VLAN_FOUND",
        "DEVICE_FAN_SPEED_BELOW_THRESHOLD",
        "DEVICE_TEMPERATURE_BELOW_THRESHOLD"
       ],
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/stateGetNodeAssertionsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/stateAssertionsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "404": {
      "content": {
       "application/json": {
        "examples": {
         "404": {
          "$ref": "#/components/examples/404"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Not Found",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "409": {
      "content": {
       "application/json": {
        "examples": {
         "409": {
          "$ref": "#/components/examples/409"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Conflict",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get node assertions.",
    "tags": [
     "Assertions"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}/breakouts": {
   "get": {
    "description": "Get the list of breakout ports of a specific node in a fabric.",
    "operationId": "nodesGetNodePortBreakouts",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the running configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetNodePortBreakoutsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configNodePortBreakoutsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of breakout ports.",
    "tags": [
     "Nodes"
    ]
   },
   "post": {
    "description": "Add one or more port breakouts of a specific node in a fabric.",
    "operationId": "nodesAddNodePortBreakouts",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddNodePortBreakoutsRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsPortBreakout"
       }
      }
     },
     "description": "Request Body",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configAddNodePortBreakoutsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configNodePortBreakoutsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more port breakouts.",
    "tags": [
     "Nodes"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}/breakouts/{breakoutId}": {
   "delete": {
    "description": "Delete a specific port breakout of a node in a fabric.",
    "operationId": "nodesDeleteNodePortBreakout",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The breakout port id or name.",
      "in": "path",
      "name": "breakoutId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific port breakout.",
    "tags": [
     "Nodes"
    ]
   },
   "get": {
    "description": "Get a specific port breakout of a node in a fabric.",
    "operationId": "nodesGetNodePortBreakout",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The breakout port id or name.",
      "in": "path",
      "name": "breakoutId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the running configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetNodePortBreakoutResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsPortBreakout"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific port breakout.",
    "tags": [
     "Nodes"
    ]
   },
   "put": {
    "description": "Update a specific port breakout of a node in a fabric.",
    "operationId": "nodesUpdateNodePortBreakout",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The breakout port id or name.",
      "in": "path",
      "name": "breakoutId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateNodePortBreakoutRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsPortBreakout"
       }
      }
     },
     "description": "Request Body",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configUpdateNodePortBreakoutResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsPortBreakout"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific port breakout.",
    "tags": [
     "Nodes"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}/devices": {
   "delete": {
    "description": "Unbind the bound device from a specific node in a fabric.",
    "operationId": "devicesUnbindDevice",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name from which a device is bound.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Unbind the bound device from a node.",
    "tags": [
     "Devices"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}/devices/{deviceId}": {
   "put": {
    "description": "Bind a specific device to a node in a fabric.",
    "operationId": "devicesBindDevice",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name of the node.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The device id or name of the device to bind to the node.",
      "in": "path",
      "name": "deviceId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configBindDeviceResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configBindDeviceResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Bind a specific device to a node.",
    "tags": [
     "Devices"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}/loopbacks": {
   "get": {
    "description": "Get the list of loopback interfaces for a specific node in a fabric.",
    "operationId": "networksGetNodeLoopbacks",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the running configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetNodeLoopbacksResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configNodeLoopbacksResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of loopbacks.",
    "tags": [
     "Networks"
    ]
   },
   "post": {
    "description": "Add one or more loopback interfaces to a specific node in a fabric.",
    "operationId": "networksAddNodeLoopbacks",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddNodeLoopbacksRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configAddNodeLoopbacksRequest"
       }
      }
     },
     "description": "Request Body",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configAddNodeLoopbacksResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configNodeLoopbacksResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more loopbacks.",
    "tags": [
     "Networks"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}/loopbacks/{loopbackId}": {
   "delete": {
    "description": "Delete a specific loopback interface for a node in a fabric.",
    "operationId": "networksDeleteNodeLoopback",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The loopback id or name.",
      "in": "path",
      "name": "loopbackId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific loopback.",
    "tags": [
     "Networks"
    ]
   },
   "get": {
    "description": "Get a specific loopback interface for a node in a fabric.",
    "operationId": "networksGetNodeLoopback",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The loopback id or name.",
      "in": "path",
      "name": "loopbackId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the running configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetNodeLoopbackResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsLoopback"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific loopback.",
    "tags": [
     "Networks"
    ]
   },
   "put": {
    "description": "Update a specific loopback interface for a node in a fabric.",
    "operationId": "networksUpdateNodeLoopback",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The loopback id or name.",
      "in": "path",
      "name": "loopbackId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateNodeLoopbackRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsLoopback"
       }
      }
     },
     "description": "Request Body",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configUpdateNodeLoopbackResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsLoopback"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific loopback.",
    "tags": [
     "Networks"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}/managementPorts": {
   "get": {
    "description": "Get the list of management ports for a specific node in a fabric.",
    "operationId": "nodesGetManagementPorts",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetManagementPortsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configManagementPortsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of management ports.",
    "tags": [
     "Nodes"
    ]
   },
   "post": {
    "description": "Add one or more management ports to a specific node in a fabric.",
    "operationId": "nodesAddManagementPorts",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddManagementPortsRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configAddManagementPortsRequest"
       }
      }
     },
     "description": "The request to add one or more management ports to a specific node in a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configAddManagementPortsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configManagementPortsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more management port.",
    "tags": [
     "Nodes"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}/managementPorts/{id}": {
   "delete": {
    "description": "Reset a specific management port for a node in a fabric to its default values.",
    "operationId": "nodesResetManagementPort",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The management port id or name.",
      "in": "path",
      "name": "id",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Reset a specific management port.",
    "tags": [
     "Nodes"
    ]
   },
   "get": {
    "description": "Get a specific management port for a node in a fabric.",
    "operationId": "nodesGetManagementPort",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The management port id or name.",
      "in": "path",
      "name": "id",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetManagementPortResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsManagementPort"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific management port.",
    "tags": [
     "Nodes"
    ]
   },
   "put": {
    "description": "Update a specific management port for a node in a fabric.",
    "operationId": "nodesUpdateManagementPort",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The management port id or name.",
      "in": "path",
      "name": "id",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateManagementPortRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsManagementPort"
       }
      }
     },
     "description": "The request to update a specific management port of a node in a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configUpdateManagementPortResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsManagementPort"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific management port.",
    "tags": [
     "Nodes"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}/ports": {
   "get": {
    "description": "Get the list of ports configuration information for a specific node in a fabric.",
    "operationId": "nodesGetPorts",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetPortsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configPortsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of ports.",
    "tags": [
     "Nodes"
    ]
   },
   "put": {
    "description": "Update the list of ports for a specific node in a fabric. This is a complete replacement of the ports for a node in a fabric.",
    "operationId": "nodesSetPorts",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configSetPortsRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configSetPortsRequest"
       }
      }
     },
     "description": "The request to update the list of ports of a specific node in a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configSetPortsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configPortsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update the list of ports.",
    "tags": [
     "Nodes"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}/ports/{portId}": {
   "delete": {
    "description": "Reset a specific port of a node in a fabric to its default values. Fabric ports cannot be reset. Labels and annotations are not removed.",
    "operationId": "nodesResetPort",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The port id or name.",
      "in": "path",
      "name": "portId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Reset a specific port.",
    "tags": [
     "Nodes"
    ]
   },
   "get": {
    "description": "Get a specific port for a node in a fabric.",
    "operationId": "nodesGetPort",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The port id or name.",
      "in": "path",
      "name": "portId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetPortResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsNetworkPort"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific port.",
    "tags": [
     "Nodes"
    ]
   },
   "put": {
    "description": "Update a specific port for a node in a fabric.",
    "operationId": "nodesUpdatePort",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The port name, id or index.",
      "in": "path",
      "name": "portId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configSetPortRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsNetworkPort"
       }
      }
     },
     "description": "The request to update a specific port of a node in a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configSetPortResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsNetworkPort"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific port.",
    "tags": [
     "Nodes"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}/ports/{port}/assertions": {
   "get": {
    "description": "Get the list of assertions for a specific port of a node in a fabric.",
    "operationId": "assertionsGetNodePortAssertions",
    "parameters": [
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The port index or name.",
      "in": "path",
      "name": "port",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Filter by assertion latch state.",
      "in": "query",
      "name": "state",
      "schema": {
       "default": "LATCHED",
       "description": "An enum value, select either string or integer",
       "enum": [
        "LATCHED",
        "UNLATCHED"
       ],
       "type": "string"
      }
     },
     {
      "description": "Filter by one or more assertion types.",
      "in": "query",
      "name": "type",
      "schema": {
       "default": "CONFIG_ADDED_TO_DB",
       "description": "An enum value, select either string or integer",
       "enum": [
        "CONFIG_ADDED_TO_DB",
        "PORT_LINK_UP",
        "DEVICE_CONNECTED_TO_CLOUD",
        "PORT_EXPECTED_NEIGHBOR",
        "PORT_NOT_CONNECTED_TO_FABRIC",
        "DEVICE_CONNECTED_TO_FABRIC",
        "PORT_LINK_DOWN",
        "PORT_CONNECTION_SPEED_MATCH",
        "PORT_SPEED_CONSISTENT",
        "VLAN_HAS_TRAFFIC",
        "STATIC_DEFAULT_ROUTE_EXISTS",
        "MANAGEMENT_PORT_CONFIG_SAME",
        "DEVICE_RESOURCE_USAGE_BELOW_THRESHOLD",
        "BGP_PEER_ESTABLISHED",
        "EXPECTED_PORT_BREAKOUT_EXISTS",
        "SUB_INTERFACE_UP",
        "SUB_INTERFACE_DOWN",
        "PORT_CHANNEL_MEMBER_UP",
        "PORT_VLAN_STP_STATE_CONSISTENT",
        "PORT_PLUGGABLE_PID_SAME",
        "DEVICE_ENV_PSU_USAGE_BELOW_THRESHOLD",
        "PORT_NO_UNKNOWN_VLAN_FOUND",
        "DEVICE_FAN_SPEED_BELOW_THRESHOLD",
        "DEVICE_TEMPERATURE_BELOW_THRESHOLD"
       ],
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/stateGetNodePortAssertionsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/stateAssertionsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "404": {
      "content": {
       "application/json": {
        "examples": {
         "404": {
          "$ref": "#/components/examples/404"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Not Found",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "409": {
      "content": {
       "application/json": {
        "examples": {
         "409": {
          "$ref": "#/components/examples/409"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Conflict",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get port assertions for a node.",
    "tags": [
     "Assertions"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}/subInterfaces": {
   "get": {
    "description": "Get the list of sub-interfaces for a specific node in a fabric.",
    "operationId": "nodesGetNodeSubInterfaces",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the running configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetNodeSubInterfacesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configNodeSubInterfacesResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of sub-interfaces.",
    "tags": [
     "Nodes"
    ]
   },
   "post": {
    "description": "Add one or more sub-interfaces to a specific node in a fabric.",
    "operationId": "nodesAddNodeSubInterfaces",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddNodeSubInterfacesRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configAddNodeSubInterfacesRequest"
       }
      }
     },
     "description": "Request Body",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configAddNodeSubInterfacesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configNodeSubInterfacesResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more sub-interfaces.",
    "tags": [
     "Nodes"
    ]
   }
  },
  "/fabrics/{fabricId}/nodes/{nodeId}/subInterfaces/{subInterfaceId}": {
   "delete": {
    "description": "Delete a specific sub-interface for a node in a fabric.",
    "operationId": "nodesDeleteNodeSubInterface",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The sub-interface id or name.",
      "in": "path",
      "name": "subInterfaceId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific sub-interface.",
    "tags": [
     "Nodes"
    ]
   },
   "get": {
    "description": "Get a specific sub-interface for a node in a fabric.",
    "operationId": "nodesGetNodeSubInterface",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The sub-interface id or name.",
      "in": "path",
      "name": "subInterfaceId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the running configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetNodeSubInterfaceResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsSubInterface"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific sub-interface.",
    "tags": [
     "Nodes"
    ]
   },
   "put": {
    "description": "Update a specific sub-interface for a node in a fabric.",
    "operationId": "nodesUpdateNodeSubInterface",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The node id or name.",
      "in": "path",
      "name": "nodeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The sub-interface id or name.",
      "in": "path",
      "name": "subInterfaceId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateNodeSubInterfaceRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsSubInterface"
       }
      }
     },
     "description": "Request Body",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configUpdateNodeSubInterfaceResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsSubInterface"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific sub-interface.",
    "tags": [
     "Nodes"
    ]
   }
  },
  "/fabrics/{fabricId}/notificationSettings": {
   "delete": {
    "description": "Stop notifications for the fabric.",
    "operationId": "notificationsDeleteFabricNotificationSettings",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete the notification settings for a fabric.",
    "tags": [
     "Notifications"
    ]
   },
   "get": {
    "description": "Returns a list of endpoints enabled for notifications for the fabric.",
    "operationId": "notificationsGetFabricNotificationSettings",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Return metadata for the settings.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/modelsNotificationSettings"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsNotificationSettings"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get notification settings for a fabric.",
    "tags": [
     "Notifications"
    ]
   },
   "put": {
    "description": "Note that this endpoint has the semantics of create/update.",
    "operationId": "notificationsSetFabricNotificationSettings",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/modelsNotificationSettings"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsNotificationSettings"
       }
      }
     },
     "description": "The notification settings for a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/modelsNotificationSettings"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsNotificationSettings"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Set notification settings for a fabric.",
    "tags": [
     "Notifications"
    ]
   }
  },
  "/fabrics/{fabricId}/parts": {
   "get": {
    "description": "Get the assembled list of parts for every node in a specific fabric.",
    "operationId": "fabricsGetFabricAssembly",
    "parameters": [
     {
      "description": "Fabric UUID",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate name.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricAssemblyResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGetFabricAssemblyResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the assembled list of parts.",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/fabrics/{fabricId}/portChannels": {
   "get": {
    "description": "Get the list of port channels in a specific fabric.",
    "operationId": "portchannelsGetAllPortChannels",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetAllPortChannelsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configPortChannelsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of port channels.",
    "tags": [
     "Port Channels"
    ]
   },
   "post": {
    "description": "Add one or more port channels in a specific fabric.",
    "operationId": "portchannelsAddPortChannels",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddPortChannelsRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configAddPortChannelsRequest"
       }
      }
     },
     "description": "The request to add one or more port channels to a specific fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configAddPortChannelsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configPortChannelsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more port channels.",
    "tags": [
     "Port Channels"
    ]
   }
  },
  "/fabrics/{fabricId}/portChannels/{id}": {
   "delete": {
    "description": "Delete a specific port channel in a fabric.",
    "operationId": "portchannelsDeletePortChannel",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The port channel id or name.",
      "in": "path",
      "name": "id",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific port channel.",
    "tags": [
     "Port Channels"
    ]
   },
   "get": {
    "description": "Get a specific port channel in a fabric.",
    "operationId": "portchannelsGetPortChannel",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The port channel id or name.",
      "in": "path",
      "name": "id",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The configuration candidate name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetPortChannelResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsPortChannel"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific port channel.",
    "tags": [
     "Port Channels"
    ]
   },
   "put": {
    "description": "Update a specific port channel in a fabric.",
    "operationId": "portchannelsUpdatePortChannel",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The port channel id or name.",
      "in": "path",
      "name": "id",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdatePortChannelRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsPortChannel"
       }
      }
     },
     "description": "The request to update a specific port channel in a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configUpdatePortChannelResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsPortChannel"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific port channel.",
    "tags": [
     "Port Channels"
    ]
   }
  },
  "/fabrics/{fabricId}/refPoints": {
   "get": {
    "description": "Returns all the created reference points for a fabric. This may be an empty list, or a list contianing either one or both of the 'reference' or 'provisional' reference points.",
    "operationId": "referencepointsGetRefPoints",
    "parameters": [
     {
      "description": "The fabric id or name",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/refpointsRefPointList"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/refpointsRefPointList"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get list of all reference point metadata for a fabric",
    "tags": [
     "Reference Points"
    ]
   },
   "post": {
    "description": "Create a reference point called 'provisional'. This will immediately create and return the metadata, whilst queueing an asynchronous job to collect and record the state of the fabric.\n\nThe progress of the job can be tracked via the reference point metadata.\n\nOnce created, a 'provisional' reference point can either be promoted to 'reference' or compared with an existing 'reference'.",
    "operationId": "referencepointsCreateProvisionalRefPoint",
    "parameters": [
     {
      "description": "The fabric id or name",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/refpointsCreateRefPointRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/refpointsCreateRefPointRequest"
       }
      }
     },
     "description": "REST Request to create a new reference point",
     "required": true
    },
    "responses": {
     "201": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/refpointsRefPoint"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/refpointsRefPoint"
        }
       }
      },
      "description": "Created",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Create a 'provisional' reference point",
    "tags": [
     "Reference Points"
    ]
   },
   "put": {
    "description": "Convert the reference point named 'provisional' to 'reference' and return the updated reference point metadata.\n\nThis allows a new 'provisional' reference point to later be created and compared to 'reference'.\n\nReturns 'conflict' error status if there is already a 'reference' reference point for the fabric. In this case the 'reference' must first be deleted.",
    "operationId": "referencepointsPromoteProvisionalRefPoint",
    "parameters": [
     {
      "description": "The fabric id or name",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/refpointsRefPointByFabricRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/refpointsRefPointByFabricRequest"
       }
      }
     },
     "description": "REST request messages only needing a fabric id",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/refpointsRefPoint"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/refpointsRefPoint"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Promote a 'provisional' reference point to 'reference'",
    "tags": [
     "Reference Points"
    ]
   }
  },
  "/fabrics/{fabricId}/refPoints/diffs": {
   "post": {
    "description": "Queue and asynchrnous job to compare the current 'provisional' and 'reference' reference point records.\n\nThe progress of this job can be tracked via the 'reference' reference point metadata.\n\nThe 'provisional' reference point metadata will be returned. When the diff is ready, it can be downloaded via /api/v1/fabrics/{fabric_id}/refPoints/provisional/diff The ref_point_id can be found in the refPoint metadata returned by this API.",
    "operationId": "referencepointsCreateRefPointDiff",
    "parameters": [
     {
      "description": "The fabric id or name",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/refpointsRefPointByFabricRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/refpointsRefPointByFabricRequest"
       }
      }
     },
     "description": "REST request messages only needing a fabric id",
     "required": true
    },
    "responses": {
     "201": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/refpointsRefPoint"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/refpointsRefPoint"
        }
       }
      },
      "description": "Created",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Create a diff between 'reference' and 'provisional' reference points",
    "tags": [
     "Reference Points"
    ]
   }
  },
  "/fabrics/{fabricId}/refPoints/{refPointName}": {
   "delete": {
    "description": "Deletes a reference point and any associated data, such as diffs.",
    "operationId": "referencepointsDeleteRefPoint",
    "parameters": [
     {
      "description": "The fabric id or name",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The reference point name",
      "in": "path",
      "name": "refPointName",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a reference point",
    "tags": [
     "Reference Points"
    ]
   },
   "get": {
    "description": "Returns the metadata for the requested reference point. The name must be either 'provisional' or 'reference'.\n\nReturns 'not found' error status if the requested reference point does not exist.",
    "operationId": "referencepointsGetRefPoint",
    "parameters": [
     {
      "description": "The fabric id or name",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The reference point name",
      "in": "path",
      "name": "refPointName",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/refpointsRefPoint"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/refpointsRefPoint"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get metadata for the named reference point",
    "tags": [
     "Reference Points"
    ]
   }
  },
  "/fabrics/{fabricId}/refPoints/{refPointName}/diffs": {
   "get": {
    "description": "Stream a diff data file that was previously created.\n\nThis binary file will contain data that was in the reference and provisional data capture, but not in both. RefPointName must be 'provisional'.",
    "operationId": "referencepointsGetRefPointDiff",
    "parameters": [
     {
      "description": "The fabric id or name",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The reference point name",
      "in": "path",
      "name": "refPointName",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/refpointsDiffPart"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/refpointsDiffPart"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the diff data file",
    "tags": [
     "Reference Points"
    ]
   }
  },
  "/fabrics/{fabricId}/revisionIds": {
   "get": {
    "description": "Returns the latest revision id for a fabrics candidate configuration.\n\nThe revision id can be included in calls that commit the candidate configuration changes. If provided, requests will be rejected if the provided revision id is not the same than the most recent one known to the Hyperfabric service.\n\nIf not provided then the candidate configuration changes are applied.",
    "operationId": "fabricsGetFabricRevisionId",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricRevisionIds"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricRevisionIdResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the latest revision id",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/fabrics/{fabricId}/software": {
   "delete": {
    "operationId": "imageupdateDeleteFabricSoftwareConfig",
    "parameters": [
     {
      "description": "The fabric id or name",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a fabric's image configurations",
    "tags": [
     "Image Update"
    ]
   },
   "get": {
    "operationId": "imageupdateGetFabricSoftwareConfig",
    "parameters": [
     {
      "description": "The list of fabric ids or names.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set, the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/modelsFabricSoftwareConfig"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsFabricSoftwareConfig"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a fabric's software configurations",
    "tags": [
     "Image Update"
    ]
   },
   "post": {
    "operationId": "imageupdateAddFabricSoftwareConfig",
    "parameters": [
     {
      "description": "The fabric id or name",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddFabricSoftwareConfigRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configAddFabricSoftwareConfigRequest"
       }
      }
     },
     "description": "AddFabricSoftwareConfigRequest sets a FabricSoftwareConfig configuration object in a fabric",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/modelsFabricSoftwareConfig"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsFabricSoftwareConfig"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "AddFabricSoftwareConfig adds the software configurations to a fabric",
    "tags": [
     "Image Update"
    ]
   }
  },
  "/fabrics/{fabricId}/software/mode": {
   "put": {
    "operationId": "imageupdateUpdateFabricSoftwareMode",
    "parameters": [
     {
      "description": "The fabric id or name",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateFabricSoftwareModeRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configUpdateFabricSoftwareModeRequest"
       }
      }
     },
     "description": "UpdateFabricSoftwareModeRequest sets turn on/off the maintenance mode",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/modelsFabricSoftwareConfig"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsFabricSoftwareConfig"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Updates a fabric's software operation mode to maintenance or regular",
    "tags": [
     "Image Update"
    ]
   }
  },
  "/fabrics/{fabricId}/software/nodes": {
   "delete": {
    "operationId": "imageupdateDeleteFabricNodeImages",
    "parameters": [
     {
      "description": "The fabric id or name",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Updates a fabric's node running images.",
    "tags": [
     "Image Update"
    ]
   },
   "put": {
    "operationId": "imageupdateUpdateFabricSoftwareNodeImages",
    "parameters": [
     {
      "description": "The fabric id or name",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateFabricSoftwareNodeImagesRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configUpdateFabricSoftwareNodeImagesRequest"
       }
      }
     },
     "description": "UpdateFabricSoftwareNodeImagesRequest updates the node image configurations",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/modelsFabricSoftwareConfig"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsFabricSoftwareConfig"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Updates a fabric's node running images.",
    "tags": [
     "Image Update"
    ]
   }
  },
  "/fabrics/{fabricId}/software/running": {
   "delete": {
    "operationId": "imageupdateDeleteFabricRunningImage",
    "parameters": [
     {
      "description": "The fabric id or name",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a fabric's running image configurations",
    "tags": [
     "Image Update"
    ]
   },
   "put": {
    "operationId": "imageupdateUpdateFabricSoftwareRunningImage",
    "parameters": [
     {
      "description": "The fabric id or name",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateFabricSoftwareRunningImageRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configUpdateFabricSoftwareRunningImageRequest"
       }
      }
     },
     "description": "UpdateFabricSoftwareRunningImageRequest updates the fabric's running image configuration",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/modelsFabricSoftwareConfig"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsFabricSoftwareConfig"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Updates a fabric's software running image.",
    "tags": [
     "Image Update"
    ]
   }
  },
  "/fabrics/{fabricId}/software/target": {
   "delete": {
    "operationId": "imageupdateDeleteFabricTargetImage",
    "parameters": [
     {
      "description": "The fabric id or name",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a fabric's target image configurations",
    "tags": [
     "Image Update"
    ]
   },
   "put": {
    "operationId": "imageupdateUpdateFabricSoftwareTargetImage",
    "parameters": [
     {
      "description": "The fabric id or name",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateFabricSoftwareTargetImageRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configUpdateFabricSoftwareTargetImageRequest"
       }
      }
     },
     "description": "UpdateFabricSoftwareTargetImageRequest updates the fabric's target image configuration",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/modelsFabricSoftwareConfig"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsFabricSoftwareConfig"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Updates a fabric's software target image.",
    "tags": [
     "Image Update"
    ]
   }
  },
  "/fabrics/{fabricId}/stp": {
   "delete": {
    "description": "Reset the global spanning tree settings of a fabric to default values.",
    "operationId": "networksResetFabricStp",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Reset fabric spanning tree protocol settings.",
    "tags": [
     "Networks"
    ]
   },
   "get": {
    "description": "Get the global spanning-tree settings of a fabric.",
    "operationId": "networksGetFabricStp",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate name.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include metadata information.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricStpResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsPerVlanStp"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get fabric spanning tree protocol settings.",
    "tags": [
     "Networks"
    ]
   },
   "put": {
    "description": "Update the global spanning tree settings of a fabric.",
    "operationId": "networksUpdateFabricStp",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateFabricStpRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsPerVlanStp"
       }
      }
     },
     "description": "The request to update the global spanning tree settings of a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configUpdateFabricStpResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsPerVlanStp"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update fabric spanning tree protocol settings.",
    "tags": [
     "Networks"
    ]
   }
  },
  "/fabrics/{fabricId}/vnis": {
   "get": {
    "description": "Get the list of VNIs in a specific fabric.",
    "operationId": "vnisGetFabricVnis",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricVnisResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricVnisResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of VNIs.",
    "tags": [
     "Vnis"
    ]
   },
   "post": {
    "description": "Add one or more VNIs to a specific fabric.",
    "operationId": "vnisAddFabricVnis",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddFabricVnisRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configAddFabricVnisRequest"
       }
      }
     },
     "description": "The request to add one or more VNIs to a specific fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configAddFabricVnisResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricVnisResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more VNIs.",
    "tags": [
     "Vnis"
    ]
   }
  },
  "/fabrics/{fabricId}/vnis/{vniId}": {
   "delete": {
    "description": "Delete a specific VNI in a fabric.",
    "operationId": "vnisDeleteFabricVni",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The VNI id or name.",
      "in": "path",
      "name": "vniId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific VNI.",
    "tags": [
     "Vnis"
    ]
   },
   "get": {
    "description": "Get a specific VNI in a fabric.",
    "operationId": "vnisGetFabricVni",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The VNI id or name.",
      "in": "path",
      "name": "vniId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricVniResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsVni"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific VNI.",
    "tags": [
     "Vnis"
    ]
   },
   "put": {
    "description": "Update a specific VNI in a fabric.",
    "operationId": "vnisUpdateFabricVni",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The VNI id or name.",
      "in": "path",
      "name": "vniId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateFabricVniRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsVni"
       }
      }
     },
     "description": "The request to update a specific VNI in a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configUpdateFabricVniResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsVni"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific VNI.",
    "tags": [
     "Vnis"
    ]
   }
  },
  "/fabrics/{fabricId}/vnis/{vniId}/members": {
   "get": {
    "description": "Get the list of members of a specific VNI in a fabric.",
    "operationId": "vnisGetFabricVniMembers",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The VNI id or name.",
      "in": "path",
      "name": "vniId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configFabricVniMembersResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricVniMembersResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of VNI members.",
    "tags": [
     "Vnis"
    ]
   },
   "post": {
    "description": "Add one or more members to a specific VNI in a fabric.",
    "operationId": "vnisAddFabricVniMembers",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The VNI id or name.",
      "in": "path",
      "name": "vniId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddFabricVniMembersRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsVlanMember"
       }
      }
     },
     "description": "The request to add one or more members to a specific VNI of a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configFabricVniMembersResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricVniMembersResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more VNI members.",
    "tags": [
     "Vnis"
    ]
   }
  },
  "/fabrics/{fabricId}/vnis/{vniId}/members/{memberId}": {
   "delete": {
    "description": "Delete a specific member of a VNI in a fabric.",
    "operationId": "vnisDeleteFabricVniMember",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The VNI id or name.",
      "in": "path",
      "name": "vniId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The member id or name.",
      "in": "path",
      "name": "memberId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific VNI member.",
    "tags": [
     "Vnis"
    ]
   },
   "get": {
    "description": "Get a specific member of a VNI in a fabric.",
    "operationId": "vnisGetFabricVniMember",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The VNI id or name.",
      "in": "path",
      "name": "vniId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The member id or name.",
      "in": "path",
      "name": "memberId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/modelsVlanMember"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsVlanMember"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific VNI member.",
    "tags": [
     "Vnis"
    ]
   }
  },
  "/fabrics/{fabricId}/vrfs": {
   "get": {
    "description": "Get the list of VRFs in a specific fabric.",
    "operationId": "vrfsGetFabricVrfs",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricVrfsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricVrfsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of VRFs.",
    "tags": [
     "Vrfs"
    ]
   },
   "post": {
    "description": "Add one or more VRFs to a specific fabric.",
    "operationId": "vrfsAddFabricVrfs",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddFabricVrfsRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configAddFabricVrfsRequest"
       }
      }
     },
     "description": "The request to add one or more VRFs to a specific fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configAddFabricVrfsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricVrfsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more VRFs.",
    "tags": [
     "Vrfs"
    ]
   }
  },
  "/fabrics/{fabricId}/vrfs/{vrfId}": {
   "delete": {
    "description": "Delete a specific VRF in a fabric.",
    "operationId": "vrfsDeleteFabricVrf",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The VRF id or name.",
      "in": "path",
      "name": "vrfId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific VRF.",
    "tags": [
     "Vrfs"
    ]
   },
   "get": {
    "description": "Get a specific VRF in a fabric.",
    "operationId": "vrfsGetFabricVrf",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The VRF id or name.",
      "in": "path",
      "name": "vrfId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricVrfResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsVrf"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific VRF.",
    "tags": [
     "Vrfs"
    ]
   },
   "put": {
    "description": "Update a specific VRF in a fabric.",
    "operationId": "vrfsUpdateFabricVrf",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The VRF id or name.",
      "in": "path",
      "name": "vrfId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateFabricVrfRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsVrf"
       }
      }
     },
     "description": "The request to update a specific VRF in a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configUpdateFabricVrfResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsVrf"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific VRF.",
    "tags": [
     "Vrfs"
    ]
   }
  },
  "/fabrics/{fabricId}/vrfs/{vrfId}/staticRoutes": {
   "get": {
    "description": "Get the list of static routes of a specific VRF in a fabric.",
    "operationId": "vrfsGetFabricStaticRoutes",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The vrf id or name.",
      "in": "path",
      "name": "vrfId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricStaticRoutesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricStaticRoutesResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of static routes.",
    "tags": [
     "Vrfs"
    ]
   },
   "post": {
    "description": "Add one or more static routes to a VRF in a fabric.",
    "operationId": "vrfsAddFabricStaticRoutes",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The vrf id or name.",
      "in": "path",
      "name": "vrfId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddFabricStaticRoutesRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configAddFabricStaticRoutesRequest"
       }
      }
     },
     "description": "The request to add one or more static routes to a specific VRF in a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configAddFabricStaticRoutesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configFabricStaticRoutesResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more static routes.",
    "tags": [
     "Vrfs"
    ]
   }
  },
  "/fabrics/{fabricId}/vrfs/{vrfId}/staticRoutes/{routeId}": {
   "delete": {
    "description": "Delete a specific static route of a VRF in a fabric.",
    "operationId": "vrfsDeleteFabricStaticRoute",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The vrf id or name.",
      "in": "path",
      "name": "vrfId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The route id or name.",
      "in": "path",
      "name": "routeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific static route.",
    "tags": [
     "Vrfs"
    ]
   },
   "get": {
    "description": "Get a specific static route of a VRF in a fabric.",
    "operationId": "vrfsGetFabricStaticRoute",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The vrf id or name.",
      "in": "path",
      "name": "vrfId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The route id or name.",
      "in": "path",
      "name": "routeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The candidate configuration name. If not set the default candidate configuration values are returned.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetFabricStaticRouteResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsStaticRoutes"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific static route.",
    "tags": [
     "Vrfs"
    ]
   },
   "put": {
    "description": "Update a specific static route of a VRF in a fabric.",
    "operationId": "vrfsUpdateFabricStaticRoute",
    "parameters": [
     {
      "description": "The fabric id or name.",
      "in": "path",
      "name": "fabricId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The vrf id.",
      "in": "path",
      "name": "vrfId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The route id or name.",
      "in": "path",
      "name": "routeId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateFabricStaticRouteRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsStaticRoutes"
       }
      }
     },
     "description": "The request to update a specific static route of a VRF in a fabric.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configUpdateFabricStaticRouteResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsStaticRoutes"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific static route.",
    "tags": [
     "Vrfs"
    ]
   }
  },
  "/hidden/echo/bilge": {
   "post": {
    "operationId": "miscEcho",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/commonEchoRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/commonEchoRequest"
       }
      }
     },
     "description": "EchoRequest encapsulates properties of a simple gRPC echo request.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/commonEchoResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonEchoResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "tags": [
     "Misc"
    ]
   }
  },
  "/hidden/echo/brig": {
   "post": {
    "operationId": "authEcho",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/commonEchoRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/commonEchoRequest"
       }
      }
     },
     "description": "EchoRequest encapsulates properties of a simple gRPC echo request.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/commonEchoResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonEchoResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "tags": [
     "Auth"
    ]
   }
  },
  "/hidden/echo/configd": {
   "post": {
    "operationId": "fabricsEcho",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/commonEchoRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/commonEchoRequest"
       }
      }
     },
     "description": "EchoRequest encapsulates properties of a simple gRPC echo request.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/commonEchoResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonEchoResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Echo implements service status check API.",
    "tags": [
     "Fabrics"
    ]
   }
  },
  "/hidden/echo/fred": {
   "post": {
    "operationId": "miscEcho",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/commonEchoRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/commonEchoRequest"
       }
      }
     },
     "description": "EchoRequest encapsulates properties of a simple gRPC echo request.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/commonEchoResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonEchoResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "tags": [
     "Misc"
    ]
   }
  },
  "/hidden/echo/sextant": {
   "post": {
    "operationId": "historyEcho",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/commonEchoRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/commonEchoRequest"
       }
      }
     },
     "description": "EchoRequest encapsulates properties of a simple gRPC echo request.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/commonEchoResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonEchoResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "404": {
      "content": {
       "application/json": {
        "examples": {
         "404": {
          "$ref": "#/components/examples/404"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Not Found",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "409": {
      "content": {
       "application/json": {
        "examples": {
         "409": {
          "$ref": "#/components/examples/409"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Conflict",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "tags": [
     "History"
    ]
   }
  },
  "/image/targets": {
   "get": {
    "operationId": "imageupdateGetImageTargets",
    "parameters": [
     {
      "description": "The lookback window in days",
      "in": "query",
      "name": "lookbackDays",
      "schema": {
       "format": "int32",
       "type": "integer"
      }
     },
     {
      "description": "The image release types",
      "in": "query",
      "name": "releaseTypes",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The field for sorting the returning target image list",
      "in": "query",
      "name": "sortField",
      "schema": {
       "default": "EXPIRE_AT",
       "description": "An enum value, select either string or integer",
       "enum": [
        "EXPIRE_AT",
        "RELEASE_AT"
       ],
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/miscGetImageTargetsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/miscGetImageTargetsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list target image versions",
    "tags": [
     "Image Update"
    ]
   }
  },
  "/inventory/counts": {
   "get": {
    "operationId": "devicesGetInventoryCounts",
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/miscGetInventoryCounts"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/miscGetInventoryCountsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "GetInventoryCounts gets the counts for fans, psus, and pluggables by model name.",
    "tags": [
     "Devices"
    ]
   }
  },
  "/inventory/fans": {
   "get": {
    "operationId": "devicesGetAllFans",
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/miscGetAllFans"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/miscGetAllFansResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of fans in the organization.",
    "tags": [
     "Devices"
    ]
   }
  },
  "/inventory/pluggables": {
   "get": {
    "operationId": "devicesGetAllPluggables",
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/miscGetAllPluggables"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/miscGetAllPluggablesResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of pluggable Qsfp objects in the organization.",
    "tags": [
     "Devices"
    ]
   }
  },
  "/inventory/psus": {
   "get": {
    "operationId": "devicesGetAllPsus",
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/miscGetAllPsus"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/miscGetAllPsusResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of psus in the organization.",
    "tags": [
     "Devices"
    ]
   }
  },
  "/labels": {
   "get": {
    "description": "Get the list of labels and associated object identifiers information.",
    "operationId": "miscGetLabels",
    "parameters": [
     {
      "description": "Optional start time of the query time range.",
      "in": "query",
      "name": "startTime",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Optional end time of the query time range.",
      "in": "query",
      "name": "endTime",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Filter by object labels.",
      "in": "query",
      "name": "labels",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Filter by object types.",
      "in": "query",
      "name": "objectTypes",
      "schema": {
       "default": "USER",
       "description": "An enum value, select either string or integer",
       "enum": [
        "USER",
        "TENANT",
        "FABRIC",
        "NODE",
        "NETWORK_PORT",
        "PORT_CONNECTION",
        "VLAN",
        "SVI",
        "DHCP_RELAY",
        "VRF",
        "STATIC_ROUTES",
        "PORT_CHANNEL",
        "FABRIC_TRANSACTION",
        "ORGANIZATION",
        "BEARER_TOKEN",
        "API_KEY",
        "REST_KEY",
        "VNI",
        "MANAGEMENT_PORT",
        "LOOPBACK",
        "SUB_INTERFACE",
        "PER_VLAN_STP",
        "BGP_PEER",
        "PORT_BREAKOUT",
        "BGP_POLICY",
        "PREFIX_LIST",
        "DEVICE",
        "NOTIFICATION_ENDPOINT",
        "CERTIFICATES",
        "FABRIC_IMAGE_UPDATE",
        "NODE_IMAGE_PACKAGE",
        "IMAGE_PACKAGE",
        "IPM_CONFIG",
        "NODE_IMAGE_UPDATE",
        "NODE_METADATA",
        "NOTIFICATION_SETTINGS",
        "DSCP_CONFIG",
        "TIER",
        "SWITCH_GROUP",
        "SERVER_GROUP",
        "RAIL_GROUP",
        "RAIL",
        "HW_SET",
        "SWITCH_GROUP_CONN_RULE",
        "SERVER_GROUP_CONN_RULE",
        "NODE_PORT_CONN_RULE",
        "NODE_PORT_OVERRIDE_RULE"
       ],
       "type": "string"
      }
     },
     {
      "description": "Filter by object identifiers.",
      "in": "query",
      "name": "objectIds",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Do not include object identifiers in the response.",
      "in": "query",
      "name": "tagsOnly",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "description": "Maximum number of objects to return.",
      "in": "query",
      "name": "pagination.limit",
      "schema": {
       "format": "int32",
       "type": "integer"
      }
     },
     {
      "description": "Start after the supplied cursor.",
      "in": "query",
      "name": "pagination.cursor",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Sort by this field.",
      "in": "query",
      "name": "pagination.sortBy",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Sort in the descending order.",
      "in": "query",
      "name": "pagination.sortDesc",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetLabelsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGetLabelsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of labels.",
    "tags": [
     "Misc"
    ]
   }
  },
  "/limits": {
   "get": {
    "description": "Get the list of limits and restrictions information applied by the service for this organization.",
    "operationId": "miscGetLimits",
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetLimitsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configGetLimitsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of organization limits.",
    "tags": [
     "Misc"
    ]
   }
  },
  "/loopbacks": {
   "get": {
    "description": "Get the list of loopbacks in the organization.",
    "operationId": "networksGetLoopbacks",
    "parameters": [
     {
      "description": "The candidate name.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The fabric identifier.",
      "in": "query",
      "name": "fabricId",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "A set of node identifiers.",
      "in": "query",
      "name": "nodeIds",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "A set of Loopback identifiers.",
      "in": "query",
      "name": "ids",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "A set of Loopback names.",
      "in": "query",
      "name": "names",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "A set of VRF identifiers.",
      "in": "query",
      "name": "vrfIds",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configTenantsObjectsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configTenantsObjectsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of loopbacks.",
    "tags": [
     "Networks"
    ]
   }
  },
  "/materializedVni": {
   "get": {
    "operationId": "networksGetMaterializedVni",
    "parameters": [
     {
      "description": "The candidate name.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The fabric identifier.",
      "in": "query",
      "name": "fabricId",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "VNI identifier.",
      "in": "query",
      "name": "vni",
      "schema": {
       "format": "int32",
       "type": "integer"
      }
     },
     {
      "description": "The node identifier.",
      "in": "query",
      "name": "nodeId",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configTenantsObjectsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configTenantsObjectsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "GetMaterializedVnis materializes a set of tabular VNIs for a given switch.",
    "tags": [
     "Networks"
    ]
   }
  },
  "/notificationEndpoints": {
   "get": {
    "description": "Get all configured notification endpoints. Secret fields such as passwords or keys are not returned. Instead the string \"******\" is used as a placeholder.",
    "operationId": "notificationsGetEndpoints",
    "parameters": [
     {
      "description": "Get endpoints by one or more endpoint type.",
      "in": "query",
      "name": "type",
      "schema": {
       "default": "EMAIL",
       "description": "An enum value, select either string or integer",
       "enum": [
        "EMAIL",
        "S3"
       ],
       "type": "string"
      }
     },
     {
      "description": "Get endpoints by one or more endpoint id.",
      "in": "query",
      "name": "endpointId",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Return metadata for the endpoint.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetEndpointsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configEndpointsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get all notification endpoints.",
    "tags": [
     "Notifications"
    ]
   },
   "post": {
    "description": "Add one or more new notification endpoints.",
    "operationId": "notificationsAddEndpoints",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configAddEndpointsRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configAddEndpointsRequest"
       }
      }
     },
     "description": "Add new endpoints.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configAddEndpointsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configEndpointsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add new notification endpoints.",
    "tags": [
     "Notifications"
    ]
   }
  },
  "/notificationEndpoints/{endpointId}": {
   "delete": {
    "description": "Delete a notification endpoint.",
    "operationId": "notificationsDeleteEndpoint",
    "parameters": [
     {
      "description": "The endpoint id or name.",
      "in": "path",
      "name": "endpointId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a notification endpoint.",
    "tags": [
     "Notifications"
    ]
   },
   "get": {
    "description": "Get a specific notification endpoint.",
    "operationId": "notificationsGetEndpoint",
    "parameters": [
     {
      "description": "The endpoint id or name.",
      "in": "path",
      "name": "endpointId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Return metadata for the endpoint.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configGetEndpointResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsEndpoint"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific notification endpoint.",
    "tags": [
     "Notifications"
    ]
   },
   "put": {
    "description": "Update a notification endpoint. To avoid updating a secret just as a password or key use the string \"******\" as a placeholder.",
    "operationId": "notificationsUpdateEndpoint",
    "parameters": [
     {
      "description": "The endpoint id or name.",
      "in": "path",
      "name": "endpointId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configUpdateEndspointRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsEndpoint"
       }
      }
     },
     "description": "Update an endpoint.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configUpdateEndpointResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsEndpoint"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a notification endpoint.",
    "tags": [
     "Notifications"
    ]
   }
  },
  "/notificationEndpoints/{endpointId}/codes": {
   "post": {
    "description": "Send a new confirmation code to the endpoint. This new value can then be used to confirm that the endpoint works as intended.",
    "operationId": "notificationsResendCodeForEndpoint",
    "parameters": [
     {
      "description": "The endpoint id or name.",
      "in": "path",
      "name": "endpointId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configResendCodeForEndpointRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configResendCodeForEndpointRequest"
       }
      }
     },
     "description": "Resend a confirmation code for an endpoint.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/commonEmpty"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonEmpty"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Resend a confirmation code.",
    "tags": [
     "Notifications"
    ]
   },
   "put": {
    "description": "When a new endpoint is created a confirmation code is sent to the new endpoint. This value can then be used to verify that the endpoint works as intended.",
    "operationId": "notificationsVerifyEndpoint",
    "parameters": [
     {
      "description": "The endpoint id or name.",
      "in": "path",
      "name": "endpointId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configVerifyEndpointRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configVerifyEndpointCode"
       }
      }
     },
     "description": "Verify an endpoint.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configVerifyEndpointResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsEndpoint"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Verify a notification endpoint.",
    "tags": [
     "Notifications"
    ]
   }
  },
  "/notificationSettings": {
   "get": {
    "operationId": "notificationsGetNotificationSettings",
    "parameters": [
     {
      "description": "Return metadata for the settings.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configNotificationSettingsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configNotificationSettingsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get notification settings for all fabrics.",
    "tags": [
     "Notifications"
    ]
   },
   "put": {
    "operationId": "notificationsSetNotificationSettings",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configSetNotificationSettingsRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configSetNotificationSettingsRequest"
       }
      }
     },
     "description": "Set notification settings for all fabrics.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configNotificationSettingsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configNotificationSettingsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Set notification settings for all fabrics.",
    "tags": [
     "Notifications"
    ]
   }
  },
  "/organizations": {
   "post": {
    "description": "Used to add an additional organization, a default-tenant for that organization and an admin user to the default-tenant. The admin user has the email of 'sub' claim value in the UserSessionToken. The UserSessionToken must by accompanied with org_id and tenant_id claims that identify the tenancy from which the user is making the request. org_name is the name of the new organization.",
    "operationId": "authAddOrg",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/authAddOrgRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/authAddOrgRequest"
       }
      }
     },
     "description": "The request to add a new organization.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authAddOrgResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/authAddOrgResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add an organization.",
    "tags": [
     "Auth"
    ]
   }
  },
  "/portStatistics": {
   "get": {
    "operationId": "historyDruidTelemetryHistoryReader",
    "parameters": [
     {
      "description": "Indicates the type of data point",
      "in": "query",
      "name": "type",
      "schema": {
       "default": "PORT_STATE",
       "description": "An enum value, select either string or integer",
       "enum": [
        "PORT_STATE",
        "PORT_COUNTER_BIT_RATE",
        "PORT_COUNTER_PFC_COUNTER",
        "ASSERT_COUNTER_REPORT",
        "HISTORY_RECORD_QUERY_BASE",
        "PORT_STATE_HISTORY_RECORD",
        "PORT_COUNTER_HISTORY_RECORD",
        "ASSERT_HISTORY_RECORD"
       ],
       "type": "string"
      }
     },
     {
      "description": "Time at which the port stats were collected by agent.",
      "in": "query",
      "name": "startTime",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Time at which the port stats were collected by agent.",
      "in": "query",
      "name": "endTime",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Query granularity interval. Mutually exclusive with num_buckets.",
      "in": "query",
      "name": "granularity",
      "schema": {
       "default": "PT1M",
       "description": "An enum value, select either string or integer",
       "enum": [
        "PT1M",
        "PT5M",
        "PT10M",
        "PT15M",
        "PT20M",
        "PT30M",
        "PT1H",
        "PT2H",
        "PT3H",
        "PT4H",
        "PT5H",
        "PT6H",
        "PT7H",
        "PT8H",
        "PT9H",
        "PT10H",
        "PT11H",
        "PT12H",
        "P1D",
        "P2D",
        "P3D",
        "P1W",
        "P1M",
        "P2M",
        "P3M"
       ],
       "type": "string"
      }
     },
     {
      "description": "The maximum number of results to return in a single response. If not specified, the API will return a fixed number of results for the request. The API will not interpret the context of this limit (e.g., topN query). For timeseries queries, the server will add a fudge factor to the requested limit so expect additional results back in the client.",
      "in": "query",
      "name": "limit",
      "schema": {
       "format": "int32",
       "type": "integer"
      }
     },
     {
      "description": "Number of buckets. Mutually exclusive with granularity. If supplied, time will be bucketized down to the closest minute resolution. Note that the result might be a bit strange if the computed interval doesn't evenly divide into the requested window.",
      "in": "query",
      "name": "numBuckets",
      "schema": {
       "format": "int32",
       "type": "integer"
      }
     },
     {
      "description": "Do not include a fudge factor when calculating the number of records to return.",
      "in": "query",
      "name": "noFudgeFactor",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "description": "Traffic direction for the bit rate metric type",
      "in": "query",
      "name": "direction",
      "schema": {
       "default": "TX_ONLY",
       "description": "An enum value, select either string or integer",
       "enum": [
        "TX_ONLY",
        "RX_ONLY"
       ],
       "type": "string"
      }
     },
     {
      "description": "Filter by the fabric UUID or name",
      "in": "query",
      "name": "fabric",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Filter by device MAC address or name",
      "in": "query",
      "name": "device",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Unique identifier of a port within a device",
      "in": "query",
      "name": "portId",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Filter by one or more assertion types.",
      "in": "query",
      "name": "assertType",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "If set, response will be encoded in druid native proto",
      "in": "query",
      "name": "druidNative",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "in": "query",
      "name": "counterType",
      "schema": {
       "default": "NEW_ONLY",
       "description": "An enum value, select either string or integer",
       "enum": [
        "NEW_ONLY",
        "CLEARED_ONLY",
        "CONFIG_ACTIVITY"
       ],
       "type": "string"
      }
     },
     {
      "description": "Filter by node_id",
      "in": "query",
      "name": "nodeId",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "port name at the corresponding port_id",
      "in": "query",
      "name": "portName",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Filter by remote device id or mac address",
      "in": "query",
      "name": "remoteDevice",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Filter by remote node id",
      "in": "query",
      "name": "remoteNodeId",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Time at which the port stats were collected by agent.",
      "in": "query",
      "name": "portStateReq.startTime",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Time at which the port stats were collected by agent.",
      "in": "query",
      "name": "portStateReq.endTime",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Organization UUID String",
      "in": "query",
      "name": "portStateReq.orgId",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "REQUIRED: dimensions that would like to be projected (analogous to a 'SELECT' clause in SQL).",
      "in": "query",
      "name": "portStateReq.projections",
      "schema": {
       "default": "PSP_TIME",
       "description": "An enum value, select either string or integer",
       "enum": [
        "PSP_TIME",
        "PSP_FABRIC",
        "PSP_DEVICE",
        "PSP_PORT_ID",
        "PSP_ADMIN_STATE",
        "PSP_OP_STATE",
        "PSP_IP_V4",
        "PSP_ORG_ID",
        "PSP_ROW_COUNT"
       ],
       "type": "string"
      }
     },
     {
      "description": "Grouping (analogous to a 'GROUP BY' clause in SQL)",
      "in": "query",
      "name": "portStateReq.groupings",
      "schema": {
       "default": "PSG_TIME",
       "description": "An enum value, select either string or integer",
       "enum": [
        "PSG_TIME",
        "PSG_FABRIC",
        "PSG_DEVICE",
        "PSG_PORT_ID",
        "PSG_ADMIN_STATE",
        "PSG_OP_STATE",
        "PSG_IP_V4",
        "PSG_ORG_ID"
       ],
       "type": "string"
      }
     },
     {
      "description": "Order by. Specifies the column and sort order (analogous to a 'ORDER BY' clause in SQL.",
      "in": "query",
      "name": "portStateReq.orderings",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The filter condition to apply on the projected columns (analogous to a 'WHERE' clause in SQL).",
      "in": "query",
      "name": "portStateReq.where",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The filter condition to apply on the projected columns (analogous to a 'HAVING' clause in SQL).",
      "in": "query",
      "name": "portStateReq.having",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The query granularity interval. Mutually exclusive with num_buckets.",
      "in": "query",
      "name": "portStateReq.granularity",
      "schema": {
       "default": "PT1M",
       "description": "An enum value, select either string or integer",
       "enum": [
        "PT1M",
        "PT5M",
        "PT10M",
        "PT15M",
        "PT20M",
        "PT30M",
        "PT1H",
        "PT2H",
        "PT3H",
        "PT4H",
        "PT5H",
        "PT6H",
        "PT7H",
        "PT8H",
        "PT9H",
        "PT10H",
        "PT11H",
        "PT12H",
        "P1D",
        "P2D",
        "P3D",
        "P1W",
        "P1M",
        "P2M",
        "P3M"
       ],
       "type": "string"
      }
     },
     {
      "description": "The metadata about the request.",
      "in": "query",
      "name": "portStateReq.metadata",
      "schema": {
       "type": "string"
      }
     },
     {
      "in": "query",
      "name": "portStateReq.numBuckets",
      "schema": {
       "format": "int32",
       "type": "integer"
      }
     },
     {
      "description": "The common pagination properties in the request message.",
      "in": "query",
      "name": "portStateReq.pagination",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The flag for not using a fudge factor when calculating the number of records to return.",
      "in": "query",
      "name": "portStateReq.noFudgeFactor",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "description": "Time at which the port stats were collected by agent.",
      "in": "query",
      "name": "portCounterReq.startTime",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Time at which the port stats were collected by agent.",
      "in": "query",
      "name": "portCounterReq.endTime",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Organization UUID String",
      "in": "query",
      "name": "portCounterReq.orgId",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "REQUIRED: dimensions that would like to be projected (analogous to a 'SELECT' clause in SQL).",
      "in": "query",
      "name": "portCounterReq.projections",
      "schema": {
       "default": "PCP_TIME",
       "description": "An enum value, select either string or integer",
       "enum": [
        "PCP_TIME",
        "PCP_FABRIC",
        "PCP_DEVICE",
        "PCP_PORT_ID",
        "PCP_ORG_ID",
        "PCP_IN_OCTETS_TOTAL",
        "PCP_IN_PKTS_TOTAL",
        "PCP_IN_DISCARDS_TOTAL",
        "PCP_IN_ERRORS_TOTAL",
        "PCP_OUT_OCTETS_TOTAL",
        "PCP_OUT_PKTS_TOTAL",
        "PCP_OUT_DISCARDS_TOTAL",
        "PCP_OUT_ERRORS_TOTAL",
        "PCP_IN_PFC0_PKTS_TOTAL",
        "PCP_OUT_PFC0_PKTS_TOTAL",
        "PCP_IN_PFC1_PKTS_TOTAL",
        "PCP_OUT_PFC1_PKTS_TOTAL",
        "PCP_IN_PFC2_PKTS_TOTAL",
        "PCP_OUT_PFC2_PKTS_TOTAL",
        "PCP_IN_PFC3_PKTS_TOTAL",
        "PCP_OUT_PFC3_PKTS_TOTAL",
        "PCP_IN_PFC4_PKTS_TOTAL",
        "PCP_OUT_PFC4_PKTS_TOTAL",
        "PCP_IN_PFC5_PKTS_TOTAL",
        "PCP_OUT_PFC5_PKTS_TOTAL",
        "PCP_IN_PFC6_PKTS_TOTAL",
        "PCP_OUT_PFC6_PKTS_TOTAL",
        "PCP_IN_PFC7_PKTS_TOTAL",
        "PCP_OUT_PFC7_PKTS_TOTAL",
        "PCP_ROW_COUNT",
        "PCP_RX_MINUTE_RATE",
        "PCP_TX_MINUTE_RATE"
       ],
       "type": "string"
      }
     },
     {
      "description": "Grouping (analogous to a 'GROUP BY' clause in SQL)",
      "in": "query",
      "name": "portCounterReq.groupings",
      "schema": {
       "default": "PCG_TIME",
       "description": "An enum value, select either string or integer",
       "enum": [
        "PCG_TIME",
        "PCG_FABRIC",
        "PCG_DEVICE",
        "PCG_PORT_ID",
        "PCG_ORG_ID"
       ],
       "type": "string"
      }
     },
     {
      "description": "Order by. Specifies the column and sort order (analogous to a 'ORDER BY' clause in SQL.",
      "in": "query",
      "name": "portCounterReq.orderings",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The filter condition to apply on the projected columns (analogous to a 'WHERE' clause in SQL).",
      "in": "query",
      "name": "portCounterReq.where",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The filter condition to apply on the projected columns (analogous to a 'HAVING' clause in SQL).",
      "in": "query",
      "name": "portCounterReq.having",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The query granularity interval. Mutually exclusive with num_buckets.",
      "in": "query",
      "name": "portCounterReq.granularity",
      "schema": {
       "default": "PT1M",
       "description": "An enum value, select either string or integer",
       "enum": [
        "PT1M",
        "PT5M",
        "PT10M",
        "PT15M",
        "PT20M",
        "PT30M",
        "PT1H",
        "PT2H",
        "PT3H",
        "PT4H",
        "PT5H",
        "PT6H",
        "PT7H",
        "PT8H",
        "PT9H",
        "PT10H",
        "PT11H",
        "PT12H",
        "P1D",
        "P2D",
        "P3D",
        "P1W",
        "P1M",
        "P2M",
        "P3M"
       ],
       "type": "string"
      }
     },
     {
      "description": "The metadata about the request.",
      "in": "query",
      "name": "portCounterReq.metadata",
      "schema": {
       "type": "string"
      }
     },
     {
      "in": "query",
      "name": "portCounterReq.numBuckets",
      "schema": {
       "format": "int32",
       "type": "integer"
      }
     },
     {
      "description": "The common pagination properties in the request message.",
      "in": "query",
      "name": "portCounterReq.pagination",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The flag for not using a fudge factor when calculating the number of records to return.",
      "in": "query",
      "name": "portCounterReq.noFudgeFactor",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "description": "Time at which the assertion were modified.",
      "in": "query",
      "name": "assertRecordReq.startTime",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Time at which the assertion were modified.",
      "in": "query",
      "name": "assertRecordReq.endTime",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Organization UUID String",
      "in": "query",
      "name": "assertRecordReq.orgId",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "REQUIRED: dimensions that would like to be projected (analogous to a 'SELECT' clause in SQL).",
      "in": "query",
      "name": "assertRecordReq.projections",
      "schema": {
       "default": "AHP_TIME",
       "description": "An enum value, select either string or integer",
       "enum": [
        "AHP_TIME",
        "AHP_ASSERT_TYPE",
        "AHP_CATEGORY",
        "AHP_ASSERT_STATE",
        "AHP_DEVICE",
        "AHP_LINE_CARD",
        "AHP_BREAKOUT",
        "AHP_PORT_NAME",
        "AHP_MASKED",
        "AHP_ORG_ID",
        "AHP_LATCHED_AT",
        "AHP_LATCH_TIME",
        "AHP_IMPLICIT",
        "AHP_REMOTE_PORT_NAME",
        "AHP_REMOTE_DEVICE_ID",
        "AHP_NUM_NEIGHBORS",
        "AHP_LOCAL_PORT_SPEED",
        "AHP_LAST_TRAFFIC_BYTES",
        "AHP_RECENT_TRAFFIC_BYTES",
        "AHP_LAST_TRAFFIC_TIME",
        "AHP_VRF",
        "AHP_VLAN_STATE",
        "AHP_MANAGEMENT_STATE",
        "AHP_HIGH_CPU_UTIL",
        "AHP_HIGH_DISK_UTIL",
        "AHP_HIGH_MEM_UTIL",
        "AHP_PORT",
        "AHP_NODE_ID",
        "AHP_REMOTE_NODE_ID",
        "AHP_FABRIC",
        "AHP_TXN_ID",
        "AHP_OBJECT_NAME",
        "AHP_OBJECT_TYPE",
        "AHP_OBJECT_ID",
        "AHP_PARENT_ID",
        "AHP_CHILD_ID",
        "AHP_USERNAME",
        "AHP_OPERATION",
        "AHP_ROW_COUNT"
       ],
       "type": "string"
      }
     },
     {
      "description": "Grouping (analogous to a 'GROUP BY' clause in SQL)",
      "in": "query",
      "name": "assertRecordReq.groupings",
      "schema": {
       "default": "AHG_TIME",
       "description": "An enum value, select either string or integer",
       "enum": [
        "AHG_TIME",
        "AHG_ASSERT_TYPE",
        "AHG_CATEGORY",
        "AHG_ASSERT_STATE",
        "AHG_DEVICE",
        "AHG_LINE_CARD",
        "AHG_BREAKOUT",
        "AHG_PORT_NAME",
        "AHG_MASKED",
        "AHG_ORG_ID",
        "AHG_LATCHED_AT",
        "AHG_LATCH_TIME",
        "AHG_IMPLICIT",
        "AHG_REMOTE_PORT_NAME",
        "AHG_REMOTE_DEVICE_ID",
        "AHG_NUM_NEIGHBORS",
        "AHG_LOCAL_PORT_SPEED",
        "AHG_LAST_TRAFFIC_BYTES",
        "AHG_RECENT_TRAFFIC_BYTES",
        "AHG_LAST_TRAFFIC_TIME",
        "AHG_VRF",
        "AHG_VLAN_STATE",
        "AHG_MANAGEMENT_STATE",
        "AHG_HIGH_CPU_UTIL",
        "AHG_HIGH_DISK_UTIL",
        "AHG_HIGH_MEM_UTIL",
        "AHG_PORT",
        "AHG_NODE_ID",
        "AHG_REMOTE_NODE_ID",
        "AHG_FABRIC",
        "AHG_TXN_ID",
        "AHG_OBJECT_NAME",
        "AHG_OBJECT_TYPE",
        "AHG_OBJECT_ID",
        "AHG_PARENT_ID",
        "AHG_CHILD_ID",
        "AHG_USERNAME",
        "AHG_OPERATION"
       ],
       "type": "string"
      }
     },
     {
      "description": "Order by. Specifies the column and sort order (analogous to a 'ORDER BY' clause in SQL.",
      "in": "query",
      "name": "assertRecordReq.orderings",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The filter condition to apply on the projected columns (analogous to a 'WHERE' clause in SQL).",
      "in": "query",
      "name": "assertRecordReq.where",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The filter condition to apply on the projected columns (analogous to a 'HAVING' clause in SQL).",
      "in": "query",
      "name": "assertRecordReq.having",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The query granularity interval. Mutually exclusive with num_buckets.",
      "in": "query",
      "name": "assertRecordReq.granularity",
      "schema": {
       "default": "PT1M",
       "description": "An enum value, select either string or integer",
       "enum": [
        "PT1M",
        "PT5M",
        "PT10M",
        "PT15M",
        "PT20M",
        "PT30M",
        "PT1H",
        "PT2H",
        "PT3H",
        "PT4H",
        "PT5H",
        "PT6H",
        "PT7H",
        "PT8H",
        "PT9H",
        "PT10H",
        "PT11H",
        "PT12H",
        "P1D",
        "P2D",
        "P3D",
        "P1W",
        "P1M",
        "P2M",
        "P3M"
       ],
       "type": "string"
      }
     },
     {
      "description": "The metadata about the request.",
      "in": "query",
      "name": "assertRecordReq.metadata",
      "schema": {
       "type": "string"
      }
     },
     {
      "in": "query",
      "name": "assertRecordReq.numBuckets",
      "schema": {
       "format": "int32",
       "type": "integer"
      }
     },
     {
      "description": "The common pagination properties in the request message.",
      "in": "query",
      "name": "assertRecordReq.pagination",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The flag for not using a fudge factor when calculating the number of records to return.",
      "in": "query",
      "name": "assertRecordReq.noFudgeFactor",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/readerHistoryResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/readerHistoryResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "404": {
      "content": {
       "application/json": {
        "examples": {
         "404": {
          "$ref": "#/components/examples/404"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Not Found",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "409": {
      "content": {
       "application/json": {
        "examples": {
         "409": {
          "$ref": "#/components/examples/409"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Conflict",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get history data on port statistics.",
    "tags": [
     "History"
    ]
   }
  },
  "/provision": {
   "put": {
    "description": "A provision request classifies various configs into different groups. Provision guarantees atomic commit or rollback of config changes.",
    "operationId": "provisionProvision",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/configProvisionRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/configProvisionRequest"
       }
      }
     },
     "description": "ProvisionRequest encapsulates provisioning requests. ProvisionRequest guarantees atomic (transactional) update of all objects contained in the request.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configProvisionResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configProvisionResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Provision implements all create/update/delete (CRUD) operations.",
    "tags": [
     "Provision"
    ]
   }
  },
  "/subscriptions": {
   "delete": {
    "operationId": "authUnclaimSubscriptions",
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Unclaim subscriptions",
    "tags": [
     "Auth"
    ]
   },
   "get": {
    "operationId": "authGetSubscriptions",
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authSubscriptionsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/authSubscriptionsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get subscriptions",
    "tags": [
     "Auth"
    ]
   },
   "put": {
    "operationId": "authClaimSubscriptions",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/authClaimSubscriptionsRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/authClaimSubscriptionsRequest"
       }
      }
     },
     "description": "Claim subscriptions.\nThis is used to specify subscriptions to claim or unclaim.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authSubscriptionsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/authSubscriptionsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Claim subscriptions",
    "tags": [
     "Auth"
    ]
   }
  },
  "/supportSettings": {
   "get": {
    "operationId": "authGetSupportAccess",
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authSupportAccessResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/authSupportAccessResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get support access",
    "tags": [
     "Auth"
    ]
   },
   "put": {
    "operationId": "authUpdateSupportAccess",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/authUpdateSupportAccessRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/authUpdateSupportAccessRequest"
       }
      }
     },
     "description": "UpdateSupportAccessRequest allows admin of default-tenant to update support access settings.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authSupportAccessResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/authSupportAccessResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update support access",
    "tags": [
     "Auth"
    ]
   }
  },
  "/tenants": {
   "delete": {
    "description": "Delete one or more non-default tenants.",
    "operationId": "tenantsDeleteTenants",
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete one or more non-default tenants.",
    "tags": [
     "Tenants"
    ]
   },
   "get": {
    "description": "Get a specific tenant.",
    "operationId": "tenantsGetTenants",
    "parameters": [
     {
      "description": "Only return tenants with these names. If not specified, do not discriminate on tenants based on name.",
      "in": "query",
      "name": "names",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Only return tenants that are administratively enabled.",
      "in": "query",
      "name": "enabled",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authTenantsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/authTenantsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific tenant.",
    "tags": [
     "Tenants"
    ]
   },
   "post": {
    "description": "Add one or more tenants to the organization.",
    "operationId": "tenantsAddTenant",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/authAddTenantRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/authAddTenantRequest"
       }
      }
     },
     "description": "AddTenantRequest allows an admin of the default-tenant (only) to add a non-default tenant.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authAddTenantResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/authAddTenantResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more tenants.",
    "tags": [
     "Tenants"
    ]
   },
   "put": {
    "description": "Update one or more tenants from the context of default-tenant.",
    "operationId": "tenantsUpdateTenants",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/authUpdateTenantsRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/authUpdateTenantsRequest"
       }
      }
     },
     "description": "UpdateTenantsRequest allows admin of the default-tenant updates properties of the one or more tenants.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authTenantsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/authTenantsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update one or more tenants.",
    "tags": [
     "Tenants"
    ]
   }
  },
  "/tenants/{tenantId}": {
   "delete": {
    "description": "Delete a specific non-default tenant.",
    "operationId": "tenantsDeleteTenant",
    "parameters": [
     {
      "description": "ID or name of tenant to remove from organization.",
      "in": "path",
      "name": "tenantId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific non-default tenant.",
    "tags": [
     "Tenants"
    ]
   },
   "put": {
    "description": "Update a specific tenant.",
    "operationId": "tenantsUpdateTenant",
    "parameters": [
     {
      "description": "The tenant id or name.",
      "in": "path",
      "name": "tenantId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/authUpdateTenantRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsTenant"
       }
      }
     },
     "description": "UpdateTenantRequest allows admin of tenant or default-tenant to update tenant properties.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authTenantsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/authTenantsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific tenant.",
    "tags": [
     "Tenants"
    ]
   }
  },
  "/userPreferences": {
   "get": {
    "operationId": "tenantsGetUserPreferences",
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/routingGetUserPreferencesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsUserPreferences"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get user preferences",
    "tags": [
     "Tenants"
    ]
   },
   "put": {
    "description": "Update the user preferences and return the new preferences.",
    "operationId": "tenantsUpdateUserPreferences",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/authUpdateUserPreferencesResponse"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/modelsUserPreferences"
       }
      }
     },
     "description": "UserPreferences describes preferences for a user across all tenants.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authUpdateUserPreferencesResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsUserPreferences"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update the user preferences.",
    "tags": [
     "Tenants"
    ]
   }
  },
  "/users": {
   "delete": {
    "description": "Delete one or more users associated with the organization. This will remove all access of the provided users to the organization.",
    "operationId": "authDeleteUsers",
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete one or more users.",
    "tags": [
     "Auth"
    ]
   },
   "get": {
    "description": "Get the list of users associated with the organization.",
    "operationId": "authGetUsers",
    "parameters": [
     {
      "description": "Only return users with these emails. If set, the roles and enabled query parameters are ignored.",
      "in": "query",
      "name": "emails",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Only return users that are administratively enabled, otherwise include disabled users as well.",
      "in": "query",
      "name": "enabled",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "description": "Only return users with specific roles.",
      "in": "query",
      "name": "roles",
      "schema": {
       "default": "ADMIN",
       "description": "An enum value, select either string or integer",
       "enum": [
        "ADMIN",
        "READ_WRITE",
        "READ_ONLY"
       ],
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authGetUsersResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/authUsersResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a list of users.",
    "tags": [
     "Auth"
    ]
   },
   "post": {
    "description": "Add one or more users to the organization.",
    "operationId": "authSetUsers",
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/authAddUsersRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/authSetUsersRequest"
       }
      }
     },
     "description": "The request to add one or more users.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authAddUsersResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/authUsersResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Add one or more users.",
    "tags": [
     "Auth"
    ]
   }
  },
  "/users/{userId}": {
   "delete": {
    "description": "Delete a specific user associated with the organization. This will remove all access of the user to the organization.",
    "operationId": "authDeleteUser",
    "parameters": [
     {
      "description": "The user id or email address.",
      "in": "path",
      "name": "userId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "204": {
      "description": "No Content",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Delete a specific user.",
    "tags": [
     "Auth"
    ]
   },
   "get": {
    "description": "Get a specific user associated with the organization.",
    "operationId": "authGetUser",
    "parameters": [
     {
      "description": "The user id or email address.",
      "in": "path",
      "name": "userId",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include object metadata in the response.",
      "in": "query",
      "name": "includeMetadata",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authGetUserResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsUser"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get a specific user.",
    "tags": [
     "Auth"
    ]
   },
   "put": {
    "description": "Update a specific user associated with the organization.",
    "operationId": "authUpdateUser",
    "parameters": [
     {
      "description": "The user id or email address.",
      "in": "path",
      "name": "userId",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "examples": {
        "request": {
         "$ref": "#/components/examples/authUpdateUserRequest"
        }
       },
       "schema": {
        "$ref": "#/components/schemas/authUpdateUser"
       }
      }
     },
     "description": "The request to update a specific user.",
     "required": true
    },
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/authUpdateUserResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/modelsUser"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Update a specific user.",
    "tags": [
     "Auth"
    ]
   }
  },
  "/vnis": {
   "get": {
    "description": "Get the list of VNIs in the organization.",
    "operationId": "vnisGetVnis",
    "parameters": [
     {
      "description": "The candidate name.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The fabric identifier.",
      "in": "query",
      "name": "fabricId",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "A set of Vni object identifiers.",
      "in": "query",
      "name": "ids",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "A set of Vni names.",
      "in": "query",
      "name": "names",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "A set of VNIs.",
      "in": "query",
      "name": "vnis",
      "schema": {
       "format": "int32",
       "type": "integer"
      }
     },
     {
      "description": "A set of VLAN identifiers.",
      "in": "query",
      "name": "vlanIds",
      "schema": {
       "format": "int32",
       "type": "integer"
      }
     },
     {
      "description": "Query only L3 VNIs.",
      "in": "query",
      "name": "l3Only",
      "schema": {
       "type": "boolean"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configTenantsObjectsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configTenantsObjectsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of VNIs.",
    "tags": [
     "Vnis"
    ]
   }
  },
  "/vrfs": {
   "get": {
    "description": "Get the list of VRFs in the organization.",
    "operationId": "networksGetVrfs",
    "parameters": [
     {
      "description": "The candidate name.",
      "in": "query",
      "name": "candidate",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "The fabric identifier.",
      "in": "query",
      "name": "fabricId",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "A set of Vrf identifiers.",
      "in": "query",
      "name": "ids",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "A set of Vrf names.",
      "in": "query",
      "name": "names",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "Include interface IP addresses in the response message. Must set exactly one identifier in the ID list.",
      "in": "query",
      "name": "needIps",
      "schema": {
       "type": "boolean"
      }
     },
     {
      "description": "A set of IPv4 addresses to filter interfaces. Must set exactly one identifier in the ID list. IPv4 addresses maybe either host addresses or network addresses.",
      "in": "query",
      "name": "ipv4Addresses",
      "schema": {
       "type": "string"
      }
     },
     {
      "description": "A set of IPv6 addresses to filter interfaces. ust set exactly one identifier in the ID list. IPv6 addresses maybe either host addresses or network addresses.",
      "in": "query",
      "name": "ipv6Addresses",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "content": {
       "application/json": {
        "examples": {
         "response": {
          "$ref": "#/components/examples/configTenantsObjectsResponse"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/configTenantsObjectsResponse"
        }
       }
      },
      "description": "OK",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "400": {
      "content": {
       "application/json": {
        "examples": {
         "400": {
          "$ref": "#/components/examples/400"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Bad Request",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "401": {
      "content": {
       "application/json": {
        "examples": {
         "401": {
          "$ref": "#/components/examples/401"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Unauthorized",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "403": {
      "content": {
       "application/json": {
        "examples": {
         "403": {
          "$ref": "#/components/examples/403"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Forbidden",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "429": {
      "content": {
       "application/json": {
        "examples": {
         "429": {
          "$ref": "#/components/examples/429"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Too Many Requests",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     },
     "500": {
      "content": {
       "application/json": {
        "examples": {
         "500": {
          "$ref": "#/components/examples/500"
         }
        },
        "schema": {
         "$ref": "#/components/schemas/commonRestError"
        }
       }
      },
      "description": "Internal Server Error",
      "headers": {
       "Cache-Control": {
        "$ref": "#/components/headers/cache-control"
       },
       "Content-Encoding": {
        "$ref": "#/components/headers/content-encoding"
       },
       "Content-Type": {
        "$ref": "#/components/headers/content-type"
       },
       "Date": {
        "$ref": "#/components/headers/date"
       },
       "TrackingID": {
        "$ref": "#/components/headers/trackingid"
       }
      }
     }
    },
    "security": [
     {
      "http": []
     }
    ],
    "summary": "Get the list of VRFs.",
    "tags": [
     "Networks"
    ]
   }
  }
 },
 "security": [
  {
   "http": []
  }
 ],
 "servers": [
  {
   "description": "Development Server",
   "url": "https://localhost:4242/api/v1"
  }
 ],
 "tags": [
  {
   "description": "APIs for managing assertions.",
   "name": "Assertions"
  },
  {
   "description": "APIs for managing authorization, account, users, API keys and tokens.",
   "name": "Auth"
  },
  {
   "description": "APIs for BGP Policies",
   "name": "Bgp Policies"
  },
  {
   "description": "APIs for managing certificates.",
   "name": "Certificates"
  },
  {
   "description": "APIs for chatbots",
   "name": "Chatbots"
  },
  {
   "description": "APIs for credentials.",
   "name": "Credentials"
  },
  {
   "description": "APIs for managing devices.",
   "name": "Devices"
  },
  {
   "description": "APIs for DSCP configs.",
   "name": "Dscp"
  },
  {
   "description": "APIs for managing fabrics, candidate configurations and fabric connections.",
   "name": "Fabrics"
  },
  {
   "description": "APIs for historical data such as assertions and port traffic.",
   "name": "History"
  },
  {
   "description": "APIs for device image update.",
   "name": "Image Update"
  },
  {
   "description": "APIs for IPM configs.",
   "name": "Ipm Config"
  },
  {
   "description": "Uncategorized APIs.",
   "name": "Misc"
  },
  {
   "description": "APIs for network configuration.",
   "name": "Networks"
  },
  {
   "description": "APIs for managing nodes, ports, port channels and other interfaces.",
   "name": "Nodes"
  },
  {
   "description": "APIs for managing notification endpoints.",
   "name": "Notifications"
  },
  {
   "description": "APIs for managing port channels on a fabric.",
   "name": "Port Channels"
  },
  {
   "description": "APIs for large configuration changes.",
   "name": "Provision"
  },
  {
   "description": "APIs for fabric reference points.",
   "name": "Reference Points"
  },
  {
   "description": "APIs for the runtime state of the system.",
   "name": "State"
  },
  {
   "description": "APIs for managing tenants.",
   "name": "Tenants"
  },
  {
   "description": "APIs for managing VNIs",
   "name": "Vnis"
  },
  {
   "description": "APIs for managing VRFs.",
   "name": "Vrfs"
  }
 ],
 "components": {
  "examples": {
   "400": {
    "description": "Bad Request",
    "summary": "Bad Request",
    "value": {
     "message": "cannot parse value: not a valid value",
     "field": "value",
     "value": "123",
     "status": 400,
     "errCode": "ERR_CODE_INVALID_VALUE",
     "trackingId": "TrackingId-a5767554-f150-47f5-8e94-425e802b25c9"
    }
   },
   "401": {
    "description": "Unauthorized",
    "summary": "Unauthorized",
    "value": {
     "message": "authorization failure",
     "status": 401,
     "errCode": "ERR_CODE_UNAUTHORIZED",
     "trackingId": "TrackingId-32dee1eb-6447-4275-a441-b9a9bcd90bb7"
    }
   },
   "403": {
    "description": "Forbidden",
    "summary": "Forbidden",
    "value": {
     "message": "insufficient privileges to access resource",
     "status": 403,
     "errCode": "ERR_CODE_PERMISSION_DENIED",
     "trackingId": "TrackingId-c4b86cca-2d39-4269-9f94-1a0b7ff3dbb3"
    }
   },
   "404": {
    "description": "Not Found",
    "summary": "Not Found",
    "value": {
     "message": "user not found",
     "field": "userId",
     "value": "userone@example.com",
     "status": 404,
     "errCode": "ERR_CODE_NOT_FOUND",
     "trackingId": "TrackingId-23243a68-bde0-4539-ac10-d7cbd9a0a8a2"
    }
   },
   "409": {
    "description": "Conflict",
    "summary": "Conflict",
    "value": {
     "message": "user already exists",
     "field": "userId",
     "value": "hyperfabric-example@cisco.com",
     "status": 409,
     "errCode": "ERR_CODE_DATA_CONFLICT",
     "trackingId": "TrackingId-9e517c50-30fc-4c4e-ad1d-a5ce74876b52"
    }
   },
   "429": {
    "description": "Too Many Requests",
    "summary": "Too Many Requests",
    "value": {
     "message": "too many requests",
     "status": 429,
     "errCode": "ERR_CODE_TOO_MANY_REQUESTS",
     "trackingId": "TrackingId-2605e772-2369-4f94-bcee-a1386e05fd74"
    }
   },
   "500": {
    "description": "Internal Server Error",
    "summary": "Internal Server Error",
    "value": {
     "message": "an internal error has occurred",
     "status": 500,
     "errCode": "ERR_CODE_INTERNAL",
     "trackingId": "TrackingId-a619a6f4-36a5-4296-a636-7dd98f5c5657"
    }
   },
   "authAddOrgRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "authAddOrgResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "authAddTenantRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "authAddTenantResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "authAddUsersRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "users": [
      {
       "email": "mary@example.com",
       "enabled": true,
       "role": "ADMIN"
      },
      {
       "email": "jane@example.com",
       "enabled": true,
       "role": "READ_WRITE"
      },
      {
       "email": "james@example.com",
       "enabled": true,
       "role": "READ_ONLY"
      }
     ]
    }
   },
   "authAddUsersResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "users": [
      {
       "id": "6632487c-f570-467d-83cd-8c628ba5e364",
       "email": "fernanda@example.com",
       "provider": "CISCO",
       "metadata": {
        "revisionId": "1",
        "createdBy": "cisco/hyperfabric-example@cisco.com",
        "createdAt": "2024-09-07T02:36:21.839104Z",
        "modifiedBy": "cisco/hyperfabric-example@cisco.com",
        "modifiedAt": "2024-09-07T02:36:21.839104Z"
       },
       "role": "ADMIN"
      },
      {
       "id": "36195b9d-9ef7-4eef-80ae-95562f38da1b",
       "email": "leo@example.com",
       "provider": "CISCO",
       "metadata": {
        "revisionId": "1",
        "createdBy": "cisco/hyperfabric-example@cisco.com",
        "createdAt": "2024-09-07T02:36:21.839104Z",
        "modifiedBy": "cisco/hyperfabric-example@cisco.com",
        "modifiedAt": "2024-09-07T02:36:21.839104Z"
       },
       "role": "READ_WRITE"
      },
      {
       "id": "b1a4baab-2e2c-45ec-b074-ffd13f73f157",
       "email": "james@example.com",
       "provider": "CISCO",
       "metadata": {
        "revisionId": "1",
        "createdBy": "cisco/hyperfabric-example@cisco.com",
        "createdAt": "2024-09-07T02:36:21.839104Z",
        "modifiedBy": "cisco/hyperfabric-example@cisco.com",
        "modifiedAt": "2024-09-07T02:36:21.839104Z"
       },
       "role": "READ_ONLY"
      }
     ]
    }
   },
   "authApiKey": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "authApiKeysResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "authClaimSubscriptionsRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "authCreateBearerTokensRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "tokens": [
      {
       "name": "example-token",
       "description": "This is a description of a new token",
       "scope": "TOKEN_SCOPE_ADMIN",
       "notBefore": "2024-09-06T12:00:00Z",
       "notAfter": "2026-09-06T12:00:00Z"
      }
     ]
    }
   },
   "authCreateBearerTokensResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "tokens": [
      {
       "name": "example-token",
       "description": "This is a description of a new token",
       "scope": "TOKEN_SCOPE_ADMIN",
       "notBefore": "2024-09-06T12:00:00Z",
       "notAfter": "2026-09-06T12:00:00Z",
       "token": "\u003cTOKEN-DATA\u003e",
       "tokenId": "a118c19b-0f77-44eb-8be0-be4103ef9eb1",
       "metadata": {
        "revisionId": "1",
        "createdBy": "cisco/hyperfabric-example@cisco.com",
        "createdAt": "2024-10-28T18:56:32.898339Z",
        "modifiedBy": "cisco/hyperfabric-example@cisco.com",
        "modifiedAt": "2024-10-28T18:56:32.898339Z"
       }
      }
     ]
    }
   },
   "authGetBearerTokenResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "name": "example-token",
     "description": "An example bearer token used for demonstration",
     "scope": "TOKEN_SCOPE_ADMIN",
     "notBefore": "2024-09-07T00:26:24.701821Z",
     "notAfter": "2025-09-07T00:26:24.701821Z",
     "tokenId": "cadf5a4b-9e8d-4339-ba44-5e6d4d9f572c"
    }
   },
   "authGetBearerTokensResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "tokens": [
      {
       "name": "example-token",
       "description": "An example bearer token used for demonstration",
       "scope": "TOKEN_SCOPE_ADMIN",
       "notBefore": "2024-09-07T00:26:24.701821Z",
       "notAfter": "2025-09-07T00:26:24.701821Z",
       "tokenId": "cadf5a4b-9e8d-4339-ba44-5e6d4d9f572c",
       "metadata": {
        "revisionId": "1",
        "createdBy": "cisco/hyperfabric-example@cisco.com",
        "createdAt": "2024-09-07T00:26:24.710128Z",
        "modifiedBy": "cisco/hyperfabric-example@cisco.com",
        "modifiedAt": "2024-09-07T00:26:24.710128Z"
       }
      }
     ]
    }
   },
   "authGetUserResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "8730db3d-f6b9-41fe-989e-59ad9b467542",
     "email": "usertwo@example.com",
     "provider": "CISCO",
     "enabled": true,
     "metadata": {
      "revisionId": "1",
      "createdBy": "*",
      "createdAt": "2024-09-10T22:10:05.355828Z",
      "modifiedBy": "*",
      "modifiedAt": "2024-09-10T22:10:05.355828Z"
     },
     "role": "ADMIN"
    }
   },
   "authGetUsersResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "users": [
      {
       "id": "390e2bd6-7381-405e-98e0-7f33bb2f9b33",
       "email": "hyperfabric-example@cisco.com",
       "provider": "CISCO",
       "enabled": true,
       "role": "ADMIN"
      },
      {
       "id": "d4c0b7c3-cced-4e90-8bc3-33d866fe5d7d",
       "email": "userone@example.com",
       "provider": "CISCO",
       "enabled": true,
       "role": "ADMIN"
      },
      {
       "id": "4de1972c-8079-4b6d-b4ca-5a8f0bbff1e4",
       "email": "usertwo@example.com",
       "provider": "CISCO",
       "enabled": true,
       "role": "ADMIN"
      }
     ]
    }
   },
   "authSubscriptionsResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "authSupportAccessResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "settings": {
      "supportAccessState": "ON",
      "supportAccessStartTs": "2025-05-01T00:00:00Z",
      "supportAccessEndTs": "2025-05-02T00:00:00Z"
     }
    }
   },
   "authTenantsResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "authUpdateSupportAccessRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "settings": {
      "supportAccessState": "ON",
      "supportAccessStartTs": "2025-05-01T00:00:00Z",
      "supportAccessEndTs": "2025-05-02T00:00:00Z"
     }
    }
   },
   "authUpdateTenantRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "authUpdateTenantsRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "authUpdateUserPreferencesRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "provider": "CISCO",
     "timezone": "America/Los_Angeles",
     "theme": "DARK"
    }
   },
   "authUpdateUserPreferencesResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "provider": "CISCO",
     "timezone": "America/Los_Angeles",
     "theme": "DARK"
    }
   },
   "authUpdateUserRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "role": "READ_ONLY"
    }
   },
   "authUpdateUserResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "43f5e74d-e1ee-42c3-b57f-f6d1a37703d1",
     "email": "userone@example.com",
     "provider": "CISCO",
     "metadata": {
      "revisionId": "6",
      "createdBy": "*",
      "createdAt": "2024-09-11T02:35:46.125937Z",
      "modifiedBy": "cisco/hyperfabric-example@cisco.com",
      "modifiedAt": "2024-09-11T20:41:27.117265Z"
     },
     "role": "READ_ONLY"
    }
   },
   "authUploadApiKeyRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "authUsersResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "commonEchoRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "commonEchoResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configAddEndpointsRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "endpoints": [
      {
       "name": "email-1",
       "description": "An email notification endpoint",
       "enabled": true,
       "type": "EMAIL",
       "labels": [
        "EP_WORK",
        "EP_ALL_FABRICS"
       ],
       "annotations": [
        {
         "name": "fabric",
         "value": "example-fabric"
        }
       ],
       "email": {
        "address": "hyperfabric-example@cisco.com"
       }
      }
     ]
    }
   },
   "configAddEndpointsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "endpoints": [
      {
       "endpointId": "e6764097-1f6c-4084-a733-e0827b573b30",
       "name": "email-1",
       "description": "An email notification endpoint",
       "enabled": true,
       "type": "EMAIL",
       "labels": [
        "EP_WORK",
        "EP_ALL_FABRICS"
       ],
       "annotations": [
        {
         "name": "fabric",
         "value": "example-fabric"
        }
       ],
       "email": {
        "address": "hyerfabric-example@cisco.com"
       }
      }
     ]
    }
   },
   "configAddFabricBgpPoliciesRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "bgpPolicies": [
      {
       "name": "BgpPolicy-exampleOne",
       "description": "BGP Policy",
       "labels": [
        "BGP_POLICY_LABEL1",
        "BGP_POLICY_LABEL2"
       ],
       "annotations": [
        {
         "name": "position",
         "value": "LF001"
        }
       ],
       "enabled": true,
       "export": true,
       "rules": [
        {
         "id": 1,
         "description": "Rule 1",
         "setGroup": {
          "origin": "ROUTE_ORIGIN_IBGP",
          "community": "2:2",
          "ipv6NextHop": "2001:db8::1",
          "asPath": [
           1588890534,
           3842995213,
           1224342502,
           861785405
          ]
         },
         "matchGroup": {
          "ipv6Prefixes": [
           {
            "prefix": "2001:1111:2222:3333::/64",
            "description": "IPV6 Prefix",
            "match": "MATCH_GE",
            "accept": true
           }
          ],
          "communities": [
           {
            "community": "1:1",
            "description": "BGP Community",
            "accept": true
           }
          ]
         }
        },
        {
         "id": 2,
         "description": "Rule 2",
         "accept": true,
         "setGroup": {
          "ipv4NextHop": "192.1.1.1"
         },
         "matchGroup": {
          "ipv4Prefixes": [
           {
            "prefix": "192.168.71.0/24",
            "description": "IPV4 Prefix",
            "match": "MATCH_EQ",
            "accept": true
           }
          ]
         }
        }
       ]
      },
      {
       "name": "BgpPolicy-exampleTwo",
       "description": "BGP Policy",
       "enabled": true,
       "rules": [
        {
         "id": 1,
         "description": "Rule 1",
         "setGroup": {
          "community": "2:2"
         }
        }
       ]
      }
     ]
    }
   },
   "configAddFabricBgpPoliciesResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configAddFabricConnectionsRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "connections": [
      {
       "local": {
        "portName": "Ethernet1_19",
        "nodeName": "node-leaf0"
       },
       "remote": {
        "portName": "Ethernet1_19",
        "nodeName": "node-spine0"
       }
      },
      {
       "local": {
        "portName": "Ethernet1_22",
        "nodeName": "node-leaf1"
       },
       "remote": {
        "portName": "Ethernet1_22",
        "nodeName": "node-spine0"
       }
      }
     ]
    }
   },
   "configAddFabricConnectionsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "connections": [
      {
       "id": "79d9bf63-2101-4a4d-a29a-82df1bb959bf",
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "local": {
        "portName": "Ethernet1_19",
        "nodeName": "node-leaf0"
       },
       "remote": {
        "portName": "Ethernet1_19",
        "nodeName": "node-spine0"
       }
      },
      {
       "id": "f78582f1-19e6-4efc-89e7-1e3c54ab46e1",
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "local": {
        "portName": "Ethernet1_22",
        "nodeName": "node-leaf1"
       },
       "remote": {
        "portName": "Ethernet1_22",
        "nodeName": "node-spine0"
       }
      }
     ]
    }
   },
   "configAddFabricNodesRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "nodes": [
      {
       "name": "node-leaf0",
       "description": "example fabric node leaf zero",
       "enabled": true,
       "serialNumber": "RESTAA2000",
       "modelName": "HF6100-60L4D",
       "roles": [
        "LEAF"
       ],
       "labels": [
        "TAG_ONE_ZERO"
       ]
      },
      {
       "name": "node-leaf1",
       "description": "example fabric node leaf one",
       "enabled": true,
       "serialNumber": "RESTAA2001",
       "modelName": "HF6100-32D"
      },
      {
       "name": "node-spine0",
       "description": "example fabric node spine zero",
       "enabled": true,
       "serialNumber": "RESTAA2002",
       "modelName": "HF6100-32D",
       "roles": [
        "SPINE"
       ]
      },
      {
       "name": "node-spine1",
       "description": "example fabric node spine one",
       "enabled": true,
       "serialNumber": "RESTAA1001",
       "modelName": "HF6100-32D",
       "roles": [
        "SPINE"
       ]
      }
     ]
    }
   },
   "configAddFabricNodesResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "nodes": [
      {
       "nodeId": "c3c62e65-97dd-42ce-8e72-c6f96efbe50f",
       "name": "node-leaf0",
       "deviceId": "de-ad-00-00-01-04",
       "description": "example fabric node leaf zero",
       "enabled": true,
       "serialNumber": "RESTAA2000",
       "modelName": "HF6100-60L4D",
       "roles": [
        "LEAF"
       ],
       "labels": [
        "TAG_ONE_ZERO"
       ]
      },
      {
       "nodeId": "35c3900a-ebef-4950-9bdf-59e39ef60107",
       "name": "node-leaf1",
       "deviceId": "de-ad-00-00-01-05",
       "description": "example fabric node leaf one",
       "enabled": true,
       "serialNumber": "RESTAA2001",
       "modelName": "HF6100-32D",
       "roles": [
        "LEAF"
       ]
      },
      {
       "nodeId": "d85f664f-9270-4a0a-833d-9d3f38cd4b32",
       "name": "node-spine0",
       "deviceId": "de-ad-00-00-01-06",
       "description": "example fabric node spine zero",
       "enabled": true,
       "serialNumber": "RESTAA2002",
       "modelName": "HF6100-32D",
       "roles": [
        "SPINE"
       ]
      },
      {
       "nodeId": "37653679-1043-46de-9da0-006458518ee6",
       "name": "node-spine1",
       "deviceId": "de-ad-00-00-01-07",
       "description": "example fabric node spine one",
       "enabled": true,
       "serialNumber": "RESTAA1001",
       "modelName": "HF6100-32D",
       "roles": [
        "SPINE"
       ]
      }
     ]
    }
   },
   "configAddFabricSoftwareConfigRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configAddFabricStaticRoutesRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "staticRoutes": [
      {
       "name": "Vrf-exampleOne-SR1",
       "enabled": true,
       "routes": [
        {
         "prefix": "10.10.10.0/24",
         "preference": 10,
         "discard": true
        },
        {
         "prefix": "11.10.10.0/24",
         "preference": 10,
         "discard": true
        }
       ]
      }
     ]
    }
   },
   "configAddFabricStaticRoutesResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "staticRoutes": [
      {
       "id": "04fd82ef-9480-449a-b9dc-ad988dfb1bca",
       "name": "Vrf-exampleOne-SR1",
       "enabled": true,
       "fabricId": "example-fabric",
       "routes": [
        {
         "prefix": "10.10.10.0/24",
         "preference": 10,
         "discard": true
        },
        {
         "prefix": "11.10.10.0/24",
         "preference": 10,
         "discard": true
        }
       ],
       "vrfId": "63070717-4135-4680-ab9e-7bc3d0748fa6"
      }
     ]
    }
   },
   "configAddFabricVniMembersRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configAddFabricVnisRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "vnis": [
      {
       "name": "example-fabric-vni1",
       "description": "These are some notes on my VNI",
       "labels": [
        "FABRIC_VNI_ONE_1",
        "FABRIC_VNI_ONE_2"
       ],
       "enabled": true,
       "vni": 1400000
      },
      {
       "name": "example-fabric-vni2",
       "description": "These are some notes on my VNI",
       "labels": [
        "FABRIC_VNI_TWO_1"
       ],
       "enabled": true,
       "vni": 1500000
      }
     ]
    }
   },
   "configAddFabricVnisResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "vnis": [
      {
       "id": "ee3e6931-5821-4cbe-910f-37da88ddde0e",
       "name": "example-fabric-vni1",
       "description": "These are some notes on my VNI",
       "labels": [
        "FABRIC_VNI_ONE_1",
        "FABRIC_VNI_ONE_2"
       ],
       "enabled": true,
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "vni": 1400000
      },
      {
       "id": "f3f3eed9-2f6d-498c-afdd-3b9316d6f506",
       "name": "example-fabric-vni2",
       "description": "These are some notes on my VNI",
       "labels": [
        "FABRIC_VNI_TWO_1"
       ],
       "enabled": true,
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "vni": 1500000
      }
     ]
    }
   },
   "configAddFabricVrfsRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "vrfs": [
      {
       "name": "Vrf-exampleOne",
       "enabled": true
      },
      {
       "name": "Vrf-exampleTwo",
       "description": "Test Vrf for example-fabric",
       "labels": [
        "VRF_LABEL_ONE",
        "vrf_label_two",
        "vrf label three"
       ],
       "enabled": true
      },
      {
       "name": "Vrf-exampleThree",
       "enabled": true
      }
     ]
    }
   },
   "configAddFabricVrfsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "vrfs": [
      {
       "id": "28dc2e3a-d1c3-4c84-a1b5-7e8c25486691",
       "name": "Vrf-exampleOne",
       "enabled": true,
       "fabricId": "dfb30caa-2555-4ae7-b882-3976e46e79b2",
       "vni": 12001000
      },
      {
       "id": "973eff50-b5d5-4034-9a8c-916a3ab653a1",
       "name": "Vrf-exampleThree",
       "enabled": true,
       "fabricId": "dfb30caa-2555-4ae7-b882-3976e46e79b2",
       "vni": 12001002
      },
      {
       "id": "9c8187a0-99ba-45ea-945b-647061d097d1",
       "name": "Vrf-exampleTwo",
       "description": "Test Vrf for example-fabric",
       "labels": [
        "VRF_LABEL_ONE",
        "vrf_label_two",
        "vrf label three"
       ],
       "enabled": true,
       "fabricId": "dfb30caa-2555-4ae7-b882-3976e46e79b2",
       "vni": 12001001
      },
      {
       "id": "3ed068e3-69f3-4342-b9a6-a120f3eef0a5",
       "name": "Vrf12000000",
       "enabled": true,
       "fabricId": "dfb30caa-2555-4ae7-b882-3976e46e79b2",
       "isDefault": true,
       "vni": 12000000
      }
     ]
    }
   },
   "configAddFabricsRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "fabrics": [
      {
       "name": "example-fabric",
       "description": "An example fabric for demonstration",
       "location": "CA-95134",
       "address": "300 East Tasman Drive",
       "city": "San Jose",
       "country": "US",
       "labels": [
        "TAG_ONE",
        "TAG_TWO"
       ]
      }
     ]
    }
   },
   "configAddFabricsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "fabrics": [
      {
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "name": "example-fabric",
       "description": "An example fabric, for demonstration.",
       "location": "CA-95134",
       "address": "300 East Tasman Drive",
       "city": "San Jose",
       "country": "US",
       "labels": [
        "TAG_ONE",
        "TAG_TWO"
       ]
      }
     ]
    }
   },
   "configAddManagementPortsRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "ports": [
      {
       "name": "eth0",
       "ipv4Address": "10.1.1.250/31",
       "ipv4Gateway": "10.1.1.251",
       "ipv6Address": "2a02:1243:5687:0:9c09:2c7a:7c78:9ffc/64",
       "ipv6Gateway": "2a02:1243:5687:0:8d91:ba6b:b24d:9b41",
       "dnsAddresses": [
        "8.8.8.8",
        "8.8.4.4"
       ],
       "proxyAddress": "https://10.1.1.10:8080",
       "proxyUsername": "admin",
       "proxyPassword": "admin123",
       "enabled": true,
       "cloudUrls": [
        "https://a.b.com"
       ],
       "setProxyPassword": true,
       "noProxy": [
        "10.0.0.0/8",
        "68.0.0.0/8",
        "72.0.0.0/8",
        "172.0.0.0/8",
        "172.0.0.0/8",
        "173.0.0.0/8",
        "cisco.com",
        "localhost",
        "127.0.0.1",
        ".local"
       ]
      }
     ]
    }
   },
   "configAddManagementPortsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "ports": [
      {
       "id": "da141c97-9402-4593-9f99-7b74b7d9964e",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "name": "eth0",
       "description": "Management Ethernet Port Configuration",
       "ipv4Address": "10.1.1.250/31",
       "ipv4Gateway": "10.1.1.251",
       "ipv6Address": "2a02:1243:5687:0:9c09:2c7a:7c78:9ffc/64",
       "ipv6Gateway": "2a02:1243:5687:0:8d91:ba6b:b24d:9b41",
       "dnsAddresses": [
        "8.8.8.8",
        "8.8.4.4"
       ],
       "proxyAddress": "https://10.1.1.10:8080",
       "proxyUsername": "admin",
       "proxyCredentialsId": "7828d0b5-209f-4170-972d-94e3975fde97",
       "proxyPassword": "******",
       "enabled": true,
       "ipv4ConfigType": "CONFIG_TYPE_STATIC",
       "ipv6ConfigType": "CONFIG_TYPE_STATIC",
       "cloudUrls": [
        "https://a.b.com"
       ],
       "configOrigin": "CONFIG_ORIGIN_CLOUD",
       "metadata": {
        "revisionId": "1",
        "createdBy": "cisco/hyperfabric-example@cisco.com",
        "createdAt": "2024-09-07T22:16:21.209594Z",
        "modifiedBy": "cisco/hyperfabric-example@cisco.com",
        "modifiedAt": "2024-09-07T22:16:21.209594Z"
       },
       "noProxy": [
        "10.0.0.0/8",
        "68.0.0.0/8",
        "72.0.0.0/8",
        "172.0.0.0/8",
        "172.0.0.0/8",
        "173.0.0.0/8",
        "cisco.com",
        "localhost",
        "127.0.0.1",
        ".local"
       ]
      }
     ]
    }
   },
   "configAddNodeLoopbacksRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "loopbacks": [
      {
       "name": "Loopback10",
       "description": "Node spine1",
       "labels": [
        "LOOPBACK_LABEL1"
       ],
       "annotations": [
        {
         "name": "position",
         "value": "LF001",
         "dataType": "STRING"
        }
       ],
       "enabled": true,
       "ipv4Address": "192.168.100.1",
       "ipv6Address": "2001:db8::1"
      },
      {
       "name": "Loopback20",
       "description": "Node spine1",
       "labels": [
        "LOOPBACK_LABEL2"
       ],
       "annotations": [
        {
         "name": "position",
         "value": "LF001",
         "dataType": "STRING"
        }
       ],
       "enabled": true,
       "ipv4Address": "192.168.100.2",
       "ipv6Address": "2001:db8::2"
      }
     ]
    }
   },
   "configAddNodeLoopbacksResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "loopbacks": [
      {
       "id": "b8cf417a-7cf5-448e-a705-d4bd071e118b",
       "name": "Loopback10",
       "description": "Node spine1",
       "labels": [
        "LOOPBACK_LABEL1"
       ],
       "annotations": [
        {
         "name": "position",
         "value": "LF001",
         "dataType": "STRING"
        }
       ],
       "enabled": true,
       "fabricId": "10c2941c-7c07-4c14-9cbd-63033955a0e5",
       "nodeId": "2b1ed626-c6e9-4bd8-a779-7fcdf9817b59",
       "ipv4Address": "192.168.100.1",
       "ipv6Address": "2001:db8::1"
      },
      {
       "id": "2c73bc83-2148-432f-b1a3-20e905287814",
       "name": "Loopback20",
       "description": "Node spine1",
       "labels": [
        "LOOPBACK_LABEL2"
       ],
       "annotations": [
        {
         "name": "position",
         "value": "LF001",
         "dataType": "STRING"
        }
       ],
       "enabled": true,
       "fabricId": "10c2941c-7c07-4c14-9cbd-63033955a0e5",
       "nodeId": "2b1ed626-c6e9-4bd8-a779-7fcdf9817b59",
       "ipv4Address": "192.168.100.2",
       "ipv6Address": "2001:db8::2"
      }
     ]
    }
   },
   "configAddNodePortBreakoutsRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configAddNodePortBreakoutsResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configAddNodeSubInterfacesRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "subInterfaces": [
      {
       "name": "Ethernet1_5.10",
       "description": "Node node-spine1",
       "labels": [
        "SUBINTERFACE_LABEL1"
       ],
       "annotations": [
        {
         "name": "position",
         "value": "LF001",
         "dataType": "STRING"
        }
       ],
       "enabled": true,
       "vlanId": 10,
       "vrfId": "7d7056df-fa02-495e-906f-0b2710af558d",
       "ipv4Addresses": [
        "192.168.100.1/24"
       ],
       "ipv6Addresses": [
        "2001:db8::1/64"
       ]
      },
      {
       "name": "Ethernet1_6.200",
       "description": "Node node-spine1",
       "labels": [
        "SUBINTERFACE_LABEL2"
       ],
       "annotations": [
        {
         "name": "position",
         "value": "LF001",
         "dataType": "STRING"
        }
       ],
       "enabled": true,
       "ipv4Addresses": [
        "192.168.101.1/24"
       ],
       "ipv6Addresses": [
        "2002:db8::1/64"
       ]
      }
     ]
    }
   },
   "configAddNodeSubInterfacesResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "subInterfaces": [
      {
       "id": "0d6dd970-c90b-46d6-97ed-4b19df067ee6",
       "name": "Ethernet1_5.10",
       "description": "Node node-spine1",
       "labels": [
        "SUBINTERFACE_LABEL1"
       ],
       "annotations": [
        {
         "name": "position",
         "value": "LF001",
         "dataType": "STRING"
        }
       ],
       "enabled": true,
       "fabricId": "80ca6227-5d6e-483b-84a4-ddc0a210e585",
       "nodeId": "fad39c25-18e0-49ba-92ff-160b98e7936d",
       "vlanId": 10,
       "vrfId": "7d7056df-fa02-495e-906f-0b2710af558d",
       "ipv4Addresses": [
        "192.168.100.1/24"
       ],
       "ipv6Addresses": [
        "2001:db8::1/64"
       ]
      },
      {
       "id": "699e6c4d-0e02-4a5b-b1f1-f42f78c906ab",
       "name": "Ethernet1_6.200",
       "description": "Node node-spine1",
       "labels": [
        "SUBINTERFACE_LABEL2"
       ],
       "annotations": [
        {
         "name": "position",
         "value": "LF001",
         "dataType": "STRING"
        }
       ],
       "enabled": true,
       "fabricId": "80ca6227-5d6e-483b-84a4-ddc0a210e585",
       "nodeId": "fad39c25-18e0-49ba-92ff-160b98e7936d",
       "vlanId": 200,
       "ipv4Addresses": [
        "192.168.101.1/24"
       ],
       "ipv6Addresses": [
        "2002:db8::1/64"
       ]
      }
     ]
    }
   },
   "configAddOrgCertificatesRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configAddOrgCertificatesResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configAddPortChannelsRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "portChannels": [
      {
       "name": "PortChannel1",
       "description": "Leaf port channels.",
       "labels": [
        "LEAF_CHANNELS"
       ],
       "annotations": [
        {
         "name": "pc1",
         "value": "port-channel-one",
         "dataType": "STRING"
        }
       ],
       "enabled": true,
       "roles": [
        "HOST_PORT"
       ],
       "members": [
        {
         "portName": "Ethernet1_1",
         "nodeName": "node-leaf0"
        },
        {
         "portName": "Ethernet1_2",
         "nodeName": "node-leaf0"
        },
        {
         "portName": "Ethernet1_3",
         "nodeName": "node-leaf0"
        },
        {
         "portName": "Ethernet1_4",
         "nodeName": "node-leaf0"
        }
       ],
       "lacpMode": "LACP_ACTIVE",
       "maxSpeed": "40G"
      },
      {
       "name": "PortChannel2",
       "description": "Spine port channels",
       "enabled": true,
       "roles": [
        "HOST_PORT"
       ],
       "members": [
        {
         "portName": "Ethernet1_1",
         "nodeName": "node-spine0"
        },
        {
         "portName": "Ethernet1_2",
         "nodeName": "node-spine0"
        }
       ],
       "lacpMode": "LACP_ACTIVE",
       "maxSpeed": "800G"
      }
     ]
    }
   },
   "configAddPortChannelsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "portChannels": [
      {
       "id": "2a09005d-7f9d-4d83-b929-d48d5bb77a8f",
       "name": "PortChannel1",
       "description": "Leaf port channels.",
       "labels": [
        "LEAF_CHANNELS"
       ],
       "annotations": [
        {
         "name": "pc1",
         "value": "port-channel-one",
         "dataType": "STRING"
        }
       ],
       "enabled": true,
       "fabricId": "cd7f507e-3f49-4d7c-a4f8-2d059b4aa71e",
       "roles": [
        "HOST_PORT"
       ],
       "members": [
        {
         "portName": "Ethernet1_1",
         "nodeName": "node-leaf0"
        },
        {
         "portName": "Ethernet1_2",
         "nodeName": "node-leaf0"
        },
        {
         "portName": "Ethernet1_3",
         "nodeName": "node-leaf0"
        },
        {
         "portName": "Ethernet1_4",
         "nodeName": "node-leaf0"
        }
       ],
       "lacpMode": "LACP_ACTIVE",
       "maxSpeed": "40G"
      },
      {
       "id": "d03bfe1b-76fb-4736-84cf-96361daa9bbb",
       "name": "PortChannel2",
       "description": "Spine port channels",
       "enabled": true,
       "fabricId": "cd7f507e-3f49-4d7c-a4f8-2d059b4aa71e",
       "roles": [
        "HOST_PORT"
       ],
       "members": [
        {
         "portName": "Ethernet1_1",
         "nodeName": "node-spine0"
        },
        {
         "portName": "Ethernet1_2",
         "nodeName": "node-spine0"
        }
       ],
       "lacpMode": "LACP_ACTIVE",
       "maxSpeed": "800G"
      }
     ]
    }
   },
   "configBindDeviceRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configBindDeviceResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configClaimDevicesRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "claimCodes": [
      "richard-rufus-enigma-puma-nice-hope",
      "moral-native-austria-harlem-pasta-neon",
      "cupid-honey-soviet-aspect-ringo-window"
     ]
    }
   },
   "configClaimDevicesResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "claims": [
      {
       "deviceId": "02-17-ff-4c-01-00",
       "claimCode": "benefit-select-clara-broken-region-kevin",
       "claimStatus": "CLAIM_STATUS_SUCCESS",
       "serialNumber": "TFAB36631534",
       "modelName": "HF6100-32D"
      },
      {
       "deviceId": "02-17-ff-60-00-00",
       "claimCode": "felix-cactus-lake-escort-mozart-hydro",
       "claimStatus": "CLAIM_STATUS_ALREADY_CLAIMED",
       "serialNumber": "TFAB37198447",
       "modelName": "HF6100-32D"
      },
      {
       "claimCode": "period-parent-drum-octavia-edward-rodeo",
       "claimStatus": "CLAIM_STATUS_INVALID_CODE"
      },
      {
       "deviceId": "02-17-ff-9f-01-01",
       "claimCode": "falcon-contour-update-jessica-member-tripod",
       "claimStatus": "CLAIM_STATUS_EXPIRED_CODE",
       "serialNumber": "TFAB95422747",
       "modelName": "HF6100-32D"
      }
     ]
    }
   },
   "configCommitFabricCandidateRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "comments": "Test commit comment"
    }
   },
   "configCommitFabricCandidateResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "fabricId": "example-fabric",
     "committed": true
    }
   },
   "configExportedFabricConfiguration": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configFabricConfig": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configFabricDhcpRelaysResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configFabricLoopbacksResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configFabricVniMembersResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGenerateCablingPlanRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGenerateCablingPlanResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetActivityEventsResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetAllPortChannelsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "portChannels": [
      {
       "id": "2a09005d-7f9d-4d83-b929-d48d5bb77a8f",
       "name": "PortChannel1",
       "description": "Leaf port channels.",
       "labels": [
        "LEAF_CHANNELS"
       ],
       "annotations": [
        {
         "name": "pc1",
         "value": "port-channel-one",
         "dataType": "STRING"
        }
       ],
       "enabled": true,
       "fabricId": "cd7f507e-3f49-4d7c-a4f8-2d059b4aa71e",
       "roles": [
        "HOST_PORT"
       ],
       "members": [
        {
         "portName": "Ethernet1_1",
         "nodeId": "1c92ad87-4a13-4b11-b8bb-b94668bfd16f",
         "nodeName": "node-leaf0"
        },
        {
         "portName": "Ethernet1_2",
         "nodeId": "1c92ad87-4a13-4b11-b8bb-b94668bfd16f",
         "nodeName": "node-leaf0"
        },
        {
         "portName": "Ethernet1_3",
         "nodeId": "1c92ad87-4a13-4b11-b8bb-b94668bfd16f",
         "nodeName": "node-leaf0"
        },
        {
         "portName": "Ethernet1_4",
         "nodeId": "1c92ad87-4a13-4b11-b8bb-b94668bfd16f",
         "nodeName": "node-leaf0"
        }
       ],
       "lacpMode": "LACP_ACTIVE",
       "maxSpeed": "40G"
      },
      {
       "id": "d03bfe1b-76fb-4736-84cf-96361daa9bbb",
       "name": "PortChannel2",
       "description": "Spine port channels",
       "enabled": true,
       "fabricId": "cd7f507e-3f49-4d7c-a4f8-2d059b4aa71e",
       "roles": [
        "HOST_PORT"
       ],
       "members": [
        {
         "portName": "Ethernet1_1",
         "nodeId": "2c209a72-4f95-4524-a9a1-edc413ef32e4",
         "nodeName": "node-spine0"
        },
        {
         "portName": "Ethernet1_2",
         "nodeId": "2c209a72-4f95-4524-a9a1-edc413ef32e4",
         "nodeName": "node-spine0"
        }
       ],
       "lacpMode": "LACP_ACTIVE",
       "maxSpeed": "800G"
      }
     ]
    }
   },
   "configGetCablingPlanResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetEndpointResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "endpointId": "e2cd5e3a-65e0-4162-88d5-0deb875049de",
     "name": "email-1",
     "description": "An email notification endpoint",
     "enabled": true,
     "type": "EMAIL",
     "email": {
      "address": "hyperfabric-example@cisco.com"
     }
    }
   },
   "configGetEndpointsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "endpoints": [
      {
       "endpointId": "e2cd5e3a-65e0-4162-88d5-0deb875049de",
       "name": "email-1",
       "description": "An email notification endpoint",
       "enabled": true,
       "type": "EMAIL",
       "email": {
        "address": "hyperfabric-example@cisco.com"
       }
      }
     ]
    }
   },
   "configGetEntitlementUsageResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetFabricAssemblyResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetFabricBgpPoliciesResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetFabricBgpPolicyResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetFabricBlueprintTemplatesResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetFabricBomResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetFabricCandidateResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "fabricId": "e073685c-d5f9-428e-b1e8-ea00db700243",
     "name": "default",
     "active": true,
     "txnId": "1035",
     "createdBy": "cisco/hyperfabric-example@cisco.com",
     "createdAt": "2024-09-30T23:25:28.325706Z",
     "events": [
      {
       "eventId": "1780",
       "timestamp": "2024-09-30T23:25:28.325706Z",
       "username": "cisco/hyperfabric-example@cisco.com",
       "objectType": "NODE",
       "objectId": "80a81623-0992-4b55-8675-a6c678dbf6f5",
       "objectName": "example-fabric-HF6100-60L4D-leaf2",
       "operation": "CREATE"
      },
      {
       "eventId": "1779",
       "timestamp": "2024-09-30T23:25:28.325706Z",
       "username": "cisco/hyperfabric-example@cisco.com",
       "objectType": "NODE",
       "objectId": "f34afebf-c4f6-4f86-bf08-28edf8ff9daa",
       "objectName": "example-fabric-HF6100-60L4D-leaf1",
       "operation": "CREATE"
      },
      {
       "eventId": "1778",
       "timestamp": "2024-09-30T23:25:28.325706Z",
       "username": "cisco/hyperfabric-example@cisco.com",
       "objectType": "NODE",
       "objectId": "a6ddc7ee-3afc-4467-983f-842271de1ff9",
       "objectName": "example-fabric-HF6100-32D-leaf2",
       "operation": "CREATE"
      },
      {
       "eventId": "1777",
       "timestamp": "2024-09-30T23:25:28.325706Z",
       "username": "cisco/hyperfabric-example@cisco.com",
       "objectType": "NODE",
       "objectId": "87d5fa3f-4340-4cdd-86bd-d99abc4affcf",
       "objectName": "example-fabric-HF6100-32D-leaf1",
       "operation": "CREATE"
      },
      {
       "eventId": "1776",
       "timestamp": "2024-09-30T23:25:28.325706Z",
       "username": "cisco/hyperfabric-example@cisco.com",
       "objectType": "NODE",
       "objectId": "fa62591a-cb38-48fa-acd1-97cf4f30d2f7",
       "objectName": "example-fabric-HF6100-32D-spine1",
       "operation": "CREATE"
      },
      {
       "eventId": "1775",
       "timestamp": "2024-09-30T23:25:28.325706Z",
       "username": "cisco/hyperfabric-example@cisco.com",
       "objectType": "FABRIC_TRANSACTION",
       "objectId": "e073685c-d5f9-428e-b1e8-ea00db700243",
       "objectName": "example-fabric",
       "operation": "CREATE"
      }
     ]
    }
   },
   "configGetFabricCandidatesResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "candidates": [
      {
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "name": "default",
       "active": true,
       "txnId": "2261",
       "createdBy": "cisco/hyperfabric-example@cisco.com",
       "createdAt": "2024-09-07T20:42:59.159343Z",
       "events": [
        {
         "eventId": "11147",
         "timestamp": "2024-09-07T22:17:19.031727Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "MANAGEMENT_PORT",
         "objectId": "da141c97-9402-4593-9f99-7b74b7d9964e",
         "objectName": "eth01",
         "parentId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
         "operation": "UPDATE"
        },
        {
         "eventId": "11146",
         "timestamp": "2024-09-07T22:16:21.208334Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "MANAGEMENT_PORT",
         "objectId": "da141c97-9402-4593-9f99-7b74b7d9964e",
         "objectName": "eth01",
         "parentId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
         "operation": "CREATE"
        },
        {
         "eventId": "11145",
         "timestamp": "2024-09-07T21:03:06.010002Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "NODE",
         "objectId": "9a4ef85f-5cd2-4813-a235-953a3d39332b",
         "objectName": "node-spine1",
         "operation": "CREATE"
        },
        {
         "eventId": "11144",
         "timestamp": "2024-09-07T21:03:06.010002Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "NODE",
         "objectId": "17f37f9d-8659-4b17-8709-9bf0789ded72",
         "objectName": "node-spine0",
         "operation": "CREATE"
        },
        {
         "eventId": "11143",
         "timestamp": "2024-09-07T21:03:06.010002Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "NODE",
         "objectId": "77a14049-ade1-4da2-8204-00ee7db4b9dc",
         "objectName": "node-leaf1",
         "operation": "CREATE"
        },
        {
         "eventId": "11142",
         "timestamp": "2024-09-07T21:03:06.010002Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "NODE",
         "objectId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
         "objectName": "node-leaf0",
         "operation": "CREATE"
        },
        {
         "eventId": "11141",
         "timestamp": "2024-09-07T21:02:10.013382Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "FABRIC",
         "objectId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
         "objectName": "example-fabric",
         "operation": "UPDATE"
        },
        {
         "eventId": "11140",
         "timestamp": "2024-09-07T20:48:07.481369Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "FABRIC",
         "objectId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
         "objectName": "example-one",
         "operation": "UPDATE"
        },
        {
         "eventId": "11139",
         "timestamp": "2024-09-07T20:46:05.010508Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "FABRIC",
         "objectId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
         "objectName": "Example One",
         "operation": "UPDATE"
        },
        {
         "eventId": "11137",
         "timestamp": "2024-09-07T20:42:59.159343Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "FABRIC",
         "objectId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
         "objectName": "example-fabric",
         "operation": "CREATE"
        },
        {
         "eventId": "11136",
         "timestamp": "2024-09-07T20:42:59.159343Z",
         "username": "cisco/hyperfabric-example@cisco.com",
         "objectType": "FABRIC_TRANSACTION",
         "objectId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
         "objectName": "example-fabric",
         "operation": "CREATE"
        }
       ]
      }
     ],
     "pagination": {
      "total": 1,
      "cursor": "MTA6MTc6MDAwMDAwMDAwMjI2MSQxNTowMDAwMDAwMDAwMDAx",
      "final": true
     }
    }
   },
   "configGetFabricConnection": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetFabricConnectionsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "connections": [
      {
       "id": "5e694530-40a0-4b27-a88d-2336e351c4d8",
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "local": {
        "portName": "Ethernet1_1",
        "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
        "nodeName": "node-leaf0"
       },
       "remote": {
        "portName": "Ethernet1_1",
        "nodeId": "17f37f9d-8659-4b17-8709-9bf0789ded72",
        "nodeName": "node-spine0"
       },
       "osType": "HYPER_FABRIC"
      },
      {
       "id": "8fcd5ae2-26d8-45ca-8e2e-10442f5b872c",
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "local": {
        "portName": "Ethernet1_8",
        "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
        "nodeName": "node-leaf0"
       },
       "remote": {
        "portName": "Ethernet1_1",
        "nodeId": "9a4ef85f-5cd2-4813-a235-953a3d39332b",
        "nodeName": "node-spine1"
       },
       "osType": "HYPER_FABRIC"
      },
      {
       "id": "04094927-c00e-42b7-8e75-fd38404e9158",
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "local": {
        "portName": "Ethernet1_1",
        "nodeId": "77a14049-ade1-4da2-8204-00ee7db4b9dc",
        "nodeName": "node-leaf1"
       },
       "remote": {
        "portName": "Ethernet1_8",
        "nodeId": "17f37f9d-8659-4b17-8709-9bf0789ded72",
        "nodeName": "node-spine0"
       },
       "osType": "HYPER_FABRIC"
      },
      {
       "id": "06eff3e6-2630-4cd1-8d0f-36de7622bdc6",
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "local": {
        "portName": "Ethernet1_8",
        "nodeId": "77a14049-ade1-4da2-8204-00ee7db4b9dc",
        "nodeName": "node-leaf1"
       },
       "remote": {
        "portName": "Ethernet1_8",
        "nodeId": "9a4ef85f-5cd2-4813-a235-953a3d39332b",
        "nodeName": "node-spine1"
       },
       "osType": "HYPER_FABRIC"
      }
     ]
    }
   },
   "configGetFabricInventoriesResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetFabricNodeResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
     "name": "node-leaf0",
     "deviceId": "de-ad-00-00-05-83",
     "description": "example fabric node leaf zero",
     "enabled": true,
     "serialNumber": "RESTAA2000",
     "modelName": "8102-64H-O",
     "roles": [
      "LEAF"
     ],
     "labels": [
      "TAG_ONE_ZERO"
     ],
     "annotations": [
      {
       "name": "position",
       "value": "LF001"
      }
     ]
    }
   },
   "configGetFabricNodesResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "nodes": [
      {
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "name": "node-leaf0",
       "deviceId": "de-ad-00-00-05-83",
       "description": "example fabric node leaf zero",
       "enabled": true,
       "serialNumber": "RESTAA2000",
       "modelName": "8102-64H-O",
       "roles": [
        "LEAF"
       ],
       "labels": [
        "TAG_ONE_ZERO"
       ],
       "annotations": [
        {
         "name": "position",
         "value": "LF001"
        }
       ]
      },
      {
       "nodeId": "77a14049-ade1-4da2-8204-00ee7db4b9dc",
       "name": "node-leaf1",
       "deviceId": "de-ad-00-00-05-84",
       "description": "example fabric node leaf one",
       "enabled": true,
       "serialNumber": "RESTAA2001",
       "modelName": "8102-64H-O",
       "roles": [
        "LEAF"
       ],
       "annotations": [
        {
         "name": "position",
         "value": "LF002"
        }
       ]
      },
      {
       "nodeId": "17f37f9d-8659-4b17-8709-9bf0789ded72",
       "name": "node-spine0",
       "deviceId": "de-ad-00-00-05-85",
       "description": "example fabric node spine zero",
       "enabled": true,
       "serialNumber": "RESTAA2002",
       "modelName": "8102-64H-O",
       "roles": [
        "SPINE"
       ],
       "annotations": [
        {
         "name": "position",
         "value": "SP001"
        }
       ]
      },
      {
       "nodeId": "9a4ef85f-5cd2-4813-a235-953a3d39332b",
       "name": "node-spine1",
       "deviceId": "de-ad-00-00-05-86",
       "description": "example fabric node spine one",
       "enabled": true,
       "serialNumber": "RESTAA1001",
       "modelName": "8101-32H-O",
       "roles": [
        "SPINE"
       ],
       "annotations": [
        {
         "name": "position",
         "value": "SP002"
        }
       ]
      }
     ]
    }
   },
   "configGetFabricResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
     "name": "example-fabric",
     "description": "Updated description of example-fabric.",
     "location": "DC-1000",
     "address": "725 Alder Drive",
     "city": "Milpitas",
     "country": "US",
     "metadata": {
      "revisionId": "3",
      "createdBy": "cisco/hyperfabric-example@cisco.com",
      "createdAt": "2024-09-07T20:42:59.161229Z",
      "modifiedBy": "cisco/hyperfabric-example@cisco.com",
      "modifiedAt": "2024-09-07T20:48:07.481461Z"
     }
    }
   },
   "configGetFabricRevisionIds": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "fabricId": "example-fabric",
     "revisionId": "1732220099853279"
    }
   },
   "configGetFabricStaticRouteResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "25ac3b72-1414-4214-97f1-1586c8ea76de",
     "name": "Vrf-exampleOne",
     "enabled": true,
     "fabricId": "99999089-a2b2-44d2-9e4e-1c1b8f67861c",
     "routes": [
      {
       "prefix": "10.10.10.0/24",
       "preference": 10,
       "discard": true
      }
     ],
     "vrfId": "63070717-4135-4680-ab9e-7bc3d0748fa6"
    }
   },
   "configGetFabricStaticRoutesResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "staticRoutes": [
      {
       "id": "25ac3b72-1414-4214-97f1-1586c8ea76de",
       "name": "Vrf-exampleOne",
       "enabled": true,
       "fabricId": "99999089-a2b2-44d2-9e4e-1c1b8f67861c",
       "routes": [
        {
         "prefix": "10.10.10.0/24",
         "preference": 10,
         "discard": true
        }
       ],
       "vrfId": "63070717-4135-4680-ab9e-7bc3d0748fa6"
      }
     ]
    }
   },
   "configGetFabricStpResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "fabricId": "0e845a9a-1c4c-4d83-9cd1-eba9da235ae5",
     "enabled": true,
     "stpMac": "00-00-00-00-00-02",
     "priority": 28672
    }
   },
   "configGetFabricVniResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "f3f3eed9-2f6d-498c-afdd-3b9316d6f506",
     "name": "example-fabric-vni2",
     "description": "These are some notes on my VNI",
     "labels": [
      "FABRIC_VNI_TWO_1"
     ],
     "enabled": true,
     "metadata": {
      "revisionId": "1",
      "createdBy": "cisco/hyperfabric-example@cisco.com",
      "createdAt": "2024-09-07T23:49:54.596634Z",
      "modifiedBy": "cisco/hyperfabric-example@cisco.com",
      "modifiedAt": "2024-09-07T23:49:54.596634Z"
     },
     "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
     "vni": 1500000
    }
   },
   "configGetFabricVnisResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "vnis": [
      {
       "id": "ee3e6931-5821-4cbe-910f-37da88ddde0e",
       "name": "example-fabric-vni1",
       "description": "These are some notes on my VNI",
       "labels": [
        "FABRIC_VNI_ONE_1",
        "FABRIC_VNI_ONE_2"
       ],
       "enabled": true,
       "metadata": {
        "revisionId": "1",
        "createdBy": "cisco/hyperfabric-example@cisco.com",
        "createdAt": "2024-09-07T23:49:54.596634Z",
        "modifiedBy": "cisco/hyperfabric-example@cisco.com",
        "modifiedAt": "2024-09-07T23:49:54.596634Z"
       },
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "vni": 1400000
      },
      {
       "id": "f3f3eed9-2f6d-498c-afdd-3b9316d6f506",
       "name": "example-fabric-vni2",
       "description": "These are some notes on my VNI",
       "labels": [
        "FABRIC_VNI_TWO_1"
       ],
       "enabled": true,
       "metadata": {
        "revisionId": "1",
        "createdBy": "cisco/hyperfabric-example@cisco.com",
        "createdAt": "2024-09-07T23:49:54.596634Z",
        "modifiedBy": "cisco/hyperfabric-example@cisco.com",
        "modifiedAt": "2024-09-07T23:49:54.596634Z"
       },
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "vni": 1500000
      }
     ]
    }
   },
   "configGetFabricVrfResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "bda7fee1-0d1b-482a-b72c-504bafb0254b",
     "name": "Vrf12000000",
     "enabled": true,
     "metadata": {
      "revisionId": "1",
      "createdBy": "cisco/hyperfabric-example@cisco.com",
      "createdAt": "2024-09-07T23:49:54.596634Z",
      "modifiedBy": "cisco/hyperfabric-example@cisco.com",
      "modifiedAt": "2024-09-07T23:49:54.596634Z"
     },
     "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
     "isDefault": true,
     "vni": 12000000
    }
   },
   "configGetFabricVrfsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "vrfs": [
      {
       "id": "bda7fee1-0d1b-482a-b72c-504bafb0254b",
       "name": "Vrf12000000",
       "enabled": true,
       "metadata": {
        "revisionId": "1",
        "createdBy": "cisco/hyperfabric-example@cisco.com",
        "createdAt": "2024-09-07T23:49:54.596634Z",
        "modifiedBy": "cisco/hyperfabric-example@cisco.com",
        "modifiedAt": "2024-09-07T23:49:54.596634Z"
       },
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "isDefault": true,
       "vni": 12000000
      }
     ]
    }
   },
   "configGetFabricsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "fabrics": [
      {
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "name": "example-fabric",
       "description": "An example fabric, for demonstration.",
       "location": "CA-95134",
       "address": "300 East Tasman Drive",
       "city": "San Jose",
       "country": "US",
       "labels": [
        "TAG_ONE",
        "TAG_TWO"
       ]
      }
     ]
    }
   },
   "configGetLabelsResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetLimitsResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetManagementPortResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetManagementPortsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "ports": [
      {
       "id": "da141c97-9402-4593-9f99-7b74b7d9964e",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "name": "eth0",
       "description": "Management Ethernet Port Configuration",
       "ipv4Address": "10.10.10.1/24",
       "ipv4Gateway": "10.10.10.254",
       "ipv6Address": "2a02:1243:5687:0:9c09:2c7a:7c78:9ffc/33",
       "ipv6Gateway": "2a02:1243:5687:0:8d91:ba6b:b24d:9b41",
       "dnsAddresses": [
        "9.9.9.9/32",
        "8.8.8.8"
       ],
       "proxyAddress": "https://10.10.1.10:8080",
       "proxyUsername": "adminUser",
       "proxyCredentialsId": "7828d0b5-209f-4170-972d-94e3975fde97",
       "proxyPassword": "******",
       "enabled": true,
       "ipv4ConfigType": "CONFIG_TYPE_STATIC",
       "ipv6ConfigType": "CONFIG_TYPE_DHCP",
       "cloudUrls": [
        "https://a.example.com",
        "https://b.example.com"
       ],
       "configOrigin": "CONFIG_ORIGIN_CLOUD",
       "noProxy": [
        "10.0.0.5",
        "2001:db8:3333:4444:5555:6666:7777:8888/8",
        "68.0.0.0/8",
        "72.0.0.0/8",
        "172.0.0.1/8",
        ".cisco.com",
        ".local"
       ]
      }
     ]
    }
   },
   "configGetNodeLoopbackResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "b8cf417a-7cf5-448e-a705-d4bd071e118b",
     "name": "Loopback10",
     "description": "Node spine1",
     "labels": [
      "LOOPBACK_LABEL1"
     ],
     "annotations": [
      {
       "name": "position",
       "value": "LF001",
       "dataType": "STRING"
      }
     ],
     "enabled": true,
     "fabricId": "10c2941c-7c07-4c14-9cbd-63033955a0e5",
     "nodeId": "2b1ed626-c6e9-4bd8-a779-7fcdf9817b59",
     "ipv4Address": "192.168.100.1",
     "ipv6Address": "2001:db8::1",
     "vrfId": "91ea2f91-c8f5-45fb-846a-d6e32d925d4a"
    }
   },
   "configGetNodeLoopbacksResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "loopbacks": [
      {
       "id": "b8cf417a-7cf5-448e-a705-d4bd071e118b",
       "name": "Loopback10",
       "description": "Node spine1",
       "labels": [
        "LOOPBACK_LABEL1"
       ],
       "annotations": [
        {
         "name": "position",
         "value": "LF001",
         "dataType": "STRING"
        }
       ],
       "enabled": true,
       "fabricId": "10c2941c-7c07-4c14-9cbd-63033955a0e5",
       "nodeId": "2b1ed626-c6e9-4bd8-a779-7fcdf9817b59",
       "ipv4Address": "192.168.100.1",
       "ipv6Address": "2001:db8::1",
       "vrfId": "91ea2f91-c8f5-45fb-846a-d6e32d925d4a"
      },
      {
       "id": "2c73bc83-2148-432f-b1a3-20e905287814",
       "name": "Loopback20",
       "description": "Node spine1",
       "labels": [
        "LOOPBACK_LABEL2"
       ],
       "annotations": [
        {
         "name": "position",
         "value": "LF001",
         "dataType": "STRING"
        }
       ],
       "enabled": true,
       "fabricId": "10c2941c-7c07-4c14-9cbd-63033955a0e5",
       "nodeId": "2b1ed626-c6e9-4bd8-a779-7fcdf9817b59",
       "ipv4Address": "192.168.100.2",
       "ipv6Address": "2001:db8::2",
       "vrfId": "91ea2f91-c8f5-45fb-846a-d6e32d925d4a"
      }
     ]
    }
   },
   "configGetNodePortBreakoutResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetNodePortBreakoutsResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetNodeSubInterfaceResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "0d6dd970-c90b-46d6-97ed-4b19df067ee6",
     "name": "Ethernet1_5.10",
     "description": "Node node-spine1",
     "labels": [
      "SUBINTERFACE_LABEL1"
     ],
     "annotations": [
      {
       "name": "position",
       "value": "LF001",
       "dataType": "STRING"
      }
     ],
     "enabled": true,
     "fabricId": "80ca6227-5d6e-483b-84a4-ddc0a210e585",
     "nodeId": "fad39c25-18e0-49ba-92ff-160b98e7936d",
     "vlanId": 10,
     "vrfId": "7d7056df-fa02-495e-906f-0b2710af558d",
     "parent": "Ethernet1_5",
     "ipv4Addresses": [
      "192.168.100.1/24"
     ],
     "ipv6Addresses": [
      "2001:db8::1/64"
     ]
    }
   },
   "configGetNodeSubInterfacesResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "subInterfaces": [
      {
       "id": "0d6dd970-c90b-46d6-97ed-4b19df067ee6",
       "name": "Ethernet1_5.10",
       "description": "Node node-spine1",
       "labels": [
        "SUBINTERFACE_LABEL1"
       ],
       "annotations": [
        {
         "name": "position",
         "value": "LF001",
         "dataType": "STRING"
        }
       ],
       "enabled": true,
       "fabricId": "80ca6227-5d6e-483b-84a4-ddc0a210e585",
       "nodeId": "fad39c25-18e0-49ba-92ff-160b98e7936d",
       "vlanId": 10,
       "vrfId": "7d7056df-fa02-495e-906f-0b2710af558d",
       "parent": "Ethernet1_5",
       "ipv4Addresses": [
        "192.168.100.1/24"
       ],
       "ipv6Addresses": [
        "2001:db8::1/64"
       ]
      },
      {
       "id": "699e6c4d-0e02-4a5b-b1f1-f42f78c906ab",
       "name": "Ethernet1_6.200",
       "description": "Node node-spine1",
       "labels": [
        "SUBINTERFACE_LABEL2"
       ],
       "annotations": [
        {
         "name": "position",
         "value": "LF001",
         "dataType": "STRING"
        }
       ],
       "enabled": true,
       "fabricId": "80ca6227-5d6e-483b-84a4-ddc0a210e585",
       "nodeId": "fad39c25-18e0-49ba-92ff-160b98e7936d",
       "vlanId": 200,
       "vrfId": "7d7056df-fa02-495e-906f-0b2710af558d",
       "parent": "Ethernet1_6",
       "ipv4Addresses": [
        "192.168.101.1/24"
       ],
       "ipv6Addresses": [
        "2002:db8::1/64"
       ]
      }
     ]
    }
   },
   "configGetOrgCertificateResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetOrgCertificatesResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configGetPortChannelResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "2a09005d-7f9d-4d83-b929-d48d5bb77a8f",
     "name": "PortChannel1",
     "description": "Leaf port channels.",
     "labels": [
      "LEAF_CHANNELS"
     ],
     "annotations": [
      {
       "name": "pc1",
       "value": "port-channel-one",
       "dataType": "STRING"
      }
     ],
     "enabled": true,
     "fabricId": "cd7f507e-3f49-4d7c-a4f8-2d059b4aa71e",
     "roles": [
      "HOST_PORT"
     ],
     "members": [
      {
       "portName": "Ethernet1_1",
       "nodeId": "1c92ad87-4a13-4b11-b8bb-b94668bfd16f",
       "nodeName": "node-leaf0"
      },
      {
       "portName": "Ethernet1_2",
       "nodeId": "1c92ad87-4a13-4b11-b8bb-b94668bfd16f",
       "nodeName": "node-leaf0"
      },
      {
       "portName": "Ethernet1_3",
       "nodeId": "1c92ad87-4a13-4b11-b8bb-b94668bfd16f",
       "nodeName": "node-leaf0"
      },
      {
       "portName": "Ethernet1_4",
       "nodeId": "1c92ad87-4a13-4b11-b8bb-b94668bfd16f",
       "nodeName": "node-leaf0"
      }
     ],
     "lacpMode": "LACP_ACTIVE",
     "maxSpeed": "40G"
    }
   },
   "configGetPortResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "ba9b3d85-c8fb-4163-897a-6f1ef810d5e5",
     "name": "Ethernet1_31",
     "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
     "enabled": true,
     "index": 31,
     "linecard": 1,
     "roles": [
      "UNUSED_PORT"
     ],
     "mtu": 9100,
     "speed": "400G"
    }
   },
   "configGetPortsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "ports": [
      {
       "id": "a2e7f059-d8fa-4338-b708-ad88880f53a5",
       "name": "Ethernet1_1",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 1,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "79d85527-deff-411c-b4ce-3e65bf7f26b6",
       "name": "Ethernet1_2",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 2,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "5b0a077c-dfb8-4a7a-9513-ab9885d4cb2d",
       "name": "Ethernet1_3",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 3,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "0f7c23c9-70a7-4bd3-895b-1409284b46fc",
       "name": "Ethernet1_4",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 4,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "02e90e01-baa7-47cb-bafc-e8c1f607b96d",
       "name": "Ethernet1_5",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 5,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "b1836d46-cdcc-47b9-9221-f0cc348ac136",
       "name": "Ethernet1_6",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 6,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "0f44a759-1d34-4bbc-b962-94e86f7d8690",
       "name": "Ethernet1_7",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 7,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "ff1a5a69-87ad-4cd1-a297-657970f3300e",
       "name": "Ethernet1_8",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 8,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "85a57d79-672d-41e6-a11b-3cb720081afa",
       "name": "Ethernet1_9",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 9,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "9d10bcd8-dda2-4b31-8170-200f7be2c509",
       "name": "Ethernet1_10",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 10,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "17f97356-891a-49c8-99d6-1d88560a2e42",
       "name": "Ethernet1_11",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 11,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "1cac326f-e005-4f77-a431-792be1b64514",
       "name": "Ethernet1_12",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 12,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "5d2db947-0442-436a-a9ec-0ec1d4ac5c5b",
       "name": "Ethernet1_13",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 13,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "644814be-847b-493e-bec6-d25393ad2ba0",
       "name": "Ethernet1_14",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 14,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "47de7950-0307-4080-86e9-4e500fd9c3ec",
       "name": "Ethernet1_15",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 15,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "b0774dc7-e533-4bdb-92e7-6e40538ad0b4",
       "name": "Ethernet1_16",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 16,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "d8c1f18e-d6d2-451a-9d16-a7874dec0972",
       "name": "Ethernet1_17",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 17,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "2837e8a8-3a89-4b62-8112-1d56ac1c305d",
       "name": "Ethernet1_18",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 18,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "6ef64b79-be4a-46fd-97de-a4b201cae651",
       "name": "Ethernet1_19",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 19,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "4d5d29d8-c4f8-44fe-b19b-4babc13cd8dd",
       "name": "Ethernet1_20",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 20,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "7b5f34bd-2022-4863-9ea5-1752feabc496",
       "name": "Ethernet1_21",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 21,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "c6b25417-deed-4430-81af-8ec101804875",
       "name": "Ethernet1_22",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 22,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "976bbbea-21bf-4fa6-b875-ec35c5514915",
       "name": "Ethernet1_23",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 23,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "b96ec97b-9863-446e-934b-33bccf1940cd",
       "name": "Ethernet1_24",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 24,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "8cb7e9c4-3862-4de5-8550-26e47e879c37",
       "name": "Ethernet1_25",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 25,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "4627d67e-3917-456e-bec9-368b145153dc",
       "name": "Ethernet1_26",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 26,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "e7c6287d-7e8a-4af1-8804-a6335a521d9c",
       "name": "Ethernet1_27",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 27,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "7dcf338b-5bbe-481e-9d16-9576ba776851",
       "name": "Ethernet1_28",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 28,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "ce3740e0-db58-435f-9dc7-0c88710d558d",
       "name": "Ethernet1_29",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 29,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "61d8c491-ec9c-4526-9c5c-62ff7504f3aa",
       "name": "Ethernet1_30",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 30,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "ba9b3d85-c8fb-4163-897a-6f1ef810d5e5",
       "name": "Ethernet1_31",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 31,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      },
      {
       "id": "d2c9f3f5-362c-4bb1-8451-2c6ae63e1b66",
       "name": "Ethernet1_32",
       "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
       "enabled": true,
       "index": 32,
       "linecard": 1,
       "roles": [
        "UNUSED_PORT"
       ],
       "mtu": 9100,
       "speed": "400G"
      }
     ]
    }
   },
   "configLatchUnlatchAssertionsRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "assertions": [
      {
       "assertType": "DEVICE_CONNECTED_TO_CLOUD",
       "state": "UNLATCHED",
       "deviceConnectedToCloud": {
        "id": {
         "type": "AssertDeviceConnectedToCloudType",
         "device": "02-17-b1-ac-00-01"
        },
        "category": "ASSERT_CATEGORY_FABRIC",
        "assertState": "ASSERT_STATE_TRUE",
        "modifiedAt": "2024-12-19T20:51:06.063652086Z",
        "config": {
         "generationId": "1734641466061996045",
         "latchedAt": "2024-12-19T20:51:06.061996045Z",
         "orgId": "10000000-0000-0000-0000-000000000001",
         "fabricId": "fa37ac83-0160-4f55-baf3-f9f85d69780d"
        }
       }
      },
      {
       "assertType": "DEVICE_CONNECTED_TO_FABRIC",
       "state": "UNLATCHED",
       "deviceConnectedToFabric": {
        "id": {
         "type": "AssertDeviceConnectedToFabricType",
         "device": "02-17-b1-ac-00-01"
        },
        "category": "ASSERT_CATEGORY_FABRIC",
        "assertState": "ASSERT_STATE_TRUE",
        "modifiedAt": "2024-12-19T20:51:06.063689961Z",
        "config": {
         "generationId": "1734641466063136878",
         "latchedAt": "2024-12-19T20:51:06.063136878Z",
         "orgId": "10000000-0000-0000-0000-000000000001",
         "fabricId": "fa37ac83-0160-4f55-baf3-f9f85d69780d"
        }
       }
      },
      {
       "assertType": "DEVICE_RESOURCE_USAGE_BELOW_THRESHOLD",
       "state": "UNLATCHED",
       "deviceResourceUsageBelowThreshold": {
        "id": {
         "type": "AssertDeviceResourceUsageBelowThresholdType",
         "device": "02-17-b1-ac-00-01"
        },
        "category": "ASSERT_CATEGORY_FABRIC",
        "assertState": "ASSERT_STATE_TRUE",
        "modifiedAt": "2024-12-19T20:51:06.063709878Z",
        "config": {
         "generationId": "1734641466063145753",
         "latchedAt": "2024-12-19T20:51:06.063145753Z",
         "cpuThreshold": 80,
         "memoryThreshold": 80,
         "diskThreshold": 80,
         "orgId": "10000000-0000-0000-0000-000000000001",
         "fabricId": "fa37ac83-0160-4f55-baf3-f9f85d69780d"
        },
        "currentSystemStats": {
         "id": {
          "type": "SystemStatsType"
         },
         "MemTotal": "33330368",
         "MemUsed": "25213044",
         "MemFree": "8117324",
         "DiskTotal": "1464271820",
         "DiskUsed": "1059158840",
         "DiskFree": "380861604",
         "collectedAt": "2024-12-19T20:50:57.367224555Z"
        }
       }
      }
     ]
    }
   },
   "configLatchUnlatchAssertionsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "assertions": [
      {
       "assertType": "DEVICE_CONNECTED_TO_CLOUD",
       "state": "UNLATCHED",
       "deviceConnectedToCloud": {
        "id": {
         "type": "AssertDeviceConnectedToCloudType",
         "device": "02-17-b1-ac-00-01"
        },
        "category": "ASSERT_CATEGORY_FABRIC",
        "assertState": "ASSERT_STATE_TRUE",
        "modifiedAt": "2024-12-19T20:51:06.063652086Z",
        "config": {
         "generationId": "1734641466061996045",
         "latchedAt": "2024-12-19T20:51:06.061996045Z",
         "orgId": "10000000-0000-0000-0000-000000000001",
         "fabricId": "fa37ac83-0160-4f55-baf3-f9f85d69780d"
        }
       }
      },
      {
       "assertType": "DEVICE_CONNECTED_TO_FABRIC",
       "state": "UNLATCHED",
       "deviceConnectedToFabric": {
        "id": {
         "type": "AssertDeviceConnectedToFabricType",
         "device": "02-17-b1-ac-00-01"
        },
        "category": "ASSERT_CATEGORY_FABRIC",
        "assertState": "ASSERT_STATE_TRUE",
        "modifiedAt": "2024-12-19T20:51:06.063689961Z",
        "config": {
         "generationId": "1734641466063136878",
         "latchedAt": "2024-12-19T20:51:06.063136878Z",
         "orgId": "10000000-0000-0000-0000-000000000001",
         "fabricId": "fa37ac83-0160-4f55-baf3-f9f85d69780d"
        }
       }
      },
      {
       "assertType": "DEVICE_RESOURCE_USAGE_BELOW_THRESHOLD",
       "state": "UNLATCHED",
       "deviceResourceUsageBelowThreshold": {
        "id": {
         "type": "AssertDeviceResourceUsageBelowThresholdType",
         "device": "02-17-b1-ac-00-01"
        },
        "category": "ASSERT_CATEGORY_FABRIC",
        "assertState": "ASSERT_STATE_TRUE",
        "modifiedAt": "2024-12-19T20:51:06.063709878Z",
        "config": {
         "generationId": "1734641466063145753",
         "latchedAt": "2024-12-19T20:51:06.063145753Z",
         "cpuThreshold": 80,
         "memoryThreshold": 80,
         "diskThreshold": 80,
         "orgId": "10000000-0000-0000-0000-000000000001",
         "fabricId": "fa37ac83-0160-4f55-baf3-f9f85d69780d"
        },
        "currentSystemStats": {
         "id": {
          "type": "SystemStatsType"
         },
         "MemTotal": "33330368",
         "MemUsed": "25213044",
         "MemFree": "8117324",
         "DiskTotal": "1464271820",
         "DiskUsed": "1059158840",
         "DiskFree": "380861604",
         "collectedAt": "2024-12-19T20:50:57.367224555Z"
        }
       }
      }
     ]
    }
   },
   "configNode": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configNotificationSettingsResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configProvisionRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configProvisionResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configPutOrgCertificateRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configPutOrgCertificateResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configResendCodeForEndpointRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configReviewFabricCandidateRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "comments": "Test commit comment"
    }
   },
   "configReviewFabricCandidateResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "fabricId": "example-fabric"
    }
   },
   "configSetFabricConnectionsRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "connections": [
      {
       "local": {
        "portName": "Ethernet1_1",
        "nodeName": "node-leaf0"
       },
       "remote": {
        "portName": "Ethernet1_1",
        "nodeName": "node-spine0"
       }
      },
      {
       "local": {
        "portName": "Ethernet1_1",
        "nodeName": "node-leaf1"
       },
       "remote": {
        "portName": "Ethernet1_8",
        "nodeName": "node-spine0"
       }
      },
      {
       "local": {
        "portName": "Ethernet1_8",
        "nodeName": "node-leaf0"
       },
       "remote": {
        "portName": "Ethernet1_1",
        "nodeName": "node-spine1"
       }
      },
      {
       "local": {
        "portName": "Ethernet1_8",
        "nodeName": "node-leaf1"
       },
       "remote": {
        "portName": "Ethernet1_8",
        "nodeName": "node-spine1"
       }
      }
     ]
    }
   },
   "configSetFabricConnectionsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "connections": [
      {
       "id": "5e694530-40a0-4b27-a88d-2336e351c4d8",
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "local": {
        "portName": "Ethernet1_1",
        "nodeName": "node-leaf0"
       },
       "remote": {
        "portName": "Ethernet1_1",
        "nodeName": "node-spine0"
       }
      },
      {
       "id": "04094927-c00e-42b7-8e75-fd38404e9158",
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "local": {
        "portName": "Ethernet1_1",
        "nodeName": "node-leaf1"
       },
       "remote": {
        "portName": "Ethernet1_8",
        "nodeName": "node-spine0"
       }
      },
      {
       "id": "8fcd5ae2-26d8-45ca-8e2e-10442f5b872c",
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "local": {
        "portName": "Ethernet1_8",
        "nodeName": "node-leaf0"
       },
       "remote": {
        "portName": "Ethernet1_1",
        "nodeName": "node-spine1"
       }
      },
      {
       "id": "06eff3e6-2630-4cd1-8d0f-36de7622bdc6",
       "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
       "local": {
        "portName": "Ethernet1_8",
        "nodeName": "node-leaf1"
       },
       "remote": {
        "portName": "Ethernet1_8",
        "nodeName": "node-spine1"
       }
      }
     ]
    }
   },
   "configSetNotificationSettingsRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configSetPortRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "name": "Ethernet1_19_1",
     "labels": [
      "PORT_ONE_FIVE"
     ],
     "annotations": [
      {
       "name": "port",
       "value": "unused"
      }
     ],
     "enabled": true,
     "roles": [
      "FABRIC_PORT"
     ]
    }
   },
   "configSetPortResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "c8ae152e-79ca-46cf-8be7-2adb3b80f912",
     "name": "Ethernet1_15",
     "labels": [
      "PORT_ONE_FIVE"
     ],
     "annotations": [
      {
       "name": "port",
       "value": "unused"
      }
     ],
     "enabled": true,
     "roles": [
      "UNUSED_PORT"
     ],
     "mtu": 9100
    }
   },
   "configSetPortsRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "ports": [
      {
       "name": "Ethernet1_1",
       "enabled": true,
       "roles": [
        "FABRIC_PORT"
       ]
      },
      {
       "name": "Ethernet1_2",
       "enabled": true,
       "roles": [
        "FABRIC_PORT"
       ]
      },
      {
       "name": "Ethernet1_3",
       "enabled": true,
       "roles": [
        "FABRIC_PORT"
       ]
      },
      {
       "name": "Ethernet1_4",
       "enabled": true,
       "roles": [
        "FABRIC_PORT"
       ]
      },
      {
       "name": "Ethernet1_5",
       "enabled": true,
       "roles": [
        "FABRIC_PORT"
       ]
      },
      {
       "name": "Ethernet1_6",
       "enabled": true,
       "roles": [
        "FABRIC_PORT"
       ]
      },
      {
       "name": "Ethernet1_7",
       "enabled": true,
       "roles": [
        "FABRIC_PORT"
       ]
      },
      {
       "name": "Ethernet1_8",
       "enabled": true,
       "roles": [
        "FABRIC_PORT"
       ]
      },
      {
       "name": "Ethernet1_19",
       "enabled": true,
       "roles": [
        "FABRIC_PORT"
       ]
      },
      {
       "name": "Ethernet1_22",
       "enabled": true,
       "roles": [
        "FABRIC_PORT"
       ]
      }
     ]
    }
   },
   "configSetPortsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "nodeId": "node-leaf1",
     "ports": [
      {
       "id": "e952d32e-3e27-439f-9c2a-160acb347625",
       "name": "Ethernet1_5",
       "nodeId": "77a14049-ade1-4da2-8204-00ee7db4b9dc",
       "enabled": true,
       "roles": [
        "HOST_PORT"
       ]
      },
      {
       "id": "a357480b-aae3-4c46-8e4f-8bc07520080e",
       "name": "Ethernet1_6",
       "nodeId": "77a14049-ade1-4da2-8204-00ee7db4b9dc",
       "enabled": true,
       "roles": [
        "HOST_PORT"
       ]
      },
      {
       "id": "de87b0dd-7bdd-41f1-a67b-0b9849d1577d",
       "name": "Ethernet1_7",
       "nodeId": "77a14049-ade1-4da2-8204-00ee7db4b9dc",
       "enabled": true,
       "roles": [
        "HOST_PORT"
       ]
      },
      {
       "id": "b3a585ed-511d-47d2-af20-7ada742538a4",
       "name": "Ethernet1_8",
       "nodeId": "77a14049-ade1-4da2-8204-00ee7db4b9dc",
       "enabled": true,
       "roles": [
        "HOST_PORT"
       ]
      }
     ]
    }
   },
   "configTenantsObjectsResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configUpdateEndpointResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configUpdateEndspointRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configUpdateFabricBgpPolicyRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "name": "BgpPolicy-exampleOne",
     "description": "BGP Policy",
     "labels": [
      "BGP_POLICY_LABEL1",
      "BGP_POLICY_LABEL2"
     ],
     "annotations": [
      {
       "name": "position",
       "value": "LF001",
       "dataType": "STRING"
      }
     ],
     "enabled": true,
     "export": true,
     "rules": [
      {
       "id": 1,
       "description": "Rule 1",
       "setGroup": {
        "origin": "ROUTE_ORIGIN_IBGP",
        "community": "2:2",
        "ipv6NextHop": "2001:db8::1",
        "asPath": [
         1588890534,
         3842995213,
         1224342502,
         861785405
        ]
       },
       "matchGroup": {
        "ipv6Prefixes": [
         {
          "prefix": "2001:1111:2222:3333::/64",
          "description": "IPV6 Prefix",
          "match": "MATCH_GE",
          "accept": true
         }
        ],
        "communities": [
         {
          "community": "1:1",
          "description": "BGP Community",
          "accept": true
         }
        ]
       }
      },
      {
       "id": 2,
       "description": "Rule 2",
       "accept": true,
       "setGroup": {
        "ipv4NextHop": "192.1.1.1"
       },
       "matchGroup": {
        "ipv4Prefixes": [
         {
          "prefix": "192.168.71.0/24",
          "description": "IPV4 Prefix",
          "match": "MATCH_EQ",
          "accept": true
         }
        ]
       }
      }
     ]
    }
   },
   "configUpdateFabricBgpPolicyResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "f755c04e-38f0-4b3e-b8a4-bd25195e1ef4",
     "name": "BgpPolicy-exampleOne",
     "description": "BGP Policy",
     "labels": [
      "BGP_POLICY_LABEL1",
      "BGP_POLICY_LABEL2"
     ],
     "annotations": [
      {
       "name": "position",
       "value": "LF001",
       "dataType": "STRING"
      }
     ],
     "enabled": true,
     "export": true,
     "fabricId": "f647935f-9b73-453a-8706-2d06d9ffc76a",
     "rules": [
      {
       "id": 1,
       "description": "Rule 1",
       "setGroup": {
        "origin": "ROUTE_ORIGIN_IBGP",
        "community": "2:2",
        "ipv6NextHop": "2001:db8::1",
        "asPath": [
         1588890534,
         3842995213,
         1224342502,
         861785405
        ]
       },
       "matchGroup": {
        "ipv6Prefixes": [
         {
          "prefix": "2001:1111:2222:3333::/64",
          "description": "IPV6 Prefix",
          "match": "MATCH_GE",
          "accept": true
         }
        ],
        "communities": [
         {
          "community": "1:1",
          "description": "BGP Community",
          "accept": true
         }
        ]
       }
      },
      {
       "id": 2,
       "description": "Rule 2",
       "accept": true,
       "setGroup": {
        "ipv4NextHop": "192.1.1.1"
       },
       "matchGroup": {
        "ipv4Prefixes": [
         {
          "prefix": "192.168.71.0/24",
          "description": "IPV4 Prefix",
          "match": "MATCH_EQ",
          "accept": true
         }
        ]
       }
      }
     ]
    }
   },
   "configUpdateFabricNodeRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configUpdateFabricRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "name": "example-fabric",
     "description": "Updated description of example-fabric.",
     "location": "DC-1000",
     "address": "725 Alder Drive",
     "city": "Milpitas",
     "country": "US",
     "topology": "SPINE_LEAF"
    }
   },
   "configUpdateFabricResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
     "name": "example-fabric",
     "description": "Updated description of example-fabric.",
     "location": "DC-1000",
     "address": "725 Alder Drive",
     "city": "Milpitas",
     "country": "US"
    }
   },
   "configUpdateFabricSoftwareModeRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configUpdateFabricSoftwareNodeImagesRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configUpdateFabricSoftwareRunningImageRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configUpdateFabricSoftwareTargetImageRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configUpdateFabricStaticRouteRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "name": "Vrf-exampleOne-SR1",
     "enabled": true,
     "routes": [
      {
       "prefix": "10.10.10.0/24",
       "preference": 10,
       "discard": true
      },
      {
       "prefix": "11.10.10.0/24",
       "preference": 10,
       "discard": true
      },
      {
       "prefix": "12.10.10.0/24",
       "preference": 12,
       "discard": true
      }
     ]
    }
   },
   "configUpdateFabricStaticRouteResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "b7603506-0fe9-4c15-b80d-d73d9e2bdd5a",
     "name": "Vrf-exampleOne-SR1",
     "enabled": true,
     "fabricId": "example-fabric",
     "routes": [
      {
       "prefix": "10.10.10.0/24",
       "preference": 10,
       "discard": true
      },
      {
       "prefix": "11.10.10.0/24",
       "preference": 10,
       "discard": true
      },
      {
       "prefix": "12.10.10.0/24",
       "preference": 12,
       "discard": true
      }
     ],
     "vrfId": "Vrf-exampleOne"
    }
   },
   "configUpdateFabricStpRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "enabled": true,
     "stpMac": "00-00-00-00-00-12",
     "priority": 28672
    }
   },
   "configUpdateFabricStpResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "fabricId": "0e845a9a-1c4c-4d83-9cd1-eba9da235ae5",
     "enabled": true,
     "stpMac": "00-00-00-00-00-12",
     "priority": 28672
    }
   },
   "configUpdateFabricVniRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "name": "example-fabric-vni2",
     "description": "These are some notes on my VNI",
     "labels": [
      "FABRIC_VNI_TWO_1"
     ],
     "enabled": true,
     "vni": 1500000,
     "svis": [
      {
       "ipv4Addresses": [
        "172.222.40.1/24"
       ],
       "enabled": true
      }
     ]
    }
   },
   "configUpdateFabricVniResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "f3f3eed9-2f6d-498c-afdd-3b9316d6f506",
     "name": "example-fabric-vni2",
     "description": "These are some notes on my VNI",
     "labels": [
      "FABRIC_VNI_TWO_1"
     ],
     "enabled": true,
     "fabricId": "9f979318-d0b1-44d1-be40-b7d7ac6ecbfa",
     "vni": 1500000,
     "svis": [
      {
       "ipv4Addresses": [
        "172.222.40.1/24"
       ],
       "enabled": true
      }
     ]
    }
   },
   "configUpdateFabricVrfRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "name": "Vrf-examplevrf1",
     "annotations": [
      {
       "name": "position",
       "value": "1234"
      }
     ],
     "enabled": true,
     "isDefault": true
    }
   },
   "configUpdateFabricVrfResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "18a4001d-a7a1-4734-80a4-6b8ccd9f544b",
     "name": "Vrf-examplevrf1",
     "annotations": [
      {
       "name": "position",
       "value": "1234"
      }
     ],
     "enabled": true,
     "fabricId": "example-fabric",
     "vni": 12001003
    }
   },
   "configUpdateManagementPortRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "name": "eth0",
     "description": "Management Ethernet Port Configuration",
     "ipv4Address": "10.10.10.1/24",
     "ipv4Gateway": "10.10.10.254",
     "ipv6Address": "2a02:1243:5687:0:9c09:2c7a:7c78:9ffc/33",
     "ipv6Gateway": "2a02:1243:5687:0:8d91:ba6b:b24d:9b41",
     "dnsAddresses": [
      "9.9.9.9/32",
      "8.8.8.8"
     ],
     "proxyAddress": "https://10.10.1.10:8080",
     "proxyUsername": "adminUser",
     "proxyPassword": "ThisIsMyPassword",
     "enabled": true,
     "ipv4ConfigType": "CONFIG_TYPE_STATIC",
     "ipv6ConfigType": "CONFIG_TYPE_DHCP",
     "cloudUrls": [
      "https://a.example.com",
      "https://b.example.com"
     ],
     "configOrigin": "CONFIG_ORIGIN_CLOUD",
     "setProxyPassword": true,
     "noProxy": [
      "10.0.0.5",
      "2001:db8:3333:4444:5555:6666:7777:8888/8",
      "68.0.0.0/8",
      "72.0.0.0/8",
      "172.0.0.1/8",
      ".cisco.com",
      ".local"
     ]
    }
   },
   "configUpdateManagementPortResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "da141c97-9402-4593-9f99-7b74b7d9964e",
     "nodeId": "eb48300a-ccc0-42f3-91a0-068dbbc2be2f",
     "name": "eth0",
     "description": "Management Ethernet Port Configuration",
     "ipv4Address": "10.10.10.1/24",
     "ipv4Gateway": "10.10.10.254",
     "ipv6Address": "2a02:1243:5687:0:9c09:2c7a:7c78:9ffc/33",
     "ipv6Gateway": "2a02:1243:5687:0:8d91:ba6b:b24d:9b41",
     "dnsAddresses": [
      "9.9.9.9/32",
      "8.8.8.8"
     ],
     "proxyAddress": "https://10.10.1.10:8080",
     "proxyUsername": "adminUser",
     "proxyCredentialsId": "7828d0b5-209f-4170-972d-94e3975fde97",
     "proxyPassword": "******",
     "enabled": true,
     "ipv4ConfigType": "CONFIG_TYPE_STATIC",
     "ipv6ConfigType": "CONFIG_TYPE_DHCP",
     "cloudUrls": [
      "https://a.example.com",
      "https://b.example.com"
     ],
     "configOrigin": "CONFIG_ORIGIN_CLOUD",
     "metadata": {
      "revisionId": "2",
      "createdBy": "cisco/hyperfabric-example@cisco.com",
      "createdAt": "2024-09-07T22:16:21.209594Z",
      "modifiedBy": "cisco/hyperfabric-example@cisco.com",
      "modifiedAt": "2024-09-07T22:17:19.031961Z"
     },
     "noProxy": [
      "10.0.0.5",
      "2001:db8:3333:4444:5555:6666:7777:8888/8",
      "68.0.0.0/8",
      "72.0.0.0/8",
      "172.0.0.1/8",
      ".cisco.com",
      ".local"
     ]
    }
   },
   "configUpdateNodeLoopbackRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "name": "Loopback10",
     "description": "Node spine1",
     "labels": [
      "LOOPBACK_LABEL1"
     ],
     "annotations": [
      {
       "name": "position",
       "value": "LF001",
       "dataType": "STRING"
      }
     ],
     "enabled": true,
     "ipv4Address": "192.168.100.1",
     "ipv6Address": "2001:db8::1"
    }
   },
   "configUpdateNodeLoopbackResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "b8cf417a-7cf5-448e-a705-d4bd071e118b",
     "name": "Loopback10",
     "description": "Node spine1",
     "labels": [
      "LOOPBACK_LABEL1"
     ],
     "annotations": [
      {
       "name": "position",
       "value": "LF001",
       "dataType": "STRING"
      }
     ],
     "enabled": true,
     "fabricId": "10c2941c-7c07-4c14-9cbd-63033955a0e5",
     "nodeId": "2b1ed626-c6e9-4bd8-a779-7fcdf9817b59",
     "ipv4Address": "192.168.100.1",
     "ipv6Address": "2001:db8::1"
    }
   },
   "configUpdateNodePortBreakoutRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configUpdateNodePortBreakoutResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "configUpdateNodeSubInterfaceRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "name": "Ethernet1_5.10",
     "description": "Node node-spine1",
     "labels": [
      "SUBINTERFACE_LABEL1"
     ],
     "annotations": [
      {
       "name": "position",
       "value": "LF001",
       "dataType": "STRING"
      }
     ],
     "enabled": true,
     "vlanId": 10,
     "vrfId": "7d7056df-fa02-495e-906f-0b2710af558d",
     "ipv4Addresses": [
      "192.168.100.1/24"
     ],
     "ipv6Addresses": [
      "2001:db8::1/64"
     ]
    }
   },
   "configUpdateNodeSubInterfaceResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "0d6dd970-c90b-46d6-97ed-4b19df067ee6",
     "name": "Ethernet1_5.10",
     "description": "Node node-spine1",
     "labels": [
      "SUBINTERFACE_LABEL1"
     ],
     "annotations": [
      {
       "name": "position",
       "value": "LF001",
       "dataType": "STRING"
      }
     ],
     "enabled": true,
     "fabricId": "80ca6227-5d6e-483b-84a4-ddc0a210e585",
     "nodeId": "fad39c25-18e0-49ba-92ff-160b98e7936d",
     "vlanId": 10,
     "vrfId": "7d7056df-fa02-495e-906f-0b2710af558d",
     "ipv4Addresses": [
      "192.168.100.1/24"
     ],
     "ipv6Addresses": [
      "2001:db8::1/64"
     ]
    }
   },
   "configUpdatePortChannelRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "name": "PortChannel1",
     "description": "Leaf port channels - two nodes",
     "labels": [
      "LEAF_CHANNELS",
      "LEAF_CHANNELS_FOR_TWO_NODES"
     ],
     "annotations": [
      {
       "name": "portChannelOne",
       "value": "port-channel-one",
       "dataType": "STRING"
      }
     ],
     "enabled": true,
     "roles": [
      "HOST_PORT"
     ],
     "members": [
      {
       "portName": "Ethernet1_7",
       "nodeName": "node-leaf0"
      },
      {
       "portName": "Ethernet1_8",
       "nodeName": "node-leaf0"
      }
     ],
     "lacpMode": "LACP_ACTIVE",
     "maxSpeed": "40G"
    }
   },
   "configUpdatePortChannelResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "id": "2a09005d-7f9d-4d83-b929-d48d5bb77a8f",
     "name": "PortChannel1",
     "description": "Leaf port channels - two nodes",
     "labels": [
      "LEAF_CHANNELS",
      "LEAF_CHANNELS_FOR_TWO_NODES"
     ],
     "annotations": [
      {
       "name": "portChannelOne",
       "value": "port-channel-one",
       "dataType": "STRING"
      }
     ],
     "enabled": true,
     "fabricId": "example-fabric",
     "roles": [
      "HOST_PORT"
     ],
     "members": [
      {
       "portName": "Ethernet1_7",
       "nodeName": "node-leaf0"
      },
      {
       "portName": "Ethernet1_8",
       "nodeName": "node-leaf0"
      }
     ],
     "lacpMode": "LACP_ACTIVE",
     "maxSpeed": "40G"
    }
   },
   "configVerifyEndpointRequest": {
    "description": "An example request payload for an API call.",
    "summary": "Example request",
    "value": {
     "code": "994229"
    }
   },
   "configVerifyEndpointResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "endpointId": "21bf7f1f-d44c-4539-99b1-2e18c1ef712e",
     "name": "email-1",
     "description": "An email notification endpoint",
     "enabled": true,
     "verified": true,
     "type": "EMAIL",
     "email": {
      "address": "hyperfabric-example@cisco.com"
     }
    }
   },
   "miscGetAllFans": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "fans": [
      {
       "deviceId": "02-17-3a-11-01-01",
       "speed": 23,
       "name": "fantray1.fan1",
       "status": "OK",
       "ledStatus": "GREEN",
       "drawer": "fantray1",
       "collectedAt": "2025-05-30T21:42:22.685654501Z",
       "direction": "INTAKE",
       "serial": "DCH2743R42P",
       "model": "FAN-1RU-PI-V2"
      },
      {
       "deviceId": "02-17-3a-11-01-01",
       "speed": 25,
       "name": "fantray1.fan2",
       "status": "OK",
       "ledStatus": "GREEN",
       "drawer": "fantray1",
       "collectedAt": "2025-05-30T21:42:22.685654501Z",
       "direction": "INTAKE",
       "serial": "DCH2743R42P",
       "model": "FAN-1RU-PI-V2"
      },
      {
       "deviceId": "02-17-3a-11-01-01",
       "speed": 45,
       "name": "fantray2.fan1",
       "status": "OK",
       "ledStatus": "GREEN",
       "drawer": "fantray2",
       "collectedAt": "2025-05-30T21:42:22.685654501Z",
       "direction": "INTAKE",
       "serial": "DCH2743R42P",
       "model": "FAN-1RU-PI-V2"
      }
     ]
    }
   },
   "miscGetAllPluggables": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "pluggables": [
      {
       "deviceId": "02-17-3a-11-01-01",
       "cableLength": 30,
       "cableType": "Length OM3(10m)",
       "connector": "LC",
       "domCapability": "N/A",
       "encoding": "64B/66B",
       "extIdentifier": "GBIC/SFP defined by two-wire int",
       "isReplaceable": true,
       "manufacturer": "CISCO-SUMITOMO",
       "model": "SPP5300SR-C5",
       "nominalBitRate": 103,
       "serial": "SPC171503GG",
       "type": "SFP/SFP+/SFP28",
       "vendorDate": "2013-04-10T00:00:00Z",
       "vendorOui": "00-00-5f",
       "vendorRev": "A",
       "transceiverModule": "FIBER",
       "pid": "UNKNOWN_PID",
       "interfaceName": "Ethernet1_1",
       "neighborType": "DRAKE_FABRIC",
       "collectedAt": "2025-05-30T21:43:55.603630795Z",
       "lot": "Lot-1G"
      },
      {
       "deviceId": "02-17-3a-11-01-01",
       "cableLength": 30,
       "cableType": "Length OM3(10m)",
       "connector": "LC",
       "domCapability": "N/A",
       "encoding": "64B/66B",
       "extIdentifier": "GBIC/SFP defined by two-wire int",
       "isReplaceable": true,
       "manufacturer": "CISCO-SUMITOMO",
       "model": "SP0SR-C5",
       "nominalBitRate": 103,
       "serial": "SPC03GG",
       "type": "SFP",
       "vendorDate": "2024-04-10T00:00:00Z",
       "vendorOui": "00-00-5f",
       "vendorRev": "A",
       "transceiverModule": "FIBER",
       "pid": "UNKNOWN_PID",
       "interfaceName": "Ethernet1_2",
       "neighborType": "DRAKE_FABRIC",
       "collectedAt": "2025-05-30T21:43:55.603630795Z",
       "lot": "Lot-1G"
      },
      {
       "deviceId": "02-17-7e-e7-00-03",
       "cableLength": 30,
       "cableType": "Length OM3(10m)",
       "connector": "LC",
       "domCapability": "N/A",
       "encoding": "64B/66B",
       "extIdentifier": "GBIC/SFP defined by two-wire int",
       "isReplaceable": true,
       "manufacturer": "CISCO-SUMITOMO",
       "model": "SPP5300SR-C5",
       "nominalBitRate": 103,
       "serial": "SPC171503GG",
       "type": "SFP/SFP+/SFP28",
       "vendorDate": "2013-04-10T00:00:00Z",
       "vendorOui": "00-00-5f",
       "vendorRev": "A",
       "transceiverModule": "FIBER",
       "pid": "UNKNOWN_PID",
       "interfaceName": "Ethernet1_1",
       "neighborType": "DRAKE_FABRIC",
       "collectedAt": "2025-05-30T21:43:24.930518169Z",
       "lot": "Lot-1G"
      }
     ]
    }
   },
   "miscGetAllPsus": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "psus": [
      {
       "deviceId": "02-17-3a-11-01-01",
       "watts": 282,
       "status": "OK",
       "ledStatus": "GREEN",
       "model": "PSU2KW-ACPI",
       "serial": "POG2738K08L",
       "voltage": 12.037,
       "current": 23.5
      },
      {
       "deviceId": "02-17-3a-11-01-01",
       "watts": 320,
       "status": "OK",
       "ledStatus": "GREEN",
       "model": "PSU2KW-ACPI",
       "serial": "POG2738K08L",
       "voltage": 12.037,
       "current": 23.5
      },
      {
       "deviceId": "02-17-7e-e7-00-03",
       "watts": 282,
       "status": "OK",
       "ledStatus": "GREEN",
       "model": "PSU2KW-ACPI",
       "serial": "POG2738K08L",
       "voltage": 12.037,
       "current": 23.5
      }
     ]
    }
   },
   "miscGetCandidateInfoWithPasscodeRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "miscGetCandidateInfoWithPasscodeResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "miscGetDevicesForOrg": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "devices": [
      {
       "deviceId": "02-17-26-ec-01-02",
       "nodeId": "ea456ac1-002a-4234-8f1b-621cd6394daf",
       "serialNumber": "TFAB32377850",
       "modelName": "HF6100-32D",
       "fabricId": "2e91560c-c772-4a59-b2c5-55ec07a0aa6a",
       "roles": [
        "LEAF"
       ],
       "name": "node-leaf2",
       "nodeType": "NODE_SWITCH",
       "fabricName": "example-fabric"
      },
      {
       "deviceId": "02-17-58-16-01-00",
       "nodeId": "bbcab819-4cff-4a62-b3ea-5208b1a5c0b0",
       "serialNumber": "TFAB66177940",
       "modelName": "HF6100-32D",
       "fabricId": "2e91560c-c772-4a59-b2c5-55ec07a0aa6a",
       "roles": [
        "LEAF"
       ],
       "name": "node-leaf0",
       "nodeType": "NODE_SWITCH",
       "fabricName": "example-fabric"
      },
      {
       "deviceId": "02-17-99-15-00-01",
       "nodeId": "2d5993b1-ce8e-4c8e-9e94-6096c9a9e30c",
       "serialNumber": "TFAB48637318",
       "modelName": "HF6100-32D",
       "fabricId": "2e91560c-c772-4a59-b2c5-55ec07a0aa6a",
       "roles": [
        "SPINE"
       ],
       "name": "node-spine1",
       "nodeType": "NODE_SWITCH",
       "fabricName": "example-fabric"
      },
      {
       "deviceId": "02-17-a6-c8-00-00",
       "nodeId": "06cb5dd2-53b2-4769-a29e-5d7348161d07",
       "serialNumber": "TFAB91627504",
       "modelName": "HF6100-32D",
       "fabricId": "2e91560c-c772-4a59-b2c5-55ec07a0aa6a",
       "roles": [
        "SPINE"
       ],
       "name": "node-spine0",
       "nodeType": "NODE_SWITCH",
       "fabricName": "example-fabric"
      },
      {
       "deviceId": "02-17-ab-dc-01-03",
       "nodeId": "17e5e934-8a1e-4953-88d9-3009a5443ddb",
       "serialNumber": "TFAB20728764",
       "modelName": "HF6100-32D",
       "fabricId": "2e91560c-c772-4a59-b2c5-55ec07a0aa6a",
       "roles": [
        "LEAF"
       ],
       "name": "node-leaf3",
       "nodeType": "NODE_SWITCH",
       "fabricName": "example-fabric"
      },
      {
       "deviceId": "02-17-f3-93-01-01",
       "nodeId": "eb7e67e7-72bf-47af-8b87-c109f647c455",
       "serialNumber": "TFAB42283379",
       "modelName": "HF6100-32D",
       "fabricId": "2e91560c-c772-4a59-b2c5-55ec07a0aa6a",
       "roles": [
        "LEAF"
       ],
       "name": "node-leaf1",
       "nodeType": "NODE_SWITCH",
       "fabricName": "example-fabric"
      }
     ]
    }
   },
   "miscGetDiscoveredDevicesResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "devices": [
      {
       "deviceId": "02-17-83-54-01-01",
       "deviceName": "leaf1",
       "serialNumber": "TFAB82622973",
       "modelName": "HF6100-32D",
       "connectedDevices": [
        {
         "deviceId": "02-17-24-1b-00-00",
         "nodeId": "ae1829b6-29f9-4c53-9e2a-a89db0f8465d",
         "nodeName": "spine0",
         "fabricId": "d053036d-0519-4755-9a88-1fdf0c76c851",
         "fabricName": "test",
         "portName": "Ethernet1_2"
        },
        {
         "deviceId": "02-17-64-3f-00-01",
         "nodeId": "00000000-0000-0000-0000-000000000000",
         "nodeName": "spine1",
         "fabricId": "cdf42df7-4ebd-4342-abd5-6d460931cf9c",
         "fabricName": "PLFAB-02",
         "portName": "Ethernet1_2"
        }
       ]
      },
      {
       "deviceId": "02-17-c3-e1-01-00",
       "deviceName": "leaf0",
       "serialNumber": "TFAB85981122",
       "modelName": "HF6100-32D",
       "connectedDevices": [
        {
         "deviceId": "02-17-24-1b-00-00",
         "nodeId": "ae1829b6-29f9-4c53-9e2a-a89db0f8465d",
         "nodeName": "spine0",
         "fabricId": "d053036d-0519-4755-9a88-1fdf0c76c851",
         "fabricName": "test",
         "portName": "Ethernet1_1"
        },
        {
         "deviceId": "02-17-64-3f-00-01",
         "nodeId": "00000000-0000-0000-0000-000000000000",
         "nodeName": "spine1",
         "fabricId": "cdf42df7-4ebd-4342-abd5-6d460931cf9c",
         "fabricName": "PLFAB-02",
         "portName": "Ethernet1_1"
        }
       ]
      },
      {
       "deviceId": "02-17-5c-c0-01-03",
       "deviceName": "leaf3",
       "serialNumber": "TFAB28137493",
       "modelName": "HF6100-32D",
       "connectedDevices": [
        {
         "deviceId": "02-17-24-1b-00-00",
         "nodeId": "ae1829b6-29f9-4c53-9e2a-a89db0f8465d",
         "nodeName": "spine0",
         "fabricId": "d053036d-0519-4755-9a88-1fdf0c76c851",
         "fabricName": "test",
         "portName": "Ethernet1_4"
        },
        {
         "deviceId": "02-17-64-3f-00-01",
         "nodeId": "00000000-0000-0000-0000-000000000000",
         "nodeName": "spine1",
         "fabricId": "cdf42df7-4ebd-4342-abd5-6d460931cf9c",
         "fabricName": "PLFAB-02",
         "portName": "Ethernet1_4"
        }
       ]
      },
      {
       "deviceId": "02-17-1f-0e-01-02",
       "deviceName": "leaf2",
       "serialNumber": "TFAB65209730",
       "modelName": "HF6100-32D",
       "connectedDevices": [
        {
         "deviceId": "02-17-24-1b-00-00",
         "nodeId": "ae1829b6-29f9-4c53-9e2a-a89db0f8465d",
         "nodeName": "spine0",
         "fabricId": "d053036d-0519-4755-9a88-1fdf0c76c851",
         "fabricName": "test",
         "portName": "Ethernet1_3"
        },
        {
         "deviceId": "02-17-64-3f-00-01",
         "nodeId": "00000000-0000-0000-0000-000000000000",
         "nodeName": "spine1",
         "fabricId": "cdf42df7-4ebd-4342-abd5-6d460931cf9c",
         "fabricName": "PLFAB-02",
         "portName": "Ethernet1_3"
        }
       ]
      }
     ]
    }
   },
   "miscGetImageTargetsResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "miscGetInventoryCounts": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "fanCounts": [
      {
       "name": "FAN-1RU-PI-V2",
       "count": 48
      }
     ],
     "psuCounts": [
      {
       "name": "PSU2KW-ACPI",
       "count": 16
      }
     ],
     "pluggableCounts": [
      {
       "name": "SPP5300SR-C5",
       "count": 8
      },
      {
       "name": "SP0SR-C5",
       "count": 8
      }
     ]
    }
   },
   "miscGetInvitationsResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "miscGetLinkedAccountsResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "miscSetLinkedAccountRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "miscSetLinkedAccountResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "miscUpdateLinkedAccountRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "miscUpdateLinkedAccountResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "modelsCredentials": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "modelsFabricSoftwareConfig": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "modelsNotificationSettings": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "modelsVlanMember": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "readerAssertCounterReportResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "readerAssertHistoryApiRecordResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "readerHistoryResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "refpointsCreateRefPointRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "refpointsDiffPart": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "refpointsRefPoint": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "refpointsRefPointByFabricRequest": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "refpointsRefPointList": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "routingGetUserContextsResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "routingGetUserPreferencesResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "provider": "CISCO",
     "timezone": "America/Los_Angeles",
     "theme": "DARK"
    }
   },
   "stateGetDeviceAssertionsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "assertions": [
      {
       "assertType": "DEVICE_CONNECTED_TO_CLOUD",
       "state": "LATCHED",
       "deviceConnectedToCloud": {
        "id": {
         "type": "AssertDeviceConnectedToCloudType",
         "device": "02-17-1b-41-01-00"
        },
        "category": "ASSERT_CATEGORY_FABRIC",
        "assertState": "ASSERT_STATE_TRUE",
        "modifiedAt": "2024-12-19T19:36:12.818070501Z",
        "config": {
         "latchedAt": "2024-12-19T18:22:16.586403259Z",
         "orgId": "10000000-0000-0000-0000-000000000001",
         "fabricId": "fa37ac83-0160-4f55-baf3-f9f85d69780d"
        }
       }
      },
      {
       "assertType": "DEVICE_CONNECTED_TO_FABRIC",
       "state": "LATCHED",
       "deviceConnectedToFabric": {
        "id": {
         "type": "AssertDeviceConnectedToFabricType",
         "device": "02-17-1b-41-01-00"
        },
        "category": "ASSERT_CATEGORY_FABRIC",
        "assertState": "ASSERT_STATE_TRUE",
        "modifiedAt": "2024-12-19T19:36:15.565885127Z",
        "config": {
         "latchedAt": "2024-12-19T18:22:16.212425509Z",
         "orgId": "10000000-0000-0000-0000-000000000001",
         "fabricId": "fa37ac83-0160-4f55-baf3-f9f85d69780d"
        }
       }
      },
      {
       "assertType": "DEVICE_RESOURCE_USAGE_BELOW_THRESHOLD",
       "state": "UNLATCHED",
       "deviceResourceUsageBelowThreshold": {
        "id": {
         "type": "AssertDeviceResourceUsageBelowThresholdType",
         "device": "02-17-1b-41-01-00"
        },
        "category": "ASSERT_CATEGORY_FABRIC",
        "assertState": "ASSERT_STATE_TRUE",
        "modifiedAt": "2024-12-19T19:36:15.566205419Z",
        "config": {
         "cpuThreshold": 80,
         "memoryThreshold": 80,
         "diskThreshold": 80,
         "orgId": "10000000-0000-0000-0000-000000000001",
         "fabricId": "fa37ac83-0160-4f55-baf3-f9f85d69780d"
        },
        "currentSystemStats": {
         "id": {
          "type": "SystemStatsType"
         },
         "MemTotal": "33330368",
         "MemUsed": "21012324",
         "MemFree": "12318044",
         "DiskTotal": "1464271820",
         "DiskUsed": "1064477256",
         "DiskFree": "375543188",
         "collectedAt": "2024-12-19T19:36:57.001849708Z"
        }
       }
      }
     ]
    }
   },
   "stateGetDeviceCounters": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "counters": [
      {
       "port": {
        "id": {
         "type": "PortCountersType",
         "device": "02-17-83-27-00-01",
         "lineCard": 1,
         "port": 1,
         "portCounters": 1
        },
        "in-octets": "1180237",
        "in-unicast-pkts": "6778",
        "out-octets": "1174904",
        "out-unicast-pkts": "6704",
        "in-bps": 25489.186,
        "out-bps": 24741.951,
        "in-unicast-pps": 17.2008,
        "out-unicast-pps": 16.800781,
        "last-clear": "1970-01-01T00:00:00Z",
        "collected-at": "2024-09-10T20:20:54.025024085Z"
       }
      },
      {
       "port": {
        "id": {
         "type": "PortCountersType",
         "device": "02-17-83-27-00-01",
         "lineCard": 1,
         "port": 2,
         "portCounters": 1
        },
        "in-octets": "1580334",
        "in-unicast-pkts": "11547",
        "out-octets": "1573810",
        "out-unicast-pkts": "11453",
        "in-bps": 26618.838,
        "out-bps": 26847.65,
        "in-unicast-pps": 23.401089,
        "out-unicast-pps": 23.601099,
        "last-clear": "1970-01-01T00:00:00Z",
        "collected-at": "2024-09-10T20:20:54.025024085Z"
       }
      },
      {
       "port": {
        "id": {
         "type": "PortCountersType",
         "device": "02-17-83-27-00-01",
         "lineCard": 1,
         "port": 3,
         "portCounters": 1
        },
        "in-octets": "1442493",
        "in-unicast-pkts": "9924",
        "out-octets": "1442937",
        "out-unicast-pkts": "9919",
        "in-bps": 23685.902,
        "out-bps": 23957.914,
        "in-unicast-pps": 19.400904,
        "out-unicast-pps": 19.600912,
        "last-clear": "1970-01-01T00:00:00Z",
        "collected-at": "2024-09-10T20:20:54.025024085Z"
       }
      },
      {
       "port": {
        "id": {
         "type": "PortCountersType",
         "device": "02-17-83-27-00-01",
         "lineCard": 1,
         "port": 4,
         "portCounters": 1
        },
        "in-octets": "1506006",
        "in-unicast-pkts": "10438",
        "out-octets": "1501034",
        "out-unicast-pkts": "10399",
        "in-bps": 19557.71,
        "out-bps": 20053.732,
        "in-unicast-pps": 17.000792,
        "out-unicast-pps": 17.600819,
        "last-clear": "1970-01-01T00:00:00Z",
        "collected-at": "2024-09-10T20:20:54.025024085Z"
       }
      },
      {
       "port": {
        "id": {
         "type": "PortCountersType",
         "device": "02-17-83-27-00-01",
         "lineCard": 1,
         "port": 5,
         "portCounters": 1
        },
        "out-octets": "6217",
        "out-unicast-pkts": "27",
        "last-clear": "1970-01-01T00:00:00Z",
        "collected-at": "2024-09-10T20:20:54.025024085Z"
       }
      },
      {
       "port": {
        "id": {
         "type": "PortCountersType",
         "device": "02-17-83-27-00-01",
         "lineCard": 1,
         "port": 6,
         "portCounters": 1
        },
        "out-octets": "6217",
        "out-unicast-pkts": "27",
        "last-clear": "1970-01-01T00:00:00Z",
        "collected-at": "2024-09-10T20:20:54.025024085Z"
       }
      }
     ]
    }
   },
   "stateGetDeviceManagementPortsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "ports": [
      {
       "name": "eth0",
       "ipv4Address": "10.10.0.0/16",
       "ipv4Gateway": "10.10.10.1",
       "ipv6Address": "2a02:1243:5687:0:9c09:2c7a:7c78:9ffc/33",
       "ipv6Gateway": "10.10.10.1",
       "dnsAddresses": [
        "9.9.9.9",
        "example.com",
        "8.8.8.8"
       ],
       "proxyAddress": "https://localhost:1234",
       "proxyUsername": "hyperfabric-example@cisco.com",
       "ipv4ConfigType": "CONFIG_TYPE_STATIC",
       "ipv6ConfigType": "CONFIG_TYPE_STATIC",
       "cloudUrls": [
        "https://localhost:1234",
        "https://localhost:4321"
       ],
       "noProxy": [
        "10.0.0.0/8"
       ]
      }
     ]
    }
   },
   "stateGetDevicePortAssertionsResponse": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "assertions": [
      {
       "assertType": "PORT_LINK_UP",
       "state": "LATCHED",
       "portLinkUp": {
        "id": {
         "type": "AssertPortLinkUpType",
         "device": "02-17-1b-41-01-00",
         "lineCard": 1,
         "port": 1
        },
        "category": "ASSERT_CATEGORY_FABRIC",
        "assertState": "ASSERT_STATE_TRUE",
        "modifiedAt": "2024-12-19T19:36:15.562276294Z",
        "config": {
         "latchedAt": "2024-12-19T18:22:16.194773967Z",
         "port": {
          "portName": "Ethernet1_1",
          "portIndex": 1,
          "portRole": "FABRIC_PORT",
          "adminState": "ENABLED",
          "mtu": 9216,
          "deviceId": "02-17-1b-41-01-00",
          "targetDeviceId": "02-17-f1-01-00-00",
          "targetPortName": "Ethernet1_1",
          "modifiedAt": "2024-12-19T19:30:51.482100345Z"
         },
         "orgId": "10000000-0000-0000-0000-000000000001",
         "fabricId": "fa37ac83-0160-4f55-baf3-f9f85d69780d"
        }
       }
      },
      {
       "assertType": "PORT_EXPECTED_NEIGHBOR",
       "state": "LATCHED",
       "portExpectedNeighbor": {
        "id": {
         "type": "AssertPortExpectedNeighborType",
         "device": "02-17-1b-41-01-00",
         "lineCard": 1,
         "port": 1
        },
        "category": "ASSERT_CATEGORY_FABRIC",
        "assertState": "ASSERT_STATE_TRUE",
        "modifiedAt": "2024-12-19T19:36:15.565901835Z",
        "config": {
         "latchedAt": "2024-12-19T18:22:16.194851842Z",
         "port": {
          "portName": "Ethernet1_1",
          "portIndex": 1,
          "portRole": "FABRIC_PORT",
          "adminState": "ENABLED",
          "mtu": 9216,
          "deviceId": "02-17-1b-41-01-00",
          "targetDeviceId": "02-17-f1-01-00-00",
          "targetPortName": "Ethernet1_1",
          "modifiedAt": "2024-12-19T19:30:51.482100345Z"
         },
         "orgId": "10000000-0000-0000-0000-000000000001",
         "fabricId": "fa37ac83-0160-4f55-baf3-f9f85d69780d"
        },
        "remoteDeviceId": "02-17-f1-01-00-00",
        "remotePortName": "Ethernet1_1",
        "numNeighbors": 1
       }
      },
      {
       "assertType": "PORT_CONNECTION_SPEED_MATCH",
       "state": "LATCHED",
       "portConnectionSpeedMatch": {
        "id": {
         "type": "AssertPortConnectionSpeedMatchType",
         "device": "02-17-1b-41-01-00",
         "lineCard": 1,
         "port": 1
        },
        "category": "ASSERT_CATEGORY_FABRIC",
        "assertState": "ASSERT_STATE_TRUE",
        "modifiedAt": "2024-12-19T19:36:15.565920127Z",
        "config": {
         "latchedAt": "2024-12-19T18:22:16.225461051Z",
         "port": {
          "portName": "Ethernet1_1",
          "portIndex": 1,
          "portRole": "FABRIC_PORT",
          "adminState": "ENABLED",
          "mtu": 9216,
          "deviceId": "02-17-1b-41-01-00",
          "targetDeviceId": "02-17-f1-01-00-00",
          "targetPortName": "Ethernet1_1",
          "modifiedAt": "2024-12-19T19:30:51.482100345Z"
         },
         "orgId": "10000000-0000-0000-0000-000000000001",
         "fabricId": "fa37ac83-0160-4f55-baf3-f9f85d69780d"
        },
        "localPortSpeed": "400000",
        "remotePortName": "Ethernet1_1",
        "remoteDeviceId": "02-17-f1-01-00-00",
        "remotePortSpeed": "400000"
       }
      },
      {
       "assertType": "PORT_SPEED_CONSISTENT",
       "state": "LATCHED",
       "portSpeedConsistent": {
        "id": {
         "type": "AssertPortSpeedConsistentType",
         "device": "02-17-1b-41-01-00",
         "lineCard": 1,
         "port": 1
        },
        "category": "ASSERT_CATEGORY_FABRIC",
        "assertState": "ASSERT_STATE_TRUE",
        "modifiedAt": "2024-12-19T19:36:15.562309960Z",
        "config": {
         "latchedAt": "2024-12-19T18:22:16.205308926Z",
         "port": {
          "portName": "Ethernet1_1",
          "portIndex": 1,
          "portRole": "FABRIC_PORT",
          "adminState": "ENABLED",
          "mtu": 9216,
          "deviceId": "02-17-1b-41-01-00",
          "targetDeviceId": "02-17-f1-01-00-00",
          "targetPortName": "Ethernet1_1",
          "modifiedAt": "2024-12-19T19:30:51.482100345Z"
         },
         "orgId": "10000000-0000-0000-0000-000000000001",
         "fabricId": "fa37ac83-0160-4f55-baf3-f9f85d69780d"
        },
        "localPortSpeed": "400000"
       }
      }
     ]
    }
   },
   "stateGetDevicePortCounters": {
    "description": "An example response to an API call.",
    "summary": "Example response",
    "value": {
     "counters": [
      {
       "port": {
        "id": {
         "type": "PortCountersType",
         "device": "02-17-83-27-00-01",
         "lineCard": 1,
         "port": 9,
         "portCounters": 1
        },
        "out-octets": "7662",
        "out-unicast-pkts": "32",
        "last-clear": "1970-01-01T00:00:00Z",
        "collected-at": "2024-09-10T20:23:19.033013805Z"
       }
      }
     ]
    }
   },
   "stateGetNodeAssertionsResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "stateGetNodePortAssertionsResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   },
   "stateSensorsResponse": {
    "description": "example not available",
    "summary": "example not available",
    "value": {
     "msg": "example not available, coming soon"
    }
   }
  },
  "headers": {
   "cache-control": {
    "description": "Determines client caching behavior",
    "example": "no-cache",
    "schema": {
     "description": "Determines client caching behavior",
     "type": "string"
    }
   },
   "content-encoding": {
    "description": "The encoding the response data",
    "example": "N/A",
    "schema": {
     "description": "The encoding the response data",
     "type": "string"
    }
   },
   "content-type": {
    "description": "The MIME type the response data",
    "example": "application/json",
    "schema": {
     "description": "The MIME type the response data",
     "type": "string"
    }
   },
   "date": {
    "description": "A timestamp when the response was processed",
    "example": "Tue, 10 Sep 2024 17:02:52 GMT",
    "schema": {
     "description": "A timestamp when the response was processed",
     "pattern": "^(((Mon|Tue|Wed|Thu|Fri|Sat|Sun)),\\s[0-9]{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s([0-9]{4})\\s([0-9]{2}):([0-9]{2})(:([0-9]{2}))?\\sGMT$",
     "type": "string"
    }
   },
   "trackingid": {
    "description": "A unique value generated for the response for debugging purposes",
    "example": "b4c08212-0a64-4edd-971a-d78562e1786f",
    "schema": {
     "description": "A unique value generated for the response for debugging purposes",
     "type": "string"
    }
   }
  },
  "schemas": {
   "assertionsAssertType": {
    "default": "CONFIG_ADDED_TO_DB",
    "description": "AssertType defines an enumeration of types of assertions.",
    "enum": [
     "CONFIG_ADDED_TO_DB",
     "PORT_LINK_UP",
     "DEVICE_CONNECTED_TO_CLOUD",
     "PORT_EXPECTED_NEIGHBOR",
     "PORT_NOT_CONNECTED_TO_FABRIC",
     "DEVICE_CONNECTED_TO_FABRIC",
     "PORT_LINK_DOWN",
     "PORT_CONNECTION_SPEED_MATCH",
     "PORT_SPEED_CONSISTENT",
     "VLAN_HAS_TRAFFIC",
     "STATIC_DEFAULT_ROUTE_EXISTS",
     "MANAGEMENT_PORT_CONFIG_SAME",
     "DEVICE_RESOURCE_USAGE_BELOW_THRESHOLD",
     "BGP_PEER_ESTABLISHED",
     "EXPECTED_PORT_BREAKOUT_EXISTS",
     "SUB_INTERFACE_UP",
     "SUB_INTERFACE_DOWN",
     "PORT_CHANNEL_MEMBER_UP",
     "PORT_VLAN_STP_STATE_CONSISTENT",
     "PORT_PLUGGABLE_PID_SAME",
     "DEVICE_ENV_PSU_USAGE_BELOW_THRESHOLD",
     "PORT_NO_UNKNOWN_VLAN_FOUND",
     "DEVICE_FAN_SPEED_BELOW_THRESHOLD",
     "DEVICE_TEMPERATURE_BELOW_THRESHOLD"
    ],
    "type": "string"
   },
   "assertionsAssertion": {
    "description": "An Assertion is a statement used to test assumptions made by the system to ensure that the system is functioning as intended. An assertion can evaluate to true (working as intended) or false (error, exception, potential failure or unexpected behavior found). An assertion can be latched or unlatched, which affects whether an assertion's condition is evaluated or not. Generally, an assertion automatically becomes latched after 5 minutes. You can manually unlatch a latched assertion.",
    "properties": {
     "assertDescription": {
      "description": "A human readable description of the assertion type",
      "type": "string"
     },
     "assertType": {
      "$ref": "#/components/schemas/assertionsAssertType"
     },
     "bgpPeerEstablished": {
      "$ref": "#/components/schemas/schemaAssertBgpPeerEstablished"
     },
     "deviceConnectedToCloud": {
      "$ref": "#/components/schemas/schemaAssertDeviceConnectedToCloud"
     },
     "deviceConnectedToFabric": {
      "$ref": "#/components/schemas/schemaAssertDeviceConnectedToFabric"
     },
     "deviceEnvPsuUsageBelowThreshold": {
      "$ref": "#/components/schemas/schemaAssertDeviceEnvPsuUsageBelowThreshold"
     },
     "deviceFanSpeedBelowThreshold": {
      "$ref": "#/components/schemas/schemaAssertDeviceFanSpeedBelowThreshold"
     },
     "deviceResourceUsageBelowThreshold": {
      "$ref": "#/components/schemas/schemaAssertDeviceResourceUsageBelowThreshold"
     },
     "deviceTemperatureBelowThreshold": {
      "$ref": "#/components/schemas/schemaAssertDeviceTemperatureBelowThreshold"
     },
     "expectedPortBreakoutExists": {
      "$ref": "#/components/schemas/schemaAssertExpectedPortBreakoutExists"
     },
     "managementPortConfigSame": {
      "$ref": "#/components/schemas/schemaAssertManagementPortConfigSame"
     },
     "portChannelMemberUp": {
      "$ref": "#/components/schemas/schemaAssertPortChannelMemberUp"
     },
     "portConnectionSpeedMatch": {
      "$ref": "#/components/schemas/schemaAssertPortConnectionSpeedMatch"
     },
     "portExpectedNeighbor": {
      "$ref": "#/components/schemas/schemaAssertPortExpectedNeighbor"
     },
     "portLinkDown": {
      "$ref": "#/components/schemas/schemaAssertPortLinkDown"
     },
     "portLinkUp": {
      "$ref": "#/components/schemas/schemaAssertPortLinkUp"
     },
     "portNoUnknownVlanFound": {
      "$ref": "#/components/schemas/schemaAssertPortNoUnknownVlanFound"
     },
     "portNotConnectedToFabric": {
      "$ref": "#/components/schemas/schemaAssertPortNotConnectedToFabric"
     },
     "portPluggablePidSame": {
      "$ref": "#/components/schemas/schemaAssertPortPluggablePidSame"
     },
     "portSpeedConsistent": {
      "$ref": "#/components/schemas/schemaAssertPortSpeedConsistent"
     },
     "portVlanStpStateConsistent": {
      "$ref": "#/components/schemas/schemaAssertPortVlanStpStateConsistent"
     },
     "state": {
      "$ref": "#/components/schemas/assertionsLatchState"
     },
     "staticDefaultRouteExists": {
      "$ref": "#/components/schemas/schemaAssertStaticDefaultRouteExists"
     },
     "subInterfaceDown": {
      "$ref": "#/components/schemas/schemaAssertSubInterfaceDown"
     },
     "subInterfaceUp": {
      "$ref": "#/components/schemas/schemaAssertSubInterfaceUp"
     },
     "vlanHasTraffic": {
      "$ref": "#/components/schemas/schemaAssertVlanHasTraffic"
     }
    },
    "type": "object"
   },
   "assertionsLatchState": {
    "default": "LATCHED",
    "description": "LatchState defines an enumeration of assertion latched/unlatched states.",
    "enum": [
     "LATCHED",
     "UNLATCHED"
    ],
    "type": "string"
   },
   "authAddOrgRequest": {
    "description": "The request to add a new organization.",
    "properties": {
     "orgName": {
      "description": "Name of the company to be added.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "authAddOrgResponse": {
    "description": "Response to AddOrgRequest.",
    "properties": {
     "orgId": {
      "description": "The globally unique identifier of the new organization just created.",
      "type": "string"
     },
     "user": {
      "$ref": "#/components/schemas/modelsUser"
     }
    },
    "type": "object"
   },
   "authAddTenantRequest": {
    "description": "AddTenantRequest allows an admin of the default-tenant (only) to add a non-default tenant.",
    "properties": {
     "tenant": {
      "$ref": "#/components/schemas/modelsTenant"
     },
     "user": {
      "$ref": "#/components/schemas/modelsUser"
     }
    },
    "type": "object"
   },
   "authAddTenantResponse": {
    "description": "Response to AddTenantRequest.",
    "properties": {
     "tenant": {
      "$ref": "#/components/schemas/modelsTenant"
     },
     "user": {
      "$ref": "#/components/schemas/modelsUser"
     }
    },
    "type": "object"
   },
   "authApiKey": {
    "description": "Description not available",
    "properties": {
     "description": {
      "description": "Description not available",
      "type": "string"
     },
     "fingerprint": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "description": "Description not available",
      "type": "string"
     },
     "type": {
      "$ref": "#/components/schemas/authApiKeyType"
     }
    },
    "type": "object"
   },
   "authApiKeyType": {
    "default": "RSA",
    "description": "Description not available",
    "enum": [
     "RSA",
     "ED25519"
    ],
    "type": "string"
   },
   "authApiKeysResponse": {
    "description": "A list of one or more enabled and active API Keys.",
    "properties": {
     "keys": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/authApiKey"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "authBearerToken": {
    "description": "A Bearer Token is a JSON Web Token (JWT) used for authentication and authorization against the Cisco Nexus Hyperfabric REST API. The JWT is a compact, URL-safe means of representing a JSON object containing a set of key-value pairs as described in RFC 7159. It is passed as Bearer token in the Authentication header of every HTTP API request.",
    "properties": {
     "description": {
      "description": "The description is a user-defined field to store notes about the bearer token.",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The user-defined name of the bearer token.",
      "type": "string"
     },
     "notAfter": {
      "description": "The end date and time for the validity of the bearer token in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (e.g. `YYYY-MM-DDTHH:MM:SSZ`).",
      "format": "date-time",
      "type": "string"
     },
     "notBefore": {
      "description": "The start date and time for the validity of the bearer token in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (e.g. `YYYY-MM-DDTHH:MM:SSZ`).",
      "format": "date-time",
      "type": "string"
     },
     "scope": {
      "$ref": "#/components/schemas/modelsTokenScope"
     },
     "token": {
      "description": "This is a read-only field. The JWT token that represent the bearer token. The token is only available at the bearer token creation.",
      "readOnly": true,
      "type": "string"
     },
     "tokenId": {
      "description": "This is a read-only field. The unique identifier of the bearer token.",
      "readOnly": true,
      "type": "string"
     }
    },
    "type": "object"
   },
   "authBearerTokensResponse": {
    "description": "Returns a list of bearer tokens.",
    "properties": {
     "tokens": {
      "description": "A list of bearer tokens.",
      "items": {
       "$ref": "#/components/schemas/authBearerToken"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "authClaimSubscriptionsRequest": {
    "description": "Claim subscriptions.\nThis is used to specify subscriptions to claim or unclaim.",
    "properties": {
     "refId": {
      "description": "The subscription reference identifiers of the subscriptions to claim or unclaim.",
      "items": {
       "type": "string"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "authCreateBearerTokensRequest": {
    "description": "Create one or more new bearer tokens.",
    "properties": {
     "tokens": {
      "description": "The new tokens to be created.",
      "items": {
       "$ref": "#/components/schemas/authNewBearerToken"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "authCreateBearerTokensResponse": {
    "description": "Create a new bearer token. Currently only a single bearer token can be created at a time.",
    "properties": {
     "tokens": {
      "description": "The newly created tokens.",
      "items": {
       "$ref": "#/components/schemas/authBearerToken"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "authNewBearerToken": {
    "description": "A new bearer token definition.",
    "properties": {
     "description": {
      "description": "A description for the token.",
      "type": "string"
     },
     "name": {
      "description": "The user provided name for the token.",
      "type": "string"
     },
     "notAfter": {
      "description": "Sets the time after which the token cannot be used.",
      "format": "date-time",
      "type": "string"
     },
     "notBefore": {
      "description": "Sets the time at which the token can be used.",
      "format": "date-time",
      "type": "string"
     },
     "scope": {
      "$ref": "#/components/schemas/modelsTokenScope"
     }
    },
    "type": "object"
   },
   "authSetUsersRequest": {
    "description": "The request to add one or more users.",
    "properties": {
     "users": {
      "description": "A list of users to be added.",
      "items": {
       "$ref": "#/components/schemas/modelsUser"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "authSubscriptionSummary": {
    "description": "Subscription summary.",
    "properties": {
     "description": {
      "description": "Description of the product ID granted by the subscription.",
      "type": "string"
     },
     "enabled": {
      "description": "Enabled indicates the service from which the pid came from is enabled and the subscription itself is enabled. If the billing system indicates the subscription is no longer valid, the subscription becomes disabled.",
      "type": "boolean"
     },
     "ends": {
      "description": "Deadline of when the subscription must be renewed in order to remain valid.",
      "format": "date-time",
      "type": "string"
     },
     "level": {
      "$ref": "#/components/schemas/modelsEntitlementLevel"
     },
     "model": {
      "$ref": "#/components/schemas/modelsSbpModel"
     },
     "pid": {
      "$ref": "#/components/schemas/modelsSbpPid"
     },
     "quantity": {
      "description": "The quantity of the product ID granted by the subscription.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "refId": {
      "description": "The subscription reference identifier.",
      "type": "string"
     },
     "starts": {
      "description": "When the subscription validity period starts.",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "authSubscriptionsResponse": {
    "description": "Subscriptions response.\nThis summarizes the resulting subscriptions after the requested operation on those subscriptions.",
    "properties": {
     "subscriptions": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/authSubscriptionSummary"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "authSupportAccessResponse": {
    "description": "SupportAccessResponse includes information about support access settings.",
    "properties": {
     "settings": {
      "$ref": "#/components/schemas/modelsSupportSettings"
     }
    },
    "type": "object"
   },
   "authTenantsResponse": {
    "description": "A list of tenants belonging to an organization.",
    "properties": {
     "tenants": {
      "description": "List of up to date tenants in response to requests with list of tenants.",
      "items": {
       "$ref": "#/components/schemas/modelsTenant"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "authUpdateSupportAccessRequest": {
    "description": "UpdateSupportAccessRequest allows admin of default-tenant to update support access settings.",
    "properties": {
     "settings": {
      "$ref": "#/components/schemas/modelsSupportSettings"
     }
    },
    "type": "object"
   },
   "authUpdateTenantsRequest": {
    "description": "UpdateTenantsRequest allows admin of the default-tenant updates properties of the one or more tenants.",
    "properties": {
     "tenants": {
      "description": "Tenants specifications.",
      "items": {
       "$ref": "#/components/schemas/modelsTenant"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "authUpdateUser": {
    "description": "Update a specific user.\nUpdate a specific user associated with the organization.",
    "properties": {
     "enabled": {
      "description": "Enable/disable the user.",
      "type": "boolean"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering Users.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "role": {
      "$ref": "#/components/schemas/modelsUserRole"
     }
    },
    "type": "object"
   },
   "authUploadApiKeyRequest": {
    "description": "Description not available",
    "properties": {
     "keyData": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "authUsersResponse": {
    "description": "The response to a request for a list of users.",
    "properties": {
     "users": {
      "description": "A list of users.",
      "items": {
       "$ref": "#/components/schemas/modelsUser"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "commonEchoRequest": {
    "description": "EchoRequest encapsulates properties of a simple gRPC echo request.",
    "properties": {
     "message": {
      "description": "Echo message.",
      "type": "string"
     },
     "numMessages": {
      "description": "num_messages is number of messages the client expects the server to send in messages in each EchoResponse. It is optional, the default value of 0 indicates send messsage in EchoResponse only (no messages).",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "numResponses": {
      "description": "num_responses is number of EchoResponses the client expects the server to send. It is optional, the default value of 0 indicates the server should keep sending indefinitely.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "requestTs": {
      "description": "Input timestamp.",
      "format": "date-time",
      "type": "string"
     },
     "stop": {
      "description": "stop indicates the server should close its end of the stream immediately (in the case of streamecho).",
      "type": "boolean"
     },
     "waitSecs": {
      "description": "wait_secs is the number of seconds the server should wait before sending subsequent EchoResponse messages. If not specified (0), the current value is used (the initial (default) value is 1 second).",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "commonEchoResponse": {
    "description": "EchoResponse encapsulates properties of a simple gRPC echo response.",
    "properties": {
     "email": {
      "description": "Email of the authenticated user.",
      "type": "string"
     },
     "fabricId": {
      "description": "Identifies the switch.",
      "type": "string"
     },
     "message": {
      "description": "Echo message.",
      "type": "string"
     },
     "messages": {
      "description": "A repeat of message based on num_messages in EchoRequest.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "orgId": {
      "description": "Identifies the organization of the session to which tenant belongs.",
      "type": "string"
     },
     "requestTs": {
      "description": "Input timestamp.n",
      "format": "date-time",
      "type": "string"
     },
     "responseTs": {
      "description": "Echo timestamp.",
      "format": "date-time",
      "type": "string"
     },
     "svc": {
      "description": "Name of service responding.",
      "type": "string"
     },
     "switchId": {
      "description": "Identifies the switch.",
      "type": "string"
     },
     "tenantId": {
      "description": "Identifies the tenant of the session to which the user belongs. If tenant_id equals org_id, then the session is in the context of the default-tenant of this organization.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "commonErrCode": {
    "default": "ERR_CODE_INTERNAL",
    "description": "An error code provides additional information about a failed API request.",
    "enum": [
     "ERR_CODE_INTERNAL",
     "ERR_CODE_INVALID_UUID",
     "ERR_CODE_PERMISSION_DENIED",
     "ERR_CODE_OUT_OF_RANGE",
     "ERR_CODE_INVALID_TYPE",
     "ERR_CODE_INVALID_VALUE",
     "ERR_CODE_UNKNOWN_PARAMETER",
     "ERR_CODE_SERVICE_UNAVAILABLE",
     "ERR_CODE_NOT_FOUND",
     "ERR_CODE_NOT_IMPLEMENTED",
     "ERR_CODE_TOO_MANY_REQUESTS",
     "ERR_CODE_NO_KNOWN_CODE",
     "ERR_CODE_NO_REGISTERED_MARSHALERS",
     "ERR_CODE_UNSUPPORTED_CONTENT_TYPE",
     "ERR_CODE_DATA_CONFLICT",
     "ERR_CODE_UNAUTHORIZED",
     "ERR_CODE_READ_ONLY_FIELD",
     "ERR_CODE_MISSING_REQUIRED_ARG",
     "ERR_CODE_REQUEST_VALIDATION",
     "ERR_CODE_INVALID_CLI_CMD",
     "ERR_CODE_JSON_UNMARSHAL_ERROR",
     "ERR_CODE_JSON_MARSHAL_ERROR",
     "ERR_CODE_JSON_NO_DATA",
     "ERR_CODE_CSV_UNMARSHAL_ERROR",
     "ERR_CODE_CSV_MARSHAL_ERROR",
     "ERR_CODE_CSV_INVALID_DATA",
     "ERR_CODE_CSV_UNKNOWN_HEADER",
     "ERR_CODE_CSV_INVALID_VALUE",
     "ERR_CODE_CSV_NO_DATA",
     "ERR_CODE_YAML_NO_DATA",
     "ERR_CODE_YAML_UNMARSHAL_ERROR",
     "ERR_CODE_YAML_MARSHAL_ERROR",
     "ERR_CODE_PEM_NO_DATA",
     "ERR_CODE_PEM_UNMARSHAL_ERROR",
     "ERR_CODE_PEM_MARSHAL_ERROR",
     "ERR_CODE_PEM_INVALID_KEY_TYPE",
     "ERR_CODE_PEM_INVALID_KEY_DATA",
     "ERR_CODE_FORM_MARSHAL_ERROR",
     "ERR_CODE_FORM_UNMARSHAL_ERROR",
     "ERR_CODE_FORM_NO_DATA",
     "ERR_CODE_NO_FABRICS_DEFINED",
     "ERR_CODE_NO_FABRIC_CONNECTIONS_DEFINED",
     "ERR_CODE_TOO_MANY_FABRICS_DEFINED",
     "ERR_CODE_CHASSIS_ALREADY_ASSIGNED",
     "ERR_CODE_NO_PORTS_FOR_CHASSIS",
     "ERR_CODE_INVALID_CONFIRMATION_CODE"
    ],
    "type": "string"
   },
   "commonPaginationResponse": {
    "description": "PaginationResponse defines common pagination properties that all GET gRPC responses should have. PaginationResponse is to be embedded in all GET gRPC response messages.",
    "properties": {
     "cursor": {
      "description": "Last used search cursor. Next pagination will start after this.",
      "type": "string"
     },
     "final": {
      "description": "Indicates an end of query results.",
      "type": "boolean"
     },
     "total": {
      "description": "Total number of objects found by query.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "commonRestError": {
    "description": "A REST API Error is returned when the Hyperfabric service failed to execute the received REST API request to inform the user on the type of the error and other useful information for troubleshooting the request.",
    "properties": {
     "causes": {
      "description": "A list of underlying causes.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "critical": {
      "description": "The flag that indicates if the error is a critical error or not.",
      "type": "boolean"
     },
     "errCode": {
      "$ref": "#/components/schemas/commonErrCode"
     },
     "field": {
      "description": "The name of the relevant field.",
      "type": "string"
     },
     "message": {
      "description": "The error message.",
      "type": "string"
     },
     "notes": {
      "description": "Additional information about the error.",
      "type": "string"
     },
     "status": {
      "description": "The HTTP status code associated with the error.",
      "format": "int32",
      "type": "integer"
     },
     "trackingId": {
      "description": "A unique identifier for each request, used for tracking purposes.",
      "type": "string"
     },
     "value": {
      "description": "The value of the relevant field.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configActivityEvent": {
    "description": "ActivityEvent encapsulates an activity log event.",
    "properties": {
     "eventId": {
      "description": "The monotonically increasing event identifier.",
      "type": "string"
     },
     "objectId": {
      "description": "The object identifier.",
      "type": "string"
     },
     "objectName": {
      "description": "The object name (maybe empty).",
      "type": "string"
     },
     "objectType": {
      "$ref": "#/components/schemas/modelsObjectType"
     },
     "operation": {
      "$ref": "#/components/schemas/modelsOperation"
     },
     "parentId": {
      "description": "The object identifier of parent object.",
      "type": "string"
     },
     "parentType": {
      "$ref": "#/components/schemas/modelsObjectType"
     },
     "timestamp": {
      "description": "The activity event timestamp.",
      "format": "date-time",
      "type": "string"
     },
     "username": {
      "description": "The user who triggered the activity event.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configAddEndpointsRequest": {
    "description": "Add new endpoints.",
    "properties": {
     "endpoints": {
      "description": "The new endpoints to add.",
      "items": {
       "$ref": "#/components/schemas/modelsEndpoint"
      },
      "type": "array"
     },
     "sendConfirmationCode": {
      "description": "Send a confirmation code. Currently, only email endpoints will receive a code.",
      "type": "boolean"
     }
    },
    "type": "object"
   },
   "configAddFabricBgpPoliciesRequest": {
    "description": "The request to add one or more BGP policies to a specific fabric.",
    "properties": {
     "bgpPolicies": {
      "description": "A list of BGP policies to be added to the fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsBgpPolicy"
      },
      "type": "array"
     },
     "fabricId": {
      "description": "The fabric id or name.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configAddFabricConnectionsRequest": {
    "description": "The request to add one or more connections to a specific fabric.",
    "properties": {
     "connections": {
      "description": "A list of connections to be added to the fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsPortConnection"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configAddFabricNodesRequest": {
    "description": "The request to add one or more nodes to a specific fabric.",
    "properties": {
     "nodes": {
      "description": "A list of nodes to be added to the fabric.",
      "items": {
       "$ref": "#/components/schemas/configNode"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configAddFabricNodesResponse": {
    "description": "The response returned to a request to add a list of nodes to a specific fabric.",
    "properties": {
     "nodes": {
      "description": "The list of newly added nodes to the fabric.",
      "items": {
       "$ref": "#/components/schemas/configNode"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configAddFabricSoftwareConfigRequest": {
    "description": "AddFabricSoftwareConfigRequest sets a FabricSoftwareConfig configuration object in a fabric",
    "properties": {
     "fabricId": {
      "description": "The fabric id or name",
      "type": "string"
     },
     "swConf": {
      "$ref": "#/components/schemas/modelsFabricSoftwareConfig"
     }
    },
    "type": "object"
   },
   "configAddFabricStaticRoutesRequest": {
    "description": "The request to add one or more static routes to a specific VRF in a fabric.",
    "properties": {
     "staticRoutes": {
      "description": "A list of static routes to be added to the VRF.",
      "items": {
       "$ref": "#/components/schemas/modelsStaticRoutes"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configAddFabricVnisRequest": {
    "description": "The request to add one or more VNIs to a specific fabric.",
    "properties": {
     "vnis": {
      "description": "A list of VNIs to be added to the fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsVni"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configAddFabricVrfsRequest": {
    "description": "The request to add one or more VRFs to a specific fabric.",
    "properties": {
     "vrfs": {
      "description": "A list of VRFs to be added to the fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsVrf"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configAddFabricsRequest": {
    "description": "The request to create a fabric.",
    "properties": {
     "fabrics": {
      "description": "A list of one fabric to be created.",
      "items": {
       "$ref": "#/components/schemas/configFabric"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configAddFabricsResponse": {
    "description": "The response returned to a request to create a fabric.",
    "properties": {
     "fabrics": {
      "description": "A list of the newly created fabric.",
      "items": {
       "$ref": "#/components/schemas/configFabric"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configAddManagementPortsRequest": {
    "description": "The request to add one or more management ports to a specific node in a fabric.",
    "properties": {
     "ports": {
      "description": "A list of management ports to be added to the node.",
      "items": {
       "$ref": "#/components/schemas/modelsManagementPort"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configAddNodeLoopbacksRequest": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "The fabric id or name.",
      "type": "string"
     },
     "loopbacks": {
      "description": "The loopbacks for the fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsLoopback"
      },
      "type": "array"
     },
     "nodeId": {
      "description": "The node id or name.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configAddNodeSubInterfacesRequest": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "The fabric id or name.",
      "type": "string"
     },
     "nodeId": {
      "description": "The node id or name.",
      "type": "string"
     },
     "subInterfaces": {
      "description": "The sub-interfaces for the fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsSubInterface"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configAddOrgCertificatesResponse": {
    "description": "Response for creating organization certificates.",
    "properties": {
     "certificates": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsCertificates"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configAddPortChannelsRequest": {
    "description": "The request to add one or more port channels to a specific fabric.",
    "properties": {
     "fabricId": {
      "description": "The fabric id or name.",
      "type": "string"
     },
     "portChannels": {
      "description": "A list of port channels to be added to the fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsPortChannel"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configAnnotation": {
    "description": "Annotation encapsulates an object annotation and identifiers of associated objects.",
    "properties": {
     "annotation": {
      "$ref": "#/components/schemas/modelsAnnotation"
     },
     "bgpPeerIds": {
      "description": "A set of BgpPeer objects associated with the annotation.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "bgpPolicyIds": {
      "description": "A set of BgpPolicy associated with the annotation.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "dhcpRelayIds": {
      "description": "A set of DhcpRelays associated with the annotation.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "dscpConfigIds": {
      "description": "A set of DscpConfig objects associated with the annotation.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "enabled": {
      "description": "Indicates if annotation is enabled or not. Enabled flag is useful in SetAnnotations API. SetAnnotations adds new annotation when Enabled is true, and deletes existing annotations when Enabled is false.",
      "type": "boolean"
     },
     "fabricIds": {
      "description": "A set of fabrics associated with the annotation.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "ipmConfigIds": {
      "description": "A set of IpmConfig objects associated with the annotation.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "loopbackIds": {
      "description": "A set of Loopback devices associated with the annotation.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "networkPortIds": {
      "description": "A set of network ports associated with the annotation.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "nodeIds": {
      "description": "A set of nodes associated with the annotation.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "portBreakoutIds": {
      "description": "A set of PortBreakout objects associated with the annotation.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "portChannelIds": {
      "description": "A set of port channels associated with the annotation.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "prefixListIds": {
      "description": "A set of PrefixList objects associated with the annotation.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "staticRouteIds": {
      "description": "A set of StaticRoutes associated with the annotation.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "subInterfaceIds": {
      "description": "A set of SubInterface associated with the annotation.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "vniIds": {
      "description": "A set of Vnis associated with the annotation.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "vrfIds": {
      "description": "A set of Vrfs associated with the annotation.",
      "items": {
       "type": "string"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configBindDevice": {
    "description": "Bind a specific device to a node.\nBind a specific device to a node in a fabric.",
    "properties": {
     "deviceId": {
      "description": "The identifier of inventory device.",
      "type": "string"
     },
     "fabricId": {
      "description": "The fabric identifier.",
      "type": "string"
     },
     "nodeId": {
      "description": "The identifier of blueprint node.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configBindDeviceResponse": {
    "description": "The response to a request to bind a specific device to a node in a fabric.",
    "properties": {
     "deviceId": {
      "description": "The device id or name of the device to bind to the node.",
      "type": "string"
     },
     "nodeId": {
      "description": "The node id or name of the node.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configBomItem": {
    "description": "Description not available",
    "properties": {
     "description": {
      "description": "description of the item",
      "type": "string"
     },
     "itemType": {
      "$ref": "#/components/schemas/configBomType"
     },
     "modelName": {
      "description": "Model Name(or) Pid of the item",
      "type": "string"
     },
     "quantityDeployed": {
      "description": "number of items deployed",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "quantityRequired": {
      "description": "number of items required",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "quantityTotal": {
      "description": "total number of items",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "tags": {
      "description": "tags for the BOM item",
      "items": {
       "type": "string"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configBomMainItem": {
    "description": "Description not available",
    "properties": {
     "mainItem": {
      "$ref": "#/components/schemas/configBomItem"
     },
     "subItems": {
      "description": "Sub items represent items that are part of main",
      "items": {
       "$ref": "#/components/schemas/configBomItem"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configBomType": {
    "default": "BOM_TYPE_HARDWARE",
    "description": "BomType encapsulates type of a Bom Item.",
    "enum": [
     "BOM_TYPE_HARDWARE",
     "BOM_TYPE_SERVICE",
     "BOM_TYPE_CHASSIS",
     "BOM_TYPE_OPTICS",
     "BOM_TYPE_FAN",
     "BOM_TYPE_PSU",
     "BOM_TYPE_ENTITLEMENT"
    ],
    "type": "string"
   },
   "configCandidateReview": {
    "description": "CandidateReview represents a candidate review record. CandidateReview records are created when users add review comments.",
    "properties": {
     "comments": {
      "description": "Transaction comments.",
      "type": "string"
     },
     "createdAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "createdBy": {
      "description": "UserId of the user who added the comments.",
      "type": "string"
     },
     "operation": {
      "$ref": "#/components/schemas/modelsOperation"
     }
    },
    "type": "object"
   },
   "configClaimDevicesRequest": {
    "description": "Description not available",
    "properties": {
     "claimCodes": {
      "description": "Claim code mode",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "deviceIds": {
      "description": "spider claim mode",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "serialNumbers": {
      "description": "USB token claim mode",
      "items": {
       "type": "string"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configClaimDevicesResponse": {
    "description": "Description not available",
    "properties": {
     "claims": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsClaimResult"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configCommitFabricCandidateRequest": {
    "description": "The request to commit a specific candidate configuration of a fabric.",
    "properties": {
     "comments": {
      "description": "The reasons for the candidate configuration commit.",
      "type": "string"
     },
     "revisionId": {
      "description": "The candidate configuration revision identifier.\nThe commit request will be rejected if the provided revision identifier is not the same than the most recent one known to the Hyperfabric service.",
      "type": "string"
     }
    },
    "required": [
     "comments"
    ],
    "type": "object"
   },
   "configCommitFabricCandidateResponse": {
    "description": "The response to a request to commit a specific candidate configuration of a fabric.",
    "properties": {
     "committed": {
      "description": "Indicates that the pending candidate configuration was committed.",
      "type": "boolean"
     },
     "fabricId": {
      "description": "The fabric identifier.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configEndpointsResponse": {
    "description": "A list of endpoints.",
    "properties": {
     "endpoints": {
      "description": "One or more endpoint definitions.",
      "items": {
       "$ref": "#/components/schemas/modelsEndpoint"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configEntitlementFabricUsage": {
    "description": "Fabric usage of entitlements.\nThis summarizes a fabric's usage of entitlements.",
    "properties": {
     "fabricId": {
      "description": "Identifier of fabric using entitlements.",
      "type": "string"
     },
     "fabricName": {
      "description": "Name of fabric using entitlements.",
      "type": "string"
     },
     "level": {
      "$ref": "#/components/schemas/modelsEntitlementLevel"
     },
     "usage": {
      "description": "Usage grouped by device model.",
      "items": {
       "$ref": "#/components/schemas/configEntitlementModelUsage"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configEntitlementModelUsage": {
    "description": "Fabric usage of models.\nThis is a summary of a fabric's usage of entitlements of certain device model.",
    "properties": {
     "allocated": {
      "description": "Number of entitlements of this model of this level bound to this fabric.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "borrowed": {
      "description": "Number of entitlements of this model borrowed from a higher level bound to this fabric.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "compliant": {
      "description": "Whether or not this fabric is compliant with number of devices of this model used.",
      "type": "boolean"
     },
     "model": {
      "$ref": "#/components/schemas/modelsSbpModel"
     },
     "needed": {
      "description": "Number of devices of this model bound to this fabric that are not covered by any subscription.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "totalBound": {
      "description": "Total number of devices of this model bound to this fabric. Total Bound = Allocated + Borrowed + Needed",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "configEntitlementUsage": {
    "description": "Entitlement uage.\nThis is a summary of the organization's entitlement usage at a given level.",
    "properties": {
     "allocatedTo": {
      "description": "Number entitlements of this level bound to fabrics at this level regardless of model. allocated_to = sum(fabric_usage.allocated).",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "availableBalance": {
      "description": "Number entitlements at this level available for use after allocation regardless of model. available_balance = total_entitled - allocated_to - lent",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "borrowed": {
      "description": "Number of entitlements borrowed from a higher level used in fabrics at this level.",
      "items": {
       "$ref": "#/components/schemas/configEntitlementsShared"
      },
      "type": "array"
     },
     "fabricUsage": {
      "description": "Summarizes how entitlements are used by each fabric at the given level.",
      "items": {
       "$ref": "#/components/schemas/configEntitlementFabricUsage"
      },
      "type": "array"
     },
     "lent": {
      "description": "Number of entitlements of this level lent to fabrics at a lower level.",
      "items": {
       "$ref": "#/components/schemas/configEntitlementsShared"
      },
      "type": "array"
     },
     "level": {
      "$ref": "#/components/schemas/modelsEntitlementLevel"
     },
     "totalEntitled": {
      "description": "Number of entitlements granted at this level regardless of model.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "configEntitlementsShared": {
    "description": "Entitlements shared.\nThis is a summary of entitlements lent or borrowed to or from a given entitlement level.",
    "properties": {
     "count": {
      "description": "Count of entitlements lent or borrowed.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "level": {
      "$ref": "#/components/schemas/modelsEntitlementLevel"
     }
    },
    "type": "object"
   },
   "configExportedFabricConfiguration": {
    "description": "An exported FabricConfiguration.",
    "properties": {
     "bgpPeers": {
      "description": "The exported BGP peer objects.",
      "items": {
       "$ref": "#/components/schemas/modelsBgpPeer"
      },
      "type": "array"
     },
     "bgpPolicies": {
      "description": "The exported BGP policy objects.",
      "items": {
       "$ref": "#/components/schemas/modelsBgpPolicy"
      },
      "type": "array"
     },
     "connections": {
      "description": "The exported port connections.",
      "items": {
       "$ref": "#/components/schemas/modelsPortConnection"
      },
      "type": "array"
     },
     "createdAt": {
      "description": "The time at which the configuration was created.",
      "format": "date-time",
      "type": "string"
     },
     "dhcpRelays": {
      "description": "The exported dhcp relay objects.",
      "items": {
       "$ref": "#/components/schemas/modelsDhcpRelay"
      },
      "type": "array"
     },
     "dscpConfigs": {
      "description": "The exported DSCP config objects.",
      "items": {
       "$ref": "#/components/schemas/modelsDscpConfig"
      },
      "type": "array"
     },
     "fabric": {
      "$ref": "#/components/schemas/modelsFabric"
     },
     "fabricId": {
      "description": "The fabric id or name.",
      "type": "string"
     },
     "ipmConfigs": {
      "description": "The exported IPM config objects.",
      "items": {
       "$ref": "#/components/schemas/modelsIpmConfig"
      },
      "type": "array"
     },
     "loopbacks": {
      "description": "The exported loopback objects.",
      "items": {
       "$ref": "#/components/schemas/modelsLoopback"
      },
      "type": "array"
     },
     "networkPorts": {
      "description": "The exported network ports.",
      "items": {
       "$ref": "#/components/schemas/modelsNetworkPort"
      },
      "type": "array"
     },
     "nodes": {
      "description": "The exported nodes.",
      "items": {
       "$ref": "#/components/schemas/modelsNode"
      },
      "type": "array"
     },
     "perVlanStps": {
      "description": "The exported vlan stps.",
      "items": {
       "$ref": "#/components/schemas/modelsPerVlanStp"
      },
      "type": "array"
     },
     "portBreakouts": {
      "description": "The exported port breakout object.",
      "items": {
       "$ref": "#/components/schemas/modelsPortBreakout"
      },
      "type": "array"
     },
     "portChannels": {
      "description": "The exported port channel (LAG) objects.",
      "items": {
       "$ref": "#/components/schemas/modelsPortChannel"
      },
      "type": "array"
     },
     "schema": {
      "description": "The schema version of the exported configuration.",
      "type": "string"
     },
     "staticRoutes": {
      "description": "The exported static routes objects.",
      "items": {
       "$ref": "#/components/schemas/modelsStaticRoutes"
      },
      "type": "array"
     },
     "subInterfaces": {
      "description": "The exported subinterface objects.",
      "items": {
       "$ref": "#/components/schemas/modelsSubInterface"
      },
      "type": "array"
     },
     "vnis": {
      "description": "The exported VNI objects.",
      "items": {
       "$ref": "#/components/schemas/modelsVni"
      },
      "type": "array"
     },
     "vrfs": {
      "description": "The exported VRF objects.",
      "items": {
       "$ref": "#/components/schemas/modelsVrf"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configFabric": {
    "description": "A Fabric is a collection of nodes, connections that represents the interconnections between the nodes, the configuration of the ports of the nodes and the logical constructs deployed across the fabric such as VRFs, logical networks named VNIs and other services.",
    "properties": {
     "address": {
      "description": "The physical street address where the fabric is located (E.g. 320 My Street).",
      "type": "string"
     },
     "annotations": {
      "description": "A list of name-value annotations to store user-defined data including complex data such as JSON associated with the fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "city": {
      "description": "The city in which the fabric is located (E.g. San Jose).",
      "type": "string"
     },
     "country": {
      "description": "The country code in which the fabric is located (E.g. US).",
      "type": "string"
     },
     "description": {
      "description": "The description is a user-defined field to store notes about the fabric.",
      "type": "string"
     },
     "fabricId": {
      "description": "This is a read-only field. The unique identifier of the fabric.",
      "readOnly": true,
      "type": "string"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering fabrics.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "location": {
      "description": "The location is a user-defined field to store information about the location of the fabric (E.g. SJC01).",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The user-defined name of the fabric.",
      "type": "string"
     },
     "topology": {
      "$ref": "#/components/schemas/modelsFabricTopology"
     }
    },
    "required": [
     "name"
    ],
    "type": "object"
   },
   "configFabricBgpPoliciesResponse": {
    "description": "The response returned to a request for the list of BGP policies in a specific fabric.",
    "properties": {
     "bgpPolicies": {
      "description": "The list of BGP policies in the fabric",
      "items": {
       "$ref": "#/components/schemas/modelsBgpPolicy"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configFabricCandidate": {
    "description": "A candidate configuration represents a staging area for changes to a fabric and its children to be compiled before being reviewed and commited. Once commited, the candidate configuration becomes the running configuration and the candidate configuration is emptied.",
    "properties": {
     "active": {
      "description": "This is a read-only field. The flag that indicates if the candidate configuration has pending changes or not.",
      "readOnly": true,
      "type": "boolean"
     },
     "createdAt": {
      "description": "This is a read-only field. The timestamp when this object was created in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (e.g. `YYYY-MM-DDTHH:MM:SSZ`).",
      "format": "date-time",
      "readOnly": true,
      "type": "string"
     },
     "createdBy": {
      "description": "This is a read-only field. The identity provider and email of the user that created the candidate configuration.",
      "readOnly": true,
      "type": "string"
     },
     "events": {
      "description": "This is a read-only field. A list of the activity events of the candidate configuration.",
      "items": {
       "$ref": "#/components/schemas/configActivityEvent"
      },
      "readOnly": true,
      "type": "array"
     },
     "fabricId": {
      "description": "This is a read-only field. The unique identifier of the fabric to which the candidate is associated to.",
      "readOnly": true,
      "type": "string"
     },
     "modifiedAt": {
      "description": "This is a read-only field. The timestamp when this object was last modified in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (e.g. `YYYY-MM-DDTHH:MM:SSZ`).",
      "format": "date-time",
      "readOnly": true,
      "type": "string"
     },
     "modifiedBy": {
      "description": "This is a read-only field. The identity provider and email of the user that modified the candidate configuration last.",
      "readOnly": true,
      "type": "string"
     },
     "name": {
      "description": "This is a read-only field. The name of the candidate configuration. Only the `default` candidate configuration is currently support.",
      "readOnly": true,
      "type": "string"
     },
     "reviews": {
      "description": "This is a read-only field. A list of the reviews of the candidate configuration.",
      "items": {
       "$ref": "#/components/schemas/configCandidateReview"
      },
      "readOnly": true,
      "type": "array"
     },
     "revisionId": {
      "description": "This is a read-only field. An integer that represents the current revision identifier of the candidate configuration.",
      "readOnly": true,
      "type": "string"
     },
     "txnId": {
      "description": "This is a read-only field. The transaction sequence number of the candidate configuration.",
      "readOnly": true,
      "type": "string"
     },
     "type": {
      "$ref": "#/components/schemas/modelsCandidateType"
     }
    },
    "type": "object"
   },
   "configFabricConfig": {
    "description": "FabricConfig encapsulates entire config of a fabric.",
    "properties": {
     "comments": {
      "description": "Commit comments.",
      "type": "string"
     },
     "configFp": {
      "description": "Fingerprint of FabricConfig.",
      "type": "string"
     },
     "createdAt": {
      "description": "Tortuga's current timestamp.",
      "format": "date-time",
      "type": "string"
     },
     "createdBy": {
      "description": "The user who triggered fabric grind.",
      "type": "string"
     },
     "fabric": {
      "$ref": "#/components/schemas/modelsFabric"
     },
     "perVlanStp": {
      "$ref": "#/components/schemas/modelsPerVlanStp"
     },
     "revisionId": {
      "description": "Following properties do not affect configs for switches. They are handled out-of-band. Fingerprint of FabricConfig is calculated using these properties.",
      "type": "string"
     },
     "swConf": {
      "$ref": "#/components/schemas/modelsFabricSoftwareConfig"
     },
     "tenants": {
      "description": "Tenant objects.",
      "items": {
       "$ref": "#/components/schemas/configTenantObjects"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configFabricConnectionsResponse": {
    "description": "The response returned to a request for the list of connections in a specific fabric.",
    "properties": {
     "connections": {
      "description": "The list of connections in the fabric",
      "items": {
       "$ref": "#/components/schemas/modelsPortConnection"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configFabricDhcpRelaysResponse": {
    "description": "Description not available",
    "properties": {
     "relays": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsDhcpRelay"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configFabricLoopbacksResponse": {
    "description": "Description not available",
    "properties": {
     "loopbacks": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsLoopback"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configFabricRevisionIdResponse": {
    "description": "The response to a request for the revision id of a specific fabric.",
    "properties": {
     "fabricId": {
      "description": "The fabric id or name.",
      "type": "string"
     },
     "revisionId": {
      "description": "The latest revision id for the fabric.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configFabricStaticRoutesResponse": {
    "description": "The response returned to a request for the list of static routes of a specific VRF in a fabric.",
    "properties": {
     "staticRoutes": {
      "description": "A list of static routes definitions.",
      "items": {
       "$ref": "#/components/schemas/modelsStaticRoutes"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configFabricVniMembersResponse": {
    "description": "The response returned to a request for a list of members of a VNI in a fabric.",
    "properties": {
     "members": {
      "description": "A list of members of a VNI.",
      "items": {
       "$ref": "#/components/schemas/modelsVlanMember"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configFabricVnisResponse": {
    "description": "The response returned to a request for a list of VNIs in a fabric.",
    "properties": {
     "vnis": {
      "description": "A list of VNIs in a fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsVni"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configFabricVrfsResponse": {
    "description": "The response returned to a request for a list of VRFs in a fabric.",
    "properties": {
     "vrfs": {
      "description": "A list of VRFs in a fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsVrf"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configGenerateCablingPlanRequest": {
    "description": "Description not available",
    "properties": {
     "design": {
      "$ref": "#/components/schemas/modelsFabricDesign"
     },
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "filters": {
      "$ref": "#/components/schemas/modelsCablingRequestFilters"
     }
    },
    "type": "object"
   },
   "configGenerateCablingPlanResponse": {
    "description": "Description not available",
    "properties": {
     "connections": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsCablingConnection"
      },
      "type": "array"
     },
     "execSummary": {
      "$ref": "#/components/schemas/modelsCablingPlanExecutionSummary"
     },
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configGetActivityEventsResponse": {
    "description": "Description not available",
    "properties": {
     "events": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/configActivityEvent"
      },
      "type": "array"
     },
     "pagination": {
      "$ref": "#/components/schemas/commonPaginationResponse"
     }
    },
    "type": "object"
   },
   "configGetAllFabricsResponse": {
    "description": "The response returned to a request for a list of fabrics.",
    "properties": {
     "cursor": {
      "description": "A cursor will be provided if there are more fabrics to be returned.",
      "type": "string"
     },
     "fabrics": {
      "description": "A list of fabrics",
      "items": {
       "$ref": "#/components/schemas/configFabric"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configGetCablingPlanResponse": {
    "description": "Description not available",
    "properties": {
     "connections": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsCablingConnection"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configGetEntitlementUsageResponse": {
    "description": "GetEntitlementUsageResponse.\nThis is a summary of the entitlements of the caller's organization and their usage.",
    "properties": {
     "usages": {
      "description": "Summary of an organization's entitlement usage per entitlement level sorted in decreasing level.",
      "items": {
       "$ref": "#/components/schemas/configEntitlementUsage"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configGetFabricAssemblyResponse": {
    "description": "GetFabricAssemblyResponse encapsulates query response of Fabric assembly.",
    "properties": {
     "creationTime": {
      "description": "creation time of Fabric",
      "format": "date-time",
      "type": "string"
     },
     "nodeHwParts": {
      "description": "list of node hardware parts",
      "items": {
       "$ref": "#/components/schemas/configNodeHwPart"
      },
      "type": "array"
     },
     "updatedTime": {
      "description": "Last updated time of Fabric",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configGetFabricBlueprintTemplateDataResponse": {
    "description": "Description not available",
    "properties": {
     "templateData": {
      "$ref": "#/components/schemas/configFabricConfig"
     }
    },
    "type": "object"
   },
   "configGetFabricBlueprintTemplatesResponse": {
    "description": "Description not available",
    "properties": {
     "templates": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsFabricBlueprintTemplate"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configGetFabricBomResponse": {
    "description": "GetFabricAssemblyResponse encapsulates query response of Fabric BOM.",
    "properties": {
     "creationTime": {
      "description": "creation time of Fabric",
      "format": "date-time",
      "type": "string"
     },
     "mainItems": {
      "description": "list of product items in BOM",
      "items": {
       "$ref": "#/components/schemas/configBomMainItem"
      },
      "type": "array"
     },
     "updatedTime": {
      "description": "Last updated time of Fabric",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configGetFabricCandidatesResponse": {
    "description": "The response to a request for a list of candidate configurations of a specific fabric.",
    "properties": {
     "candidates": {
      "description": "A list of candidate configurations of a specific fabric",
      "items": {
       "$ref": "#/components/schemas/configFabricCandidate"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configGetFabricInventoriesResponse": {
    "description": "Description not available",
    "properties": {
     "fabrics": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsFabric"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configGetFabricNodesResponse": {
    "description": "The response returned to a request for the list of nodes in a specific fabric.",
    "properties": {
     "nodes": {
      "description": "The list of nodes in the fabric",
      "items": {
       "$ref": "#/components/schemas/configNode"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configGetLabelsResponse": {
    "description": "GetLabelsResponse is the output of GetLabels API.",
    "properties": {
     "labels": {
      "description": "list of tag objects.",
      "items": {
       "$ref": "#/components/schemas/configLabel"
      },
      "type": "array"
     },
     "pagination": {
      "$ref": "#/components/schemas/commonPaginationResponse"
     }
    },
    "type": "object"
   },
   "configGetLimitsResponse": {
    "description": "GetLimitsResponse encapsulates limits and restriction values.",
    "properties": {
     "maxAnnotations": {
      "description": "Maximum number of annotations per object.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxBgpPeersPerVrf": {
      "description": "Maximum number of BgpPeer objects per VRF.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxBgpPolicies": {
      "description": "Maximum number of BgpPolicy objects per org.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxBreakoutsPerNode": {
      "description": "Maximum number of breakouts per node.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxBreakoutsPerPort": {
      "description": "Maximum number of breakouts per port.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxDhcpRelays": {
      "description": "Maximum number of DHCP relay objects per fabric.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxEndpoints": {
      "description": "Maximum number of notification endpoints per org.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxInterfacesPerVrf": {
      "description": "Maximum number of interfaces per VRF.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxIpPrefixes": {
      "description": "Maximum number of IP prefixes per prefix list.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxLeaves": {
      "description": "Maximum number of leaves per fabric.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxLoopbackId": {
      "description": "Maximum identifier of a user-defined Loopback (Loopback99).",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxLoopbacksPerNode": {
      "description": "Maximum number of Loopback objects per node.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxNotificationEndpoints": {
      "description": "Maximum number of notification endpoints permitted per fabric.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxNotificationSettings": {
      "description": "Maximum number of fabrics that can subscribe to notifications.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxPortChannelId": {
      "description": "Maximum identifier of a PortChannel (PortChannel999).",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxPortChannels": {
      "description": "Maximum number of PortChannel objects per fabric.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxPortIndex": {
      "description": "Maximum value of port index.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxPrefixLists": {
      "description": "Maximum number of prefix lists per org.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxRouteGroupsPerFabric": {
      "description": "Maximum number of static route group per fabric.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxSpines": {
      "description": "Maximum number of spines per fabric.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxStaticRoutesPerGroup": {
      "description": "Maximum number of static routes per route group.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxStaticRoutesPerVrf": {
      "description": "Maximum number of static routes per route VRF.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxSubInfPerNode": {
      "description": "Maximum number of SubInterfaces per node.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxSubInfPerPort": {
      "description": "Maximum number of SubInterfaces per port.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxUserVlanId": {
      "description": "Maximum value of user-defined VlanId.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxUserVni": {
      "description": "Maximum value of user-defined VNI.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxVlanMembers": {
      "description": "Maximum number of members per Vni/Vlan.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxVnis": {
      "description": "Maximum number of L3/L2 VNI per fabric.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxVrfs": {
      "description": "Maximum number of VRF objects per fabric.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "minIpv4Mask": {
      "description": "Minimum value of IPv4 CIDR mask.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "minIpv6Mask": {
      "description": "Minimum value of IPv6 CIDR mask.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "minLoopbackId": {
      "description": "Minimum identifier of a user-defined Loopback (Loopback10).",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "minPortChannelId": {
      "description": "Minimum identifier of a PortChannel (PortChannel1).",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "minUserVlanId": {
      "description": "Minimum value of user-defined VlanId.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "minUserVni": {
      "description": "Minimum value of user-defined VNI.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "configGetOrgCertificateResponse": {
    "description": "Get an organization certificate.",
    "properties": {
     "certificate": {
      "$ref": "#/components/schemas/modelsCertificates"
     }
    },
    "type": "object"
   },
   "configGetOrgCertificatesResponse": {
    "description": "Get the organization certificates.",
    "properties": {
     "certificates": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsCertificates"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configHwPart": {
    "description": "Item encapsulates information for a given Hardware item.",
    "properties": {
     "modelName": {
      "description": "ModelName(or)PID of the item",
      "type": "string"
     },
     "name": {
      "description": "name of the hardware item part",
      "type": "string"
     },
     "partStatus": {
      "$ref": "#/components/schemas/configPartStatus"
     },
     "quantity": {
      "description": "number of the items",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "serialNumber": {
      "description": "serial number of the part",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configHwParts": {
    "description": "HwPart encapsulates the hardware items for a specific hardware type.",
    "properties": {
     "description": {
      "description": "description about the hardware part",
      "type": "string"
     },
     "parts": {
      "description": "list of items of the specific type",
      "items": {
       "$ref": "#/components/schemas/configHwPart"
      },
      "type": "array"
     },
     "totalQuantity": {
      "description": "total quantity of this specific hardware part",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "configLabel": {
    "description": "Tag encapsulates a tag and identifiers of objects associated with the tag.",
    "properties": {
     "bgpPeerIds": {
      "description": "A set of BgpPeer objects associated with the label.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "bgpPolicyIds": {
      "description": "A set of BgpPolicy associated with the label.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "dhcpRelayIds": {
      "description": "A set of DhcpRelays associated with the label.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "dscpConfigIds": {
      "description": "A set of DscpConfig objects associated with the label.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "enabled": {
      "description": "Indicates if tag is enabled or not. Enabled flag is useful in SetTags API. SetTags adds new tag when Enabled is true, and deletes existing tag when Enabled is false.",
      "type": "boolean"
     },
     "endpointIds": {
      "description": "A set of NotificationEndpoint objects associated with the label.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "fabricIds": {
      "description": "A set of fabrics associated with the label.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "ipmConfigIds": {
      "description": "A set of IpmConfig objects associated with the label.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "loopbackIds": {
      "description": "A set of Loopback devices associated with the label.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "name": {
      "description": "The label name. Tag name must comply with following rules.  a) Name must be a string of fewer than 64 characters.  b) Name must not begin with ##.  c) Name must not have comma \",\" in it.",
      "type": "string"
     },
     "networkPortIds": {
      "description": "A set of network ports associated with the label.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "nodeIds": {
      "description": "A set of nodes associated with the label.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "portBreakoutIds": {
      "description": "A set of PortBreakout objects associated with the label.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "portChannelIds": {
      "description": "A set of port channels associated with the label.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "prefixListIds": {
      "description": "A set of PrefixList objects associated with the label.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "staticRouteIds": {
      "description": "A set of StaticRoutes associated with the label.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "subInterfaceIds": {
      "description": "A set of SubInterfaces associated with the label.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "vniIds": {
      "description": "A set of Vnis associated with the label.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "vrfIds": {
      "description": "A set of Vrfs associated with the label.",
      "items": {
       "type": "string"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configLatchUnlatchAssertionsRequest": {
    "description": "The request to latch/unlatch a list of assertions of a specific fabric.",
    "properties": {
     "assertions": {
      "description": "The list of assertions to be latched or unlatched.",
      "items": {
       "$ref": "#/components/schemas/assertionsAssertion"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configLatchUnlatchAssertionsResponse": {
    "description": "The response returned to a request to latch/unlatch a list of assertions of a specific fabric.",
    "properties": {
     "assertions": {
      "description": "The list of updated assertions with their new latch state.",
      "items": {
       "$ref": "#/components/schemas/assertionsAssertion"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configManagementPortsResponse": {
    "description": "The response returned to a request for the list of management ports of a specific node in a fabric.",
    "properties": {
     "ports": {
      "description": "The list of management ports of a specific node.",
      "items": {
       "$ref": "#/components/schemas/modelsManagementPort"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configNode": {
    "description": "A Node is a logical representation of a device in a fabric that allows the separation to the logical configuration from the actual physical device simplifying RMA and hardware replacements. When associated or bound to a node, a device assumes the node identity and all its associated configuration. A node can be pre-configured and referenced in other fabric level constructs such as VRFs, VNIs and Link Aggregation Groups (LAGs) before a device is bound to it allowing for pre-configuration of a complete fabric.",
    "properties": {
     "annotations": {
      "description": "A list of name-value annotations to store user-defined data including complex data such as JSON associated with the node.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "description": {
      "description": "The description is a user-defined field to store notes about the node.",
      "type": "string"
     },
     "deviceId": {
      "description": "The unique identifier of the device associated with the node.",
      "type": "string"
     },
     "enabled": {
      "description": "This is a read-only field. The enabled state of the node which indicates if the node is enabled or disabled.",
      "readOnly": true,
      "type": "boolean"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering nodes.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "location": {
      "description": "The location is a user-defined field to store information about the location of the node (E.g. SJC01).",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "modelName": {
      "description": "The name of the hardware model of the node.",
      "type": "string"
     },
     "name": {
      "description": "The user-defined name of the node. The name is used as hostname for the node and need to comply with DNS restrictions, is case-insensitive and must be unique in the organization.",
      "type": "string"
     },
     "nodeId": {
      "description": "This is a read-only field. The unique identifier of the node.",
      "readOnly": true,
      "type": "string"
     },
     "psuAirflows": {
      "description": "Airflows and corresponding psu models of the node.",
      "items": {
       "$ref": "#/components/schemas/modelsPsuAirflow"
      },
      "type": "array"
     },
     "roles": {
      "description": "A list of roles for the node.",
      "items": {
       "$ref": "#/components/schemas/modelsNodeRole"
      },
      "type": "array"
     },
     "serialNumber": {
      "description": "The serial number of the device associated with the node.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configNodeHwPart": {
    "description": "NodePart encapsulates information related to Node Hardware parts.",
    "properties": {
     "description": {
      "description": "Description not available",
      "type": "string"
     },
     "fanParts": {
      "description": "Fan supply related parts of the node",
      "items": {
       "$ref": "#/components/schemas/configHwParts"
      },
      "type": "array"
     },
     "modelName": {
      "description": "model name(or)pid of the node",
      "type": "string"
     },
     "nodeName": {
      "description": "node name in the fabric",
      "type": "string"
     },
     "opticsHwParts": {
      "description": "port optics pluggable parts of the node",
      "items": {
       "$ref": "#/components/schemas/configHwParts"
      },
      "type": "array"
     },
     "partStatus": {
      "$ref": "#/components/schemas/configPartStatus"
     },
     "powerSupplyParts": {
      "description": "Power supply related parts of the node",
      "items": {
       "$ref": "#/components/schemas/configHwParts"
      },
      "type": "array"
     },
     "serialNumber": {
      "description": "serial number of the node if already bound",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configNodeLoopbacksResponse": {
    "description": "Description not available",
    "properties": {
     "loopbacks": {
      "description": "A list of loopbacks",
      "items": {
       "$ref": "#/components/schemas/modelsLoopback"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configNodePortBreakoutsResponse": {
    "description": "Description not available",
    "properties": {
     "breakouts": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsPortBreakout"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configNodeSubInterfacesResponse": {
    "description": "Description not available",
    "properties": {
     "subInterfaces": {
      "description": "A list of sub-interfaces",
      "items": {
       "$ref": "#/components/schemas/modelsSubInterface"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configNotificationSettingsResponse": {
    "description": "Returns a list of fabrics where notifications are enabled.",
    "properties": {
     "settings": {
      "description": "A list of fabrics with notification settings configured.",
      "items": {
       "$ref": "#/components/schemas/modelsNotificationSettings"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configPartStatus": {
    "default": "PART_STATUS_NEW",
    "description": "PartStatus encapsulates status of a specific part.",
    "enum": [
     "PART_STATUS_NEW",
     "PART_STATUS_DEPLOYED",
     "PART_STATUS_DETECTED"
    ],
    "type": "string"
   },
   "configPortChannelsResponse": {
    "description": "The request for the list of port channels in a specific fabric.",
    "properties": {
     "portChannels": {
      "description": "The list of port channels in the fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsPortChannel"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configPortsResponse": {
    "description": "The response returned to a request for the list of ports of a specific node in fabric.",
    "properties": {
     "ports": {
      "description": "The list of ports of the node.",
      "items": {
       "$ref": "#/components/schemas/modelsNetworkPort"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configProvisionFabrics": {
    "description": "ProvisionFabrics encapsulates request messages to create/modify/delete Fabric and Fabric child objects such as Node, NetworkPort etc.",
    "properties": {
     "bindDevices": {
      "description": "A set of messages to bind a device to a node.",
      "items": {
       "$ref": "#/components/schemas/configBindDevice"
      },
      "type": "array"
     },
     "delConnections": {
      "description": "A set of connection identifiers.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "delFabricSwConf": {
      "description": "a set of fabric software configurations to delete",
      "items": {
       "$ref": "#/components/schemas/modelsFabricSoftwareConfig"
      },
      "type": "array"
     },
     "delFabrics": {
      "description": "A set of fabrics identifiers to delete.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "delInventories": {
      "description": "A set of inventory switch identifiers.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "delNodes": {
      "description": "A set of node identifiers to delete.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "delPortBreakouts": {
      "description": "A set of PortBreakout object identifiers to delete.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "deleteFabricDesigns": {
      "description": "A set of fabric identifiers for the designs to delete",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "resetNetworkPorts": {
      "description": "Reset configs of a set of network ports.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "setConnections": {
      "description": "A set of port connections.",
      "items": {
       "$ref": "#/components/schemas/modelsPortConnection"
      },
      "type": "array"
     },
     "setFabricDesigns": {
      "description": "create or update the design of a fabric",
      "items": {
       "$ref": "#/components/schemas/modelsFabricDesign"
      },
      "type": "array"
     },
     "setFabricSwConf": {
      "description": "A set of fabric software configurations to set",
      "items": {
       "$ref": "#/components/schemas/modelsFabricSoftwareConfig"
      },
      "type": "array"
     },
     "setFabrics": {
      "description": "A set of fabrics to create/update.",
      "items": {
       "$ref": "#/components/schemas/modelsFabric"
      },
      "type": "array"
     },
     "setNetworkPorts": {
      "description": "A set of network ports to be modified.",
      "items": {
       "$ref": "#/components/schemas/modelsNetworkPort"
      },
      "type": "array"
     },
     "setNodes": {
      "description": "A set of nodes to create/update.",
      "items": {
       "$ref": "#/components/schemas/modelsNode"
      },
      "type": "array"
     },
     "setPerVlanStps": {
      "description": "PerVlanStp config of the fabric,",
      "items": {
       "$ref": "#/components/schemas/modelsPerVlanStp"
      },
      "type": "array"
     },
     "setPortBreakouts": {
      "description": "A set of PortBreakout objects,",
      "items": {
       "$ref": "#/components/schemas/modelsPortBreakout"
      },
      "type": "array"
     },
     "setServerMgmtPorts": {
      "description": "A set of server management ports to be modified.",
      "items": {
       "$ref": "#/components/schemas/modelsServerMgmtPort"
      },
      "type": "array"
     },
     "unbindDevices": {
      "description": "A set of node identifiers to unbind devices from nodes.",
      "items": {
       "type": "string"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configProvisionRequest": {
    "description": "ProvisionRequest encapsulates provisioning requests. ProvisionRequest guarantees atomic (transactional) update of all objects contained in the request.",
    "properties": {
     "candidate": {
      "description": "The candidate name.",
      "type": "string"
     },
     "comments": {
      "description": "Candidate creation comments.",
      "type": "string"
     },
     "dryRun": {
      "description": "Is dry run or test-flight? (Return results, do not commit).",
      "type": "boolean"
     },
     "fabricId": {
      "description": "The global fabric identifier. FabricId is required for deletes.",
      "type": "string"
     },
     "fabrics": {
      "$ref": "#/components/schemas/configProvisionFabrics"
     },
     "revisionId": {
      "description": "The expected candidate revision identifier.",
      "type": "string"
     },
     "runCabling": {
      "description": "Controls whether or not cabling needs to be re-run",
      "type": "boolean"
     },
     "settings": {
      "$ref": "#/components/schemas/configProvisionSettings"
     },
     "tenants": {
      "$ref": "#/components/schemas/configProvisionTenants"
     }
    },
    "type": "object"
   },
   "configProvisionResponse": {
    "description": "Description not available",
    "properties": {
     "dryRun": {
      "description": "Is dry run or test-flight?",
      "type": "boolean"
     },
     "fabrics": {
      "$ref": "#/components/schemas/configProvisionFabrics"
     },
     "settings": {
      "$ref": "#/components/schemas/configProvisionSettings"
     },
     "tenants": {
      "$ref": "#/components/schemas/configProvisionTenants"
     }
    },
    "type": "object"
   },
   "configProvisionSettings": {
    "description": "ProvisionSettings encapsulates organization settings and org level policies.",
    "properties": {
     "delEndpoints": {
      "description": "A list of notification endpoint identifiers.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "delNotificationSettings": {
      "description": "A list of fabrics which are subscribed to notifications.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "delOrgCertificates": {
      "description": "A set of OrgCertificates identifiers.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "delPrefixLists": {
      "description": "A ser of IP prefix list identifiers.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "setAnnotations": {
      "description": "A set of annotations to be set or unset for a number of objects.",
      "items": {
       "$ref": "#/components/schemas/configAnnotation"
      },
      "type": "array"
     },
     "setEndpoints": {
      "description": "A set of notification endpoint objects.",
      "items": {
       "$ref": "#/components/schemas/modelsEndpoint"
      },
      "type": "array"
     },
     "setLabels": {
      "description": "A set of labels to be set or unset for a number of objects.",
      "items": {
       "$ref": "#/components/schemas/configLabel"
      },
      "type": "array"
     },
     "setNotificationSettings": {
      "description": "A set of fabrics which are subscribed to notifications.",
      "items": {
       "$ref": "#/components/schemas/modelsNotificationSettings"
      },
      "type": "array"
     },
     "setOrgCertificates": {
      "description": "A set of certificates.",
      "items": {
       "$ref": "#/components/schemas/modelsCertificates"
      },
      "type": "array"
     },
     "setOrgProperties": {
      "description": "A set of organization properties.",
      "items": {
       "$ref": "#/components/schemas/modelsOrgProperty"
      },
      "type": "array"
     },
     "setPrefixLists": {
      "description": "A set of IP prefix lists.",
      "items": {
       "$ref": "#/components/schemas/modelsPrefixList"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configProvisionTenants": {
    "description": "ProvisionTenants encapsulates request messages to create/modify/delete tenants and tenant objects.",
    "properties": {
     "delBgpPeers": {
      "description": "A set of BgpPeer object identifiers to delete.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "delBgpPolicies": {
      "description": "A set of BgpPolicy object identifiers to delete.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "delDhcpRelays": {
      "description": "A set of DhcpRelay object identifiers to delete.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "delDscpConfigs": {
      "description": "A set of DscpConfig object identifiers to delete.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "delIpmConfigs": {
      "description": "A set of IpmConfig object identifiers to delete.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "delLoopbacks": {
      "description": "A ser of Loopback identifiers.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "delPortChannels": {
      "description": "A set of port channel identifiers.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "delStaticRoutes": {
      "description": "A set of StaticRoutes object identifiers to delete.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "delSubInterfaces": {
      "description": "A set of SubInterface object identifiers to delete.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "delTenants": {
      "description": "A set of tenant identifiers to delete.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "delVnis": {
      "description": "A set of Vni object identifiers to delete.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "delVrfs": {
      "description": "A set of Vrf names to delete.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "setBgpPeers": {
      "description": "A set of BgpPeer objects,",
      "items": {
       "$ref": "#/components/schemas/modelsBgpPeer"
      },
      "type": "array"
     },
     "setBgpPolicies": {
      "description": "A set of BgpPolicy objects.",
      "items": {
       "$ref": "#/components/schemas/modelsBgpPolicy"
      },
      "type": "array"
     },
     "setDhcpRelays": {
      "description": "A set of DhcpRelay objects,",
      "items": {
       "$ref": "#/components/schemas/modelsDhcpRelay"
      },
      "type": "array"
     },
     "setDscpConfigs": {
      "description": "A set of DscpConfig objects,",
      "items": {
       "$ref": "#/components/schemas/modelsDscpConfig"
      },
      "type": "array"
     },
     "setIpmConfigs": {
      "description": "A set of IpmConfig objects,",
      "items": {
       "$ref": "#/components/schemas/modelsIpmConfig"
      },
      "type": "array"
     },
     "setLoopbacks": {
      "description": "A set of Loopback objects.",
      "items": {
       "$ref": "#/components/schemas/modelsLoopback"
      },
      "type": "array"
     },
     "setPortChannels": {
      "description": "A set of port channel (LAG) objects.",
      "items": {
       "$ref": "#/components/schemas/modelsPortChannel"
      },
      "type": "array"
     },
     "setStaticRoutes": {
      "description": "A set of StaticRoutes objects,",
      "items": {
       "$ref": "#/components/schemas/modelsStaticRoutes"
      },
      "type": "array"
     },
     "setSubInterfaces": {
      "description": "A set of SubInterface objects,",
      "items": {
       "$ref": "#/components/schemas/modelsSubInterface"
      },
      "type": "array"
     },
     "setVnis": {
      "description": "A set of Vni objects,",
      "items": {
       "$ref": "#/components/schemas/modelsVni"
      },
      "type": "array"
     },
     "setVrfs": {
      "description": "A set of Vrf objects,",
      "items": {
       "$ref": "#/components/schemas/modelsVrf"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configResendCodeForEndpointRequest": {
    "description": "Resend a confirmation code for an endpoint.",
    "properties": {
     "endpointId": {
      "description": "The endpoint id or name.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configReviewFabricCandidateRequest": {
    "description": "The request to add review comments to a specific candidate configuration of a fabric.",
    "properties": {
     "comments": {
      "description": "The comments to be added as a review to the candidate configuration.",
      "type": "string"
     },
     "fabricId": {
      "description": "The fabric id or name.",
      "type": "string"
     },
     "name": {
      "description": "The candidate configuration name.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configReviewFabricCandidateResponse": {
    "description": "The response to a request to add review comments to a specific candidate configuration of a fabric.",
    "properties": {
     "fabricId": {
      "description": "The fabric identifier.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "configSetFabricConnectionsRequest": {
    "description": "The request to update the list of connections in a specific fabric.",
    "properties": {
     "connections": {
      "description": "The list of connections for the fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsPortConnection"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configSetNotificationSettingsRequest": {
    "description": "Set notification settings for all fabrics.",
    "properties": {
     "settings": {
      "description": "A list of fabrics with notification settings configured.",
      "items": {
       "$ref": "#/components/schemas/modelsNotificationSettings"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configSetPortsRequest": {
    "description": "The request to update the list of ports of a specific node in a fabric.",
    "properties": {
     "ports": {
      "description": "The list of ports of the node.",
      "items": {
       "$ref": "#/components/schemas/modelsNetworkPort"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configTenantObjects": {
    "description": "TenantObjects defines an envelope to hold tenant objects.",
    "properties": {
     "bgpPeers": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsBgpPeer"
      },
      "type": "array"
     },
     "bgpPolicies": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsBgpPolicy"
      },
      "type": "array"
     },
     "candidate": {
      "description": "The transaction name.",
      "type": "string"
     },
     "dhcpRelays": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsDhcpRelay"
      },
      "type": "array"
     },
     "dscpConfigs": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsDscpConfig"
      },
      "type": "array"
     },
     "enabled": {
      "description": "Description not available",
      "type": "boolean"
     },
     "id": {
      "description": "Description not available",
      "type": "string"
     },
     "ipmConfigs": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsIpmConfig"
      },
      "type": "array"
     },
     "loopbacks": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsLoopback"
      },
      "type": "array"
     },
     "name": {
      "description": "Description not available",
      "type": "string"
     },
     "portChannels": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsPortChannel"
      },
      "type": "array"
     },
     "staticRoutes": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsStaticRoutes"
      },
      "type": "array"
     },
     "subInterfaces": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsSubInterface"
      },
      "type": "array"
     },
     "vlans": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsVlan"
      },
      "type": "array"
     },
     "vnis": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsVni"
      },
      "type": "array"
     },
     "vrfs": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsVrf"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configTenantsObjectsResponse": {
    "description": "TenantsObjectsResponse encapsulates fabric's tenant objects.",
    "properties": {
     "tenants": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/configTenantObjects"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configUpdateFabricSoftwareModeRequest": {
    "description": "UpdateFabricSoftwareModeRequest sets turn on/off the maintenance mode",
    "properties": {
     "fabricId": {
      "description": "The fabric id or name",
      "type": "string"
     },
     "softwareMode": {
      "$ref": "#/components/schemas/modelsSoftwareMode"
     }
    },
    "type": "object"
   },
   "configUpdateFabricSoftwareNodeImagesRequest": {
    "description": "UpdateFabricSoftwareNodeImagesRequest updates the node image configurations",
    "properties": {
     "fabricId": {
      "description": "The fabric id or name",
      "type": "string"
     },
     "nodeImages": {
      "description": "The list of node images",
      "items": {
       "$ref": "#/components/schemas/modelsNodeImageUpdate"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "configUpdateFabricSoftwareRunningImageRequest": {
    "description": "UpdateFabricSoftwareRunningImageRequest updates the fabric's running image configuration",
    "properties": {
     "fabricId": {
      "description": "The fabric id or name",
      "type": "string"
     },
     "runningImage": {
      "$ref": "#/components/schemas/modelsFabricImageUpdate"
     }
    },
    "type": "object"
   },
   "configUpdateFabricSoftwareTargetImageRequest": {
    "description": "UpdateFabricSoftwareTargetImageRequest updates the fabric's target image configuration",
    "properties": {
     "fabricId": {
      "description": "The fabric id or name",
      "type": "string"
     },
     "targetImage": {
      "$ref": "#/components/schemas/modelsFabricImageUpdate"
     }
    },
    "type": "object"
   },
   "configUpdateOrgCertificateResponse": {
    "description": "Response for updating an organization certificate.",
    "properties": {
     "certificate": {
      "$ref": "#/components/schemas/modelsCertificates"
     }
    },
    "type": "object"
   },
   "configVerifyEndpointCode": {
    "description": "Description not available",
    "properties": {
     "code": {
      "description": "The verification code.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "druidAssertHistoryRecord": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "description": "The assertion state, new or resolved",
      "type": "string"
     },
     "assertType": {
      "description": "The assert type value as set in the schema-path.",
      "type": "string"
     },
     "breakout": {
      "description": "breakout as in various assert schema-paths",
      "type": "string"
     },
     "category": {
      "description": "The assertion category",
      "type": "string"
     },
     "childId": {
      "description": "The object identifier of child object.",
      "type": "string"
     },
     "device": {
      "description": "device mac address string",
      "type": "string"
     },
     "fabric": {
      "description": "The fabric uuid",
      "type": "string"
     },
     "highCpuUtil": {
      "description": "The high_cpu_util flag as set in AssertHighSwitchResourceUsage.",
      "type": "string"
     },
     "highDiskUtil": {
      "description": "The high_disk_util as set in AssertHighSwitchResourceUsage.",
      "type": "string"
     },
     "highMemUtil": {
      "description": "The high_mem_util as set in AssertHighSwitchResourceUsage.",
      "type": "string"
     },
     "implicit": {
      "description": "implicit assert flag as set in assert config data",
      "type": "string"
     },
     "lastTrafficBytes": {
      "description": "last_traffic_bytes as in AssertVlanHasTraffic",
      "type": "string"
     },
     "lastTrafficTime": {
      "description": "last_traffic_time as in AssertVlanHasTraffic",
      "type": "string"
     },
     "latchTime": {
      "description": "The latch_time as in all types of assert config data",
      "type": "string"
     },
     "latchedAt": {
      "description": "latched_at as in all types of assert config data.",
      "type": "string"
     },
     "lineCard": {
      "description": "line_card as in various assert schema-paths",
      "type": "string"
     },
     "localPortSpeed": {
      "description": "local_port_speed as in AssertPortConnectionSpeedMatch",
      "type": "string"
     },
     "managementState": {
      "description": "The management state as set in the config data.",
      "type": "string"
     },
     "masked": {
      "description": "The flag indicates if the assertion is masked.",
      "type": "string"
     },
     "nodeId": {
      "description": "The node uuid associated with the device",
      "type": "string"
     },
     "numNeighbors": {
      "description": "num_neighbors as in AssertPortExpectedNeighbor",
      "type": "string"
     },
     "objectId": {
      "description": "The object identifier.",
      "type": "string"
     },
     "objectName": {
      "description": "The user defined object name..",
      "type": "string"
     },
     "objectType": {
      "description": "The type of the object that triggered the event.",
      "type": "string"
     },
     "operation": {
      "description": "The type of user operation.",
      "type": "string"
     },
     "orgId": {
      "description": "The Org UUID as set in the assert config data.",
      "type": "string"
     },
     "parentId": {
      "description": "The object identifier of parent object.",
      "type": "string"
     },
     "port": {
      "description": "Unique identifier of a port within a device",
      "type": "string"
     },
     "portName": {
      "description": "port name as set in the assert config data.",
      "type": "string"
     },
     "recentTrafficBytes": {
      "description": "last_traffic_bytes as in AssertVlanHasTraffic",
      "type": "string"
     },
     "remoteDeviceId": {
      "description": "remote device mac address",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "The node uuid associated with the remote device",
      "type": "string"
     },
     "remotePortName": {
      "description": "remote_port_name is the LldpRemPortDesc stored in AssertPortLinkDown and AssertPortExpectedNeighbor",
      "type": "string"
     },
     "rowCount": {
      "description": "Standard count metric",
      "type": "string"
     },
     "time": {
      "description": "Time at which the assertion were modified.",
      "format": "date-time",
      "type": "string"
     },
     "txnId": {
      "description": "The database transaction id",
      "type": "string"
     },
     "username": {
      "description": "The user who triggered the activity event.",
      "type": "string"
     },
     "vlanState": {
      "description": "vlan_state as in SchemaPathAssertConfigVlanHasTraffic.",
      "type": "string"
     },
     "vrf": {
      "description": "vrf as set in AssertStaticDefaultRouteExists.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "druidAssertHistoryRecordResponse": {
    "description": "The top-level response object that encapsulates the assert_history_record query response data.",
    "properties": {
     "assertHistoryRecord": {
      "description": "A list of AssertHistoryRecord update events.",
      "items": {
       "$ref": "#/components/schemas/druidAssertHistoryRecord"
      },
      "type": "array"
     },
     "pagination": {
      "$ref": "#/components/schemas/commonPaginationResponse"
     }
    },
    "type": "object"
   },
   "druidPortCounterHistoryRecord": {
    "description": "Description not available",
    "properties": {
     "device": {
      "description": "Unique identifier of a chassis within a fabric, eg. chassis/lc id.",
      "type": "string"
     },
     "fabric": {
      "description": "Unique identifier of a fabric instance.",
      "type": "string"
     },
     "inDiscards": {
      "description": "total input packets discarded.",
      "type": "string"
     },
     "inErrors": {
      "description": "total input error packets.",
      "type": "string"
     },
     "inOctets": {
      "description": "total input byte count.",
      "type": "string"
     },
     "inPfc0Pkts": {
      "description": "total in pfc0 packets.",
      "type": "string"
     },
     "inPfc1Pkts": {
      "description": "total in pfc1 packets.",
      "type": "string"
     },
     "inPfc2Pkts": {
      "description": "total in pfc2 packets.",
      "type": "string"
     },
     "inPfc3Pkts": {
      "description": "total in pfc3 packets.",
      "type": "string"
     },
     "inPfc4Pkts": {
      "description": "total in pfc4 packets.",
      "type": "string"
     },
     "inPfc5Pkts": {
      "description": "total in pfc5 packets.",
      "type": "string"
     },
     "inPfc6Pkts": {
      "description": "total in pfc6 packets.",
      "type": "string"
     },
     "inPfc7Pkts": {
      "description": "total in pfc7 packets.",
      "type": "string"
     },
     "inPkts": {
      "description": "total input packet count.",
      "type": "string"
     },
     "orgId": {
      "description": "Org UUID that this peering session belongs to.",
      "type": "string"
     },
     "outDiscards": {
      "description": "total output packets discarded.",
      "type": "string"
     },
     "outErrors": {
      "description": "total output error packets.",
      "type": "string"
     },
     "outOctets": {
      "description": "total output byte count.",
      "type": "string"
     },
     "outPfc0Pkts": {
      "description": "total out pfc0 packets.",
      "type": "string"
     },
     "outPfc1Pkts": {
      "description": "total out pfc1 packets.",
      "type": "string"
     },
     "outPfc2Pkts": {
      "description": "total out pfc2 packets.",
      "type": "string"
     },
     "outPfc3Pkts": {
      "description": "total out pfc3 packets.",
      "type": "string"
     },
     "outPfc4Pkts": {
      "description": "total out pfc4 packets.",
      "type": "string"
     },
     "outPfc5Pkts": {
      "description": "total out pfc5 packets.",
      "type": "string"
     },
     "outPfc6Pkts": {
      "description": "total out pfc6 packets.",
      "type": "string"
     },
     "outPfc7Pkts": {
      "description": "total out pfc7 packets.",
      "type": "string"
     },
     "outPkts": {
      "description": "total output packet count.",
      "type": "string"
     },
     "portId": {
      "description": "Unique identifier of a port within a device",
      "type": "string"
     },
     "rowCount": {
      "description": "Standard count metric",
      "type": "string"
     },
     "rxMinuteRate": {
      "description": "rx bit rate",
      "type": "string"
     },
     "time": {
      "description": "Time at which the port stats were collected by agent.",
      "format": "date-time",
      "type": "string"
     },
     "txMinuteRate": {
      "description": "tx bit rate",
      "type": "string"
     }
    },
    "type": "object"
   },
   "druidPortCounterHistoryRecordResponse": {
    "description": "The top-level response object that encapsulates the port_counter_history_record query response data.",
    "properties": {
     "pagination": {
      "$ref": "#/components/schemas/commonPaginationResponse"
     },
     "portCounterHistoryRecord": {
      "description": "A list of PortCounterHistoryRecord update events.",
      "items": {
       "$ref": "#/components/schemas/druidPortCounterHistoryRecord"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "druidPortStateHistoryRecord": {
    "description": "Description not available",
    "properties": {
     "adminState": {
      "$ref": "#/components/schemas/modelsAdminState"
     },
     "device": {
      "description": "Unique identifier of a chassis within a fabric, eg. chassis/lc id.",
      "type": "string"
     },
     "fabric": {
      "description": "Unique identifier of a fabric instance.",
      "type": "string"
     },
     "ipV4": {
      "description": "port ipv4 address",
      "type": "string"
     },
     "opState": {
      "$ref": "#/components/schemas/modelsOperState"
     },
     "orgId": {
      "description": "Org UUID that this peering session belongs to.",
      "type": "string"
     },
     "portId": {
      "description": "Unique identifier of a port within a device",
      "type": "string"
     },
     "rowCount": {
      "description": "Standard count metric",
      "type": "string"
     },
     "time": {
      "description": "Time at which the port stats were collected by agent.",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "druidPortStateHistoryRecordResponse": {
    "description": "The top-level response object that encapsulates the port_state_history_record query response data.",
    "properties": {
     "pagination": {
      "$ref": "#/components/schemas/commonPaginationResponse"
     },
     "portStateHistoryRecord": {
      "description": "A list of PortStateHistoryRecord update events.",
      "items": {
       "$ref": "#/components/schemas/druidPortStateHistoryRecord"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "miscDevice": {
    "description": "A Device is a physical device such as a Cisco 6000 switch managed by Cisco Nexus Hyperfabric that can be bound to a node in a fabric.",
    "properties": {
     "claimedAt": {
      "description": "The timestamp at which the device was claimed.",
      "format": "date-time",
      "type": "string"
     },
     "deviceId": {
      "description": "The device identifier of the device.",
      "type": "string"
     },
     "fabricId": {
      "description": "The unique identifier of the fabric of the node to which the device is bound.",
      "type": "string"
     },
     "fabricName": {
      "description": "The name of the fabric that the devices belongs to.",
      "type": "string"
     },
     "modelName": {
      "description": "The model name of the device.",
      "type": "string"
     },
     "name": {
      "description": "The name of the device.",
      "type": "string"
     },
     "nodeId": {
      "description": "The unique identifier of the node to which the device is bound.",
      "type": "string"
     },
     "nodeType": {
      "$ref": "#/components/schemas/modelsNodeType"
     },
     "roles": {
      "description": "A list of roles associated with the node to which the device is bound.",
      "items": {
       "$ref": "#/components/schemas/modelsNodeRole"
      },
      "type": "array"
     },
     "serialNumber": {
      "description": "The serial number of the device.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "miscDiscordAccount": {
    "description": "DiscordAccount represents a remote Discord user account.",
    "properties": {
     "channelId": {
      "description": "Discord channel id.",
      "type": "string"
     },
     "channelName": {
      "description": "Discord channel name.",
      "type": "string"
     },
     "guildId": {
      "description": "Discord server id.",
      "type": "string"
     },
     "guildName": {
      "description": "Discord server name.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "miscEnvLedStatus": {
    "default": "GREEN",
    "description": "EnvLedStatus defines an enumeration of LED states.",
    "enum": [
     "GREEN",
     "RED",
     "OFF"
    ],
    "type": "string"
   },
   "miscEnvStatus": {
    "default": "OK",
    "description": "EnvStatus defines an enumeration of hardware operational states.",
    "enum": [
     "OK",
     "NOT_OK",
     "WARNING",
     "NOT_PRESENT"
    ],
    "type": "string"
   },
   "miscFabricImageInfo": {
    "description": "Message to provide the image information that has been applied to a fabric",
    "properties": {
     "docLink": {
      "description": "The release document link",
      "type": "string"
     },
     "expireAt": {
      "description": "The expected image expire time",
      "format": "date-time",
      "type": "string"
     },
     "fabricId": {
      "description": "The fabric id",
      "type": "string"
     },
     "fabricName": {
      "description": "The fabric name",
      "type": "string"
     },
     "releaseAt": {
      "description": "The time when this image is applied to the fabric",
      "format": "date-time",
      "type": "string"
     },
     "tag": {
      "description": "The image release tag",
      "type": "string"
     }
    },
    "type": "object"
   },
   "miscFan": {
    "description": "Fan encapsulates information related to fans, similar to schema.proto but including device_id instead of the schema path id",
    "properties": {
     "collectedAt": {
      "description": "The time the data was last collected in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (e.g. `YYYY-MM-DDTHH:MM:SSZ`).",
      "format": "date-time",
      "type": "string"
     },
     "deviceId": {
      "description": "The id of the device for the fan.",
      "type": "string"
     },
     "direction": {
      "$ref": "#/components/schemas/miscFanDirection"
     },
     "drawer": {
      "description": "The tray or drawer to which the Fan belongs to.",
      "type": "string"
     },
     "ledStatus": {
      "$ref": "#/components/schemas/miscEnvLedStatus"
     },
     "model": {
      "description": "The model name of the Fan.",
      "type": "string"
     },
     "name": {
      "description": "The name of the Fan.",
      "type": "string"
     },
     "serial": {
      "description": "The serial number of the Fan.",
      "type": "string"
     },
     "speed": {
      "description": "The Fan speed as a percentage of the maximum rated speed.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "status": {
      "$ref": "#/components/schemas/miscEnvStatus"
     }
    },
    "type": "object"
   },
   "miscFanDirection": {
    "default": "INTAKE",
    "description": "FanDirection defines an enumeration of airflow directions for of Fan.",
    "enum": [
     "INTAKE",
     "EXHAUST"
    ],
    "type": "string"
   },
   "miscFecType": {
    "default": "FEC_TYPE_NONE",
    "description": "Description not available",
    "enum": [
     "FEC_TYPE_NONE",
     "FEC_TYPE_RS",
     "FEC_TYPE_FC",
     "FEC_TYPE_BASER"
    ],
    "type": "string"
   },
   "miscGetAllFansResponse": {
    "description": "Description not available",
    "properties": {
     "fans": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/miscFan"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "miscGetAllPluggablesResponse": {
    "description": "Description not available",
    "properties": {
     "pluggables": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/miscQsfpInfo"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "miscGetAllPsusResponse": {
    "description": "Description not available",
    "properties": {
     "psus": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/miscPsu"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "miscGetCandidateInfoWithPasscodeRequest": {
    "description": "GetCandidateInfoWithPasscodeRequest validates the totp passcode and retrieves the remote chat user account candidate information associated with the passcode.",
    "properties": {
     "passcode": {
      "description": "Time based one time passcode generated by the chatbot app to validate the linked account request",
      "type": "string"
     }
    },
    "type": "object"
   },
   "miscGetCandidateInfoWithPasscodeResponse": {
    "description": "GetCandidateInfoWithPasscodeResponse is the response to GetCandidateInfoWithTotpRequest.",
    "properties": {
     "candidate": {
      "$ref": "#/components/schemas/miscLinkedAccountCandidate"
     }
    },
    "type": "object"
   },
   "miscGetDevicesForOrgResponse": {
    "description": "Description not available",
    "properties": {
     "devices": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/miscDevice"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "miscGetDiscoveredDevicesResponse": {
    "description": "GetDiscoveredDeviceResponse defines the response of getting discovered device for spider claim",
    "properties": {
     "devices": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsDiscoveredDevice"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "miscGetImageTargetsResponse": {
    "description": "Message to provide the list of target images",
    "properties": {
     "fabricImages": {
      "description": "The list of the images updated in the past lookback_days",
      "items": {
       "$ref": "#/components/schemas/miscFabricImageInfo"
      },
      "type": "array"
     },
     "latest": {
      "$ref": "#/components/schemas/miscReleaseImageInfo"
     },
     "otherImages": {
      "description": "The list of the available images other than the latest released in the past lookback_days",
      "items": {
       "$ref": "#/components/schemas/miscReleaseImageInfo"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "miscGetInventoryCountsResponse": {
    "description": "Description not available",
    "properties": {
     "fanCounts": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/miscInventoryCount"
      },
      "type": "array"
     },
     "pluggableCounts": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/miscInventoryCount"
      },
      "type": "array"
     },
     "psuCounts": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/miscInventoryCount"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "miscGetInvitationsResponse": {
    "description": "GetInvitationsResponse defines the response to GetInvitationsRequest. It contains a set of the chatbot invitation entries",
    "properties": {
     "invitations": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/miscInvitation"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "miscGetLinkedAccountsResponse": {
    "description": "GetLinkedAccountsResponse is the response of GetLinkedAccountsRequest. It includes a list of LinkedAccount records.",
    "properties": {
     "linkedAccounts": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/miscLinkedAccount"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "miscInventoryCount": {
    "description": "Description not available",
    "properties": {
     "count": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "name": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "miscInvitation": {
    "description": "Invitation represents a chatbot distribution pointer for a particular platform. The end user can use the invitation entry to add the chatbot to a chat space. The actual nature of the invitation entry varies from platform to platform. For Discord, it's a URL. For Webex, it's the bot username in the form of an email address.",
    "properties": {
     "chatPlatform": {
      "$ref": "#/components/schemas/modelsChatPlatform"
     },
     "entry": {
      "description": "Bot invitation link or in case of webex bot, bot username (email)",
      "type": "string"
     }
    },
    "type": "object"
   },
   "miscLinkedAccount": {
    "description": "LinkedAccount associates a remote chatbot user account with a local user and tenant.",
    "properties": {
     "accountId": {
      "description": "Account id of the linked account.",
      "type": "string"
     },
     "adminState": {
      "$ref": "#/components/schemas/modelsAdminState"
     },
     "chatPlatform": {
      "$ref": "#/components/schemas/modelsChatPlatform"
     },
     "discordAccount": {
      "$ref": "#/components/schemas/miscDiscordAccount"
     },
     "userName": {
      "description": "Local virtual username with \"BOTS\" provider to be linked with a remote account candidate.",
      "type": "string"
     },
     "webexAccount": {
      "$ref": "#/components/schemas/miscWebexAccount"
     }
    },
    "type": "object"
   },
   "miscLinkedAccountCandidate": {
    "description": "LinkedAccountCandidate encapsulates the information about a remote chatbot user account candidate. The actual candidate information is chat platform specific. It is associated with a passcode. For example, for Discord, the remote candidate account is represented by a guild id and channel id. GetCandidateInfoWithTotpResponse returns a LinkedAccountCandidate as content.",
    "properties": {
     "chatPlatform": {
      "$ref": "#/components/schemas/modelsChatPlatform"
     },
     "discordAccount": {
      "$ref": "#/components/schemas/miscDiscordAccount"
     },
     "passcode": {
      "description": "Time based one time passcode generated by the chatbot app to validate the linked account request.",
      "type": "string"
     },
     "webexAccount": {
      "$ref": "#/components/schemas/miscWebexAccount"
     }
    },
    "type": "object"
   },
   "miscNeighborType": {
    "default": "DRAKE_FABRIC",
    "description": "Description not available",
    "enum": [
     "DRAKE_FABRIC",
     "DRAKE_NOT_FABRIC"
    ],
    "type": "string"
   },
   "miscPsu": {
    "description": "A PSU represents an hardware power supply unit of a Device.",
    "properties": {
     "current": {
      "description": "The input current of the PSU in amperes (A).",
      "format": "float",
      "type": "number"
     },
     "deviceId": {
      "description": "The id of the device for the fan.",
      "type": "string"
     },
     "fanSpeed": {
      "description": "The fan speed as a percentage of the maximum rated speed",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "ledStatus": {
      "$ref": "#/components/schemas/miscEnvLedStatus"
     },
     "model": {
      "description": "The model name of the PSU.",
      "type": "string"
     },
     "name": {
      "description": "The name of the PSU.",
      "type": "string"
     },
     "serial": {
      "description": "The serial number of the PSU.",
      "type": "string"
     },
     "status": {
      "$ref": "#/components/schemas/miscEnvStatus"
     },
     "voltage": {
      "description": "The input voltage of the PSU in volts (V).",
      "format": "float",
      "type": "number"
     },
     "watts": {
      "description": "The power usage of the PSU.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "miscQsfpAdvertisedAutoNegotiation": {
    "default": "QSFP_ADVERTISED_AUTO_NEGOTIATION_YES",
    "description": "Description not available",
    "enum": [
     "QSFP_ADVERTISED_AUTO_NEGOTIATION_YES",
     "QSFP_ADVERTISED_AUTO_NEGOTIATION_NO"
    ],
    "type": "string"
   },
   "miscQsfpAutoNegotiation": {
    "default": "QSFP_AUTO_NEGOTIATION_ON",
    "description": "Description not available",
    "enum": [
     "QSFP_AUTO_NEGOTIATION_ON",
     "QSFP_AUTO_NEGOTIATION_OFF"
    ],
    "type": "string"
   },
   "miscQsfpDuplex": {
    "default": "FULL",
    "description": "Description not available",
    "enum": [
     "FULL",
     "HALF"
    ],
    "type": "string"
   },
   "miscQsfpInfo": {
    "description": "Information about a pluggable transceiver connected to a switch",
    "properties": {
     "activeApselHostlane1": {
      "description": "access point selection hostnames",
      "type": "boolean"
     },
     "activeApselHostlane2": {
      "description": "Description not available",
      "type": "boolean"
     },
     "activeApselHostlane3": {
      "description": "Description not available",
      "type": "boolean"
     },
     "activeApselHostlane4": {
      "description": "Description not available",
      "type": "boolean"
     },
     "activeApselHostlane5": {
      "description": "Description not available",
      "type": "boolean"
     },
     "activeApselHostlane6": {
      "description": "Description not available",
      "type": "boolean"
     },
     "activeApselHostlane7": {
      "description": "Description not available",
      "type": "boolean"
     },
     "activeApselHostlane8": {
      "description": "Description not available",
      "type": "boolean"
     },
     "activeFirmware": {
      "description": "the QSFP active firmware",
      "type": "string"
     },
     "advertisedAutoNegotiation": {
      "$ref": "#/components/schemas/miscQsfpAdvertisedAutoNegotiation"
     },
     "advertisedFec": {
      "$ref": "#/components/schemas/miscFecType"
     },
     "advertisedPauseFrameUse": {
      "description": "the advertised pause fram use",
      "type": "string"
     },
     "applicationAdvertisement": {
      "description": "This will likely be truncated but that is fine.",
      "type": "string"
     },
     "autoNegotiation": {
      "$ref": "#/components/schemas/miscQsfpAutoNegotiation"
     },
     "cableLength": {
      "description": "the QSFP cable length",
      "format": "float",
      "type": "number"
     },
     "cableType": {
      "description": "the QSFP cable type",
      "type": "string"
     },
     "cmisRev": {
      "description": "the common management interface specification version",
      "format": "float",
      "type": "number"
     },
     "collectedAt": {
      "description": "collected at timestamp: in UTC",
      "format": "date-time",
      "type": "string"
     },
     "connector": {
      "description": "the QSFP connector",
      "type": "string"
     },
     "deviceId": {
      "description": "the id of the device for the QSFP.",
      "type": "string"
     },
     "domCapability": {
      "description": "the digital optical monitoring capability",
      "type": "string"
     },
     "duplex": {
      "$ref": "#/components/schemas/miscQsfpDuplex"
     },
     "encoding": {
      "description": "Description not available",
      "type": "string"
     },
     "extIdentifier": {
      "description": "the external identifier of the QSFP",
      "type": "string"
     },
     "extRateselectCompliance": {
      "description": "the external rate selection compliance of the QSFP",
      "type": "string"
     },
     "hardwareRev": {
      "description": "the QSFP hardware specification",
      "format": "float",
      "type": "number"
     },
     "hostElectricalInterface": {
      "description": "the QSFP host electrical interface",
      "type": "string"
     },
     "hostLaneAssignmentOption": {
      "description": "the QSFP host lane assignment option",
      "format": "int32",
      "type": "integer"
     },
     "hostLaneCount": {
      "description": "number of host lanes of the QSFP",
      "format": "int32",
      "type": "integer"
     },
     "inactiveFirmware": {
      "description": "the QSFP inactive firmware",
      "type": "string"
     },
     "interfaceName": {
      "description": "the name of the QSFP physical interface",
      "type": "string"
     },
     "isReplaceable": {
      "description": "Whether or not the QSFP is replaceable",
      "type": "boolean"
     },
     "lot": {
      "description": "the QSFP lot number",
      "type": "string"
     },
     "manufacturer": {
      "description": "the QSFP manufacturer",
      "type": "string"
     },
     "mediaInterfaceCode": {
      "description": "the media interface code of the QSFP",
      "type": "string"
     },
     "mediaInterfaceTechnology": {
      "description": "the media interface technology of the QSFP",
      "type": "string"
     },
     "mediaLaneAssignmentOption": {
      "description": "the media lane assignment option of the QSFP",
      "format": "int32",
      "type": "integer"
     },
     "mediaLaneCount": {
      "description": "the QSFP number of media lanes",
      "format": "int32",
      "type": "integer"
     },
     "model": {
      "description": "the model name of the QSFP",
      "type": "string"
     },
     "neighborType": {
      "$ref": "#/components/schemas/miscNeighborType"
     },
     "nominalBitRate": {
      "description": "QSFP nominal bit rate",
      "format": "float",
      "type": "number"
     },
     "phyAd": {
      "description": "the QSFP physical address",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "pid": {
      "description": "the QSFP product identification",
      "type": "string"
     },
     "portAlias": {
      "description": "the QSFP port alias",
      "type": "string"
     },
     "serial": {
      "description": "the serial number of the QSFP",
      "type": "string"
     },
     "specificationCompliance": {
      "description": "the QSFP specification compliance",
      "type": "string"
     },
     "supportedMaxLaserFreq": {
      "description": "the QSFP max laser frequency: in Gbaud/s",
      "format": "float",
      "type": "number"
     },
     "supportedMaxTxPower": {
      "description": "the QSFP max tx power: in dBm",
      "format": "float",
      "type": "number"
     },
     "supportedMinLaserFreq": {
      "description": "the QSFP min laser frequency: in Gbaud/s",
      "format": "float",
      "type": "number"
     },
     "supportedMinTxPower": {
      "description": "the QSFP min tx power: in dBm",
      "format": "float",
      "type": "number"
     },
     "transceiver": {
      "$ref": "#/components/schemas/miscQsfpTransceiver"
     },
     "transceiverModule": {
      "$ref": "#/components/schemas/miscQsfpTransceiverModule"
     },
     "type": {
      "description": "the type of QSFP",
      "type": "string"
     },
     "vendorDate": {
      "description": "the vendor date timestamp UTC",
      "format": "date-time",
      "type": "string"
     },
     "vendorOui": {
      "description": "the three octets of the MAC address that identify the vendor of the QSFP",
      "type": "string"
     },
     "vendorRev": {
      "description": "the vendors revision of the QSFP",
      "type": "string"
     },
     "wakeOn": {
      "description": "the WakeOnLAN network message",
      "type": "string"
     }
    },
    "type": "object"
   },
   "miscQsfpTransceiver": {
    "default": "QSFP_TRANSCEIVER_INTERNAL",
    "description": "Description not available",
    "enum": [
     "QSFP_TRANSCEIVER_INTERNAL",
     "QSFP_TRANSCEIVER_EXTERNAL"
    ],
    "type": "string"
   },
   "miscQsfpTransceiverModule": {
    "default": "COPPER",
    "description": "Description not available",
    "enum": [
     "COPPER",
     "FIBER",
     "FIBER_400GBASE_DR4",
     "FIBER_400GBASE_FR4",
     "FIBER_400GBASE_SR8",
     "FIBER_400GBASE_LR8"
    ],
    "type": "string"
   },
   "miscReleaseImageInfo": {
    "description": "Message to provide information of a release image",
    "properties": {
     "docLink": {
      "description": "The release document link",
      "type": "string"
     },
     "expireAt": {
      "description": "The expected image expire time",
      "format": "date-time",
      "type": "string"
     },
     "releaseAt": {
      "description": "The image release time",
      "format": "date-time",
      "type": "string"
     },
     "tag": {
      "description": "The image release tag",
      "type": "string"
     }
    },
    "type": "object"
   },
   "miscSetLinkedAccountRequest": {
    "description": "SetLinkedAccountRequest creates a new linked account.",
    "properties": {
     "passcode": {
      "description": "Time based one time password generated by the chatbot app to validate the linked account request.",
      "type": "string"
     },
     "userName": {
      "description": "Local virtual username with \"BOTS\" provider to be linked with a remote account candidate.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "miscSetLinkedAccountResponse": {
    "description": "SetLinkedAccountResponse is the response of SetLinkedAccountRequest",
    "properties": {
     "linkedAccount": {
      "$ref": "#/components/schemas/miscLinkedAccount"
     }
    },
    "type": "object"
   },
   "miscUpdateLinkedAccountRequest": {
    "description": "UpdateLinkedAccountRequest updates an existing linked account identified with an account id.",
    "properties": {
     "accountId": {
      "description": "Identifier of the target linked account record to be updated.",
      "type": "string"
     },
     "adminState": {
      "$ref": "#/components/schemas/modelsAdminState"
     }
    },
    "type": "object"
   },
   "miscUpdateLinkedAccountResponse": {
    "description": "UpdateLinkedAccountResponse is the response of UpdateLinkedAccountRequest.",
    "properties": {
     "linkedAccount": {
      "$ref": "#/components/schemas/miscLinkedAccount"
     }
    },
    "type": "object"
   },
   "miscWebexAccount": {
    "description": "Description not available",
    "properties": {
     "spaceId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsAdjacentDevice": {
    "description": "Description not available",
    "properties": {
     "deviceId": {
      "description": "DeviceId defines MAC address of the device.",
      "type": "string"
     },
     "fabricId": {
      "description": "FabricId defines the identifier of parent Fabric object of the device.",
      "type": "string"
     },
     "fabricName": {
      "description": "FabricName defines the name of parent Fabric object of the device.",
      "type": "string"
     },
     "nodeId": {
      "description": "NodeId defines the unique internal identifier of the node for the device.",
      "type": "string"
     },
     "nodeName": {
      "description": "NodeName defines the name of node, as well as its hostname of the device.",
      "type": "string"
     },
     "portName": {
      "description": "PortName defines the device local port that connects to the discovered device",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsAdminState": {
    "default": "ENABLED",
    "description": "AdminState defines an enumeration for object's administrative states.",
    "enum": [
     "ENABLED",
     "DISABLED",
     "DELETED",
     "PENDING"
    ],
    "type": "string"
   },
   "modelsAirflowType": {
    "default": "AIRFLOW_TYPE_PORT_SIDE_INTAKE",
    "description": "Airflow enumerates various types of Airflow.",
    "enum": [
     "AIRFLOW_TYPE_PORT_SIDE_INTAKE",
     "AIRFLOW_TYPE_PORT_SIDE_EXHAUST"
    ],
    "type": "string"
   },
   "modelsAnnotation": {
    "description": "Annotation defines a typed name/value pair to store user-defined data including complex data such as JSON.",
    "properties": {
     "dataType": {
      "$ref": "#/components/schemas/modelsDataType"
     },
     "name": {
      "description": "The user-defined name used to uniquely identify the annotation.",
      "type": "string"
     },
     "value": {
      "description": "The value of the annotation expressed as a string.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsAssertCategoryType": {
    "default": "ASSERT_CATEGORY_FABRIC",
    "description": "AssertCategoryType defines an enumeration of assertion categories.",
    "enum": [
     "ASSERT_CATEGORY_FABRIC",
     "ASSERT_CATEGORY_UPSTREAM_PEERING",
     "ASSERT_CATEGORY_HOST_ATTACHMENT",
     "ASSERT_CATEGORY_SERVICES",
     "ASSERT_CATEGORY_COMPLIANCE",
     "ASSERT_CATEGORY_SECURITY"
    ],
    "type": "string"
   },
   "modelsAssertStateType": {
    "default": "ASSERT_STATE_UNKNOWN",
    "description": "AssertStateType defines an enumeration of assertion state types.",
    "enum": [
     "ASSERT_STATE_UNKNOWN",
     "ASSERT_STATE_TRUE",
     "ASSERT_STATE_FALSE"
    ],
    "type": "string"
   },
   "modelsBgpMatchGroup": {
    "description": "BgpMatchGroup encapsulates \"MATCH\" part of a BgpRule. E.g. match community \u003cCOMMUNITY_LIST\u003e. Note that prefixes are mutually exclusive for matching. That means caller must not provide both IPv4 and IPv6 prefixes.",
    "properties": {
     "communities": {
      "description": "A set of communities to match on. May provide up to 10 communities.",
      "items": {
       "$ref": "#/components/schemas/modelsCommunity"
      },
      "type": "array"
     },
     "communityMatch": {
      "$ref": "#/components/schemas/modelsMatchType"
     },
     "ipv4PrefixListId": {
      "description": "IPv4 prefix list identifier. May provide either IPv4 list identifier or IPv4 prefixes, but not both.",
      "type": "string"
     },
     "ipv4Prefixes": {
      "description": "A set of IPv4 prefixes to match on. May provide up to 10 prefixes.",
      "items": {
       "$ref": "#/components/schemas/modelsIpPrefix"
      },
      "type": "array"
     },
     "ipv6PrefixListId": {
      "description": "IPv6 prefix list identifier. May provide either IPv6 list identifier or IPv6 prefixes, but not both.",
      "type": "string"
     },
     "ipv6Prefixes": {
      "description": "A set of IPv6 prefixes to match on. May provide up to 10 prefixes.",
      "items": {
       "$ref": "#/components/schemas/modelsIpPrefix"
      },
      "type": "array"
     },
     "routeTag": {
      "$ref": "#/components/schemas/modelsRouteTag"
     },
     "routeType": {
      "$ref": "#/components/schemas/modelsRouteType"
     }
    },
    "type": "object"
   },
   "modelsBgpPeer": {
    "description": "BgpPeer encapsulates properties of BGP peer. Vrf on a border Node must have a BGP or OSPF object to talk to external routers. BgpPeer provides the config to VRF to peer with external router.",
    "properties": {
     "annotations": {
      "description": "A set of annotations to store user-defined data.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "description": {
      "description": "A user-defined description of BgpPeer. Description can be up to 2000 characters.",
      "type": "string"
     },
     "enabled": {
      "description": "Indicates if BgpPeer is enabled or disabled.",
      "type": "boolean"
     },
     "exportPolicyId": {
      "description": "BGP export policy identifier.",
      "type": "string"
     },
     "fabricId": {
      "description": "The identifier of Fabric to which this BgpPeer belongs. Fabric identifier is mandatory, and immutable once set.",
      "type": "string"
     },
     "id": {
      "description": "The unique identifier of BgpPeer. Identifier is required to update an existing BgpPeer. If identifier is missing, then set operation defaults to CREATE mode.",
      "type": "string"
     },
     "importPolicyId": {
      "description": "BGP import policy identifier.",
      "type": "string"
     },
     "interfaces": {
      "description": "User selected source interfaces. Source interfaces maybe loopbacks or a routed port on a switch. BgpPeer applies source interface's IP address to BGP policy (neighbor \u003cIP\u003e update-source \u003csource interface IP\u003e",
      "items": {
       "$ref": "#/components/schemas/modelsNetworkInterface"
      },
      "type": "array"
     },
     "ipv4Addresses": {
      "description": "IPv4 addresses of external router. Must not set IPv6 addresses when IPv4 addresses are set. User may not provide more than one IPv4 address.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "ipv6Addresses": {
      "description": "IPv6 addresses of external router. Must not set IPv4 addresses when IPv6 addresses are set. User may not provide more than one IPv6 address.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "labels": {
      "description": "A set of user-defined labels for searching and locating objects.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "localAsn": {
      "description": "Local switch/fabric ASN.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The user-defined name of BgpPeer. BgpPeer name is unique, and is case-insensitive.",
      "type": "string"
     },
     "password": {
      "description": "MD5 password or TCP-AO keychain encryption password in clear text.",
      "type": "string"
     },
     "remoteAsn": {
      "description": "Asn of the external router.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "sourceInf": {
      "$ref": "#/components/schemas/modelsNetworkInterface"
     },
     "southBound": {
      "description": "Indicates that BGP peer is a south-bound BGP peer. South-bound BGP peer must use one or more Loopbacks as source interfaces.",
      "type": "boolean"
     },
     "tcpAo": {
      "description": "Indicates that authentication is TCP-AO based (not Supported for Beta).",
      "type": "boolean"
     },
     "ttl": {
      "description": "Expected number of hops to the external router.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vrfId": {
      "description": "VRF to which this BgpPeer is attached to. VrfId is mandatory. External router's IP addresses must be reachable in the VRF.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsBgpPolicy": {
    "description": "BgpPolicy encapsulates properties of a BGP peering policy. BgpPolicy objects are attached to BgpPeer object.",
    "properties": {
     "annotations": {
      "description": "A set of annotations to store user-defined data.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "description": {
      "description": "A user-defined description of BgpPolicy. Description can be up to 2000 characters.",
      "type": "string"
     },
     "enabled": {
      "description": "Indicates if BgpPolicy is enabled or disabled.",
      "type": "boolean"
     },
     "export": {
      "description": "Indicates if the policy is a route export or import policy.",
      "type": "boolean"
     },
     "fabricId": {
      "description": "The identifier of Fabric to which this BgpPolicy belongs. Fabric identifier is mandatory, and immutable once set.",
      "type": "string"
     },
     "id": {
      "description": "The unique identifier of BgpPolicy. Identifier is required to update an existing BgpPolicy. If identifier is missing, then set operation defaults to CREATE mode.",
      "type": "string"
     },
     "isDefault": {
      "description": "Indicates that policy is a default BGP policy.",
      "type": "boolean"
     },
     "labels": {
      "description": "A set of user-defined labels for searching and locating objects.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The user-defined name of BgpPolicy. BgpPolicy name is unique, and is case-insensitive.",
      "type": "string"
     },
     "peerIds": {
      "description": "The identifiers of BgpPeer objects attached to this policy. PeerIds field is readonly.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "rules": {
      "description": "A set of BGP rules. User may specify up to 10 rules.",
      "items": {
       "$ref": "#/components/schemas/modelsBgpRule"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "modelsBgpRule": {
    "description": "BgpRule encapsulates properties of a BGP rule.",
    "properties": {
     "accept": {
      "description": "Accept or reject (permit or deny).",
      "type": "boolean"
     },
     "action": {
      "description": "Extended action (E.g. on-match next or on-match goto \u003cruleId\u003e",
      "type": "string"
     },
     "description": {
      "description": "The user-defined description of rule.",
      "type": "string"
     },
     "id": {
      "description": "The identifier of the rule. Id is also the sequence number of rule within the rule list. User may set the identifier, Maximum value may not exceed 100.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "matchGroup": {
      "$ref": "#/components/schemas/modelsBgpMatchGroup"
     },
     "setGroup": {
      "$ref": "#/components/schemas/modelsBgpSetGroup"
     }
    },
    "type": "object"
   },
   "modelsBgpSetGroup": {
    "description": "BgpSetGroup encapsulates \"SET\" part of a BgpRule. E.g. set community 5000:100",
    "properties": {
     "additive": {
      "description": "Indicates that community should be appended to existing communities.",
      "type": "boolean"
     },
     "asPath": {
      "description": "Set as-path for for outbound routes (export).",
      "items": {
       "maximum": 4294967295,
       "minimum": 0,
       "type": "integer"
      },
      "type": "array"
     },
     "community": {
      "description": "Set community tag for import or export. For export, BGP stamps outbound routes with this community tag. For route import, BGP sets this tag within the fabric.",
      "type": "string"
     },
     "ipv4NextHop": {
      "description": "Set next-hop IPv4 address for outbound routes (export).",
      "type": "string"
     },
     "ipv6NextHop": {
      "description": "Set next-hop IPv6 address for outbound routes (export).",
      "type": "string"
     },
     "origin": {
      "$ref": "#/components/schemas/modelsRouteOriginType"
     }
    },
    "type": "object"
   },
   "modelsBlueprintTemplateConnectionOverrides": {
    "description": "Description not available",
    "properties": {
     "overrides": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsBlueprintTemplateManualOverrideMetadata"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "modelsBlueprintTemplateConnections": {
    "description": "Description not available",
    "properties": {
     "connections": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsBlueprintTemplateConnectivityMetadata"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "modelsBlueprintTemplateConnectivityMetadata": {
    "description": "Description not available",
    "properties": {
     "cableType": {
      "description": "cable type for connection",
      "type": "string"
     },
     "grp1Breakout": {
      "description": "grp1 breakout (specifies if grp1 is the North end of the breakout)",
      "type": "boolean"
     },
     "grp1Name": {
      "description": "switch or server group in the connectivity metadata",
      "type": "string"
     },
     "grp1Pluggable": {
      "description": "pluggable for grp1",
      "type": "string"
     },
     "grp2Breakout": {
      "description": "grp2 breakout (specifies if grp2 is the North end of the breakout)",
      "type": "boolean"
     },
     "grp2Name": {
      "description": "switch or server group in the connectivity metadata",
      "type": "string"
     },
     "grp2Pluggable": {
      "description": "pluggable for grp2",
      "type": "string"
     },
     "numConns": {
      "description": "num direct connections",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "portType": {
      "description": "server port group type for server\u003c-\u003eswitch group connections",
      "type": "string"
     },
     "probeType": {
      "description": "ipm probe type",
      "type": "string"
     },
     "railGrpName": {
      "description": "rail group name for server E/W \u003c-\u003eswitch group connections",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsBlueprintTemplateEntityMetadata": {
    "description": "Description not available",
    "properties": {
     "groupName": {
      "description": "The group name for the entity",
      "type": "string"
     },
     "groupShortName": {
      "description": "The short name for the group",
      "type": "string"
     },
     "modelName": {
      "description": "model name of the entity in the blueprint",
      "type": "string"
     },
     "quantity": {
      "description": "The number of such entities in the blueprint",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "tierName": {
      "description": "The tier name for the entity",
      "type": "string"
     },
     "tierShortName": {
      "description": "The short name for the tier",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsBlueprintTemplateInventory": {
    "description": "Description not available",
    "properties": {
     "entities": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsBlueprintTemplateEntityMetadata"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "modelsBlueprintTemplateManualOverrideMetadata": {
    "description": "Description not available",
    "properties": {
     "cableType": {
      "description": "cable type for connection",
      "type": "string"
     },
     "grp1Name": {
      "description": "switch or server group in the connectivity metadata",
      "type": "string"
     },
     "grp1Pluggable": {
      "description": "pluggable for grp1",
      "type": "string"
     },
     "grp2Name": {
      "description": "switch or server group in the connectivity metadata",
      "type": "string"
     },
     "grp2Pluggable": {
      "description": "pluggable for grp2",
      "type": "string"
     },
     "hs1Position": {
      "description": "hardware set position in grp1",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "hs2Position": {
      "description": "hardware set position in grp2",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "node1Position": {
      "description": "node position in the hardware set 1",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "node2Position": {
      "description": "node position in the hardware set 2",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "port1Name": {
      "description": "port1 name",
      "type": "string"
     },
     "port2Name": {
      "description": "port2 name",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsBlueprintTemplateType": {
    "default": "TEMPLATE_TYPE_SWITCH_FABRICS",
    "description": "BlueprintTemplateType defines the type of the fabric blueprint template",
    "enum": [
     "TEMPLATE_TYPE_SWITCH_FABRICS",
     "TEMPLATE_TYPE_AI_CLUSTERS",
     "TEMPLATE_TYPE_CUSTOM_TEMPLATE"
    ],
    "type": "string"
   },
   "modelsBmcProductType": {
    "default": "BMC_NVIDIA_BF3",
    "description": "Product type of BMC.",
    "enum": [
     "BMC_NVIDIA_BF3",
     "BMC_CISCO_UCS_C225",
     "BMC_CISCO_UCS_BRONCO",
     "BMC_PRODUCT_UNSUPPORTED"
    ],
    "type": "string"
   },
   "modelsBmcStateType": {
    "default": "BMC_STATE_DISCOVERED",
    "description": "BMC state type.",
    "enum": [
     "BMC_STATE_DISCOVERED",
     "BMC_STATE_PRE_AUTHENTICATED",
     "BMC_STATE_AUTHENTICATED",
     "BMC_STATE_STALE",
     "BMC_STATE_NOT_SUPPORTED"
    ],
    "type": "string"
   },
   "modelsCableType": {
    "default": "DAC",
    "description": "CableType defines an enumeration of cable types.",
    "enum": [
     "DAC",
     "FIBER",
     "AOC",
     "SMF",
     "MMF",
     "CAT6AOR7",
     "CAT5E"
    ],
    "type": "string"
   },
   "modelsCablingConnection": {
    "description": "Description not available",
    "properties": {
     "cablePluggablePid": {
      "description": "The pluggable pid to be used for the cable in the connection",
      "type": "string"
     },
     "node1GroupId": {
      "description": "Description not available",
      "type": "string"
     },
     "node1GroupName": {
      "description": "The switch or server group id and name the node1 is associated with",
      "type": "string"
     },
     "node1HwsetName": {
      "description": "The hw set name for node1",
      "type": "string"
     },
     "node1Id": {
      "description": "The external node id of the first node in the connection",
      "type": "string"
     },
     "node1Name": {
      "description": "The id and name of the first node in the connection",
      "type": "string"
     },
     "node1PortName": {
      "description": "The port name for the first node in the connection",
      "type": "string"
     },
     "node1PortPluggablePid": {
      "description": "The model name/pid for the pluggable to be used in the first node:port",
      "type": "string"
     },
     "node2GroupId": {
      "description": "Description not available",
      "type": "string"
     },
     "node2GroupName": {
      "description": "The switch group id and name the node2 is associated with",
      "type": "string"
     },
     "node2HwsetName": {
      "description": "The hw set name for node1",
      "type": "string"
     },
     "node2Id": {
      "description": "The external node id of the second node in the override rule",
      "type": "string"
     },
     "node2Name": {
      "description": "The id and name of the second node in the connection",
      "type": "string"
     },
     "node2PortName": {
      "description": "The port name for the second node in the connectivity rule",
      "type": "string"
     },
     "node2PortPluggablePid": {
      "description": "The model name/pid for the pluggable to be used in the second node:port",
      "type": "string"
     },
     "node2RailId": {
      "description": "The external rail id associated with the node2 connection",
      "type": "string"
     },
     "node2RailName": {
      "description": "The rail name associated with the node2 connection",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsCablingPlanExecutionSummary": {
    "description": "Description not available",
    "properties": {
     "exceptions": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsRuleExecutionException"
      },
      "type": "array"
     },
     "execStatus": {
      "$ref": "#/components/schemas/modelsCablingPlanStatus"
     }
    },
    "type": "object"
   },
   "modelsCablingPlanStatus": {
    "default": "CABLING_PLAN_STATUS_SUCCESS",
    "description": "Description not available",
    "enum": [
     "CABLING_PLAN_STATUS_SUCCESS",
     "CABLING_PLAN_STATUS_FAILURE_PORTS_UNAVAILABLE"
    ],
    "type": "string"
   },
   "modelsCablingRequestFilters": {
    "description": "Description not available",
    "properties": {
     "dryRun": {
      "description": "Description not available",
      "type": "boolean"
     },
     "failFast": {
      "description": "Description not available",
      "type": "boolean"
     },
     "includeCablingPlan": {
      "description": "Description not available",
      "type": "boolean"
     }
    },
    "type": "object"
   },
   "modelsCablingStrategy": {
    "default": "CABLING_STRATEGY_PACKED",
    "description": "CablingStrategy defines the mode in which ports are chosen to satisfy the connectivity rules between two topology groups",
    "enum": [
     "CABLING_STRATEGY_PACKED",
     "CABLING_STRATEGY_ASCENDING_ODD",
     "CABLING_STRATEGY_STRICT_ROUND_ROBIN",
     "CABLING_STRATEGY_BEST_EFFORT_ROUND_ROBIN"
    ],
    "type": "string"
   },
   "modelsCandidateType": {
    "default": "CANDIDATE_CONFIGS",
    "description": "CandidateType defines an enumeration of candidate types.",
    "enum": [
     "CANDIDATE_CONFIGS",
     "CANDIDATE_MAINTENANCE_ON",
     "CANDIDATE_MAINTENANCE_OFF",
     "CANDIDATE_NEUTRAL"
    ],
    "type": "string"
   },
   "modelsCertificates": {
    "description": "Certificates encapsulates PEM encoded PKI certificates.",
    "properties": {
     "certificates": {
      "description": "A list of PEM encoded certificates.",
      "type": "string"
     },
     "description": {
      "description": "The user-defined description of the certificates.",
      "type": "string"
     },
     "enabled": {
      "description": "Indicates if certificates is enabled or not.",
      "type": "boolean"
     },
     "fingerprint": {
      "description": "Computed fingerprint of certificates.",
      "type": "string"
     },
     "id": {
      "description": "The unique identifier of a certificate.",
      "type": "string"
     },
     "name": {
      "description": "The user-defined name of the certificate.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsChatPlatform": {
    "default": "PLATFORM_DISCORD",
    "description": "Supported chatbot platforms",
    "enum": [
     "PLATFORM_DISCORD",
     "PLATFORM_WEBEX",
     "PLATFORM_SLACK",
     "PLATFORM_MS_TEAMS"
    ],
    "type": "string"
   },
   "modelsClaimResult": {
    "description": "Claim result defines the status of claim attempt on a specific device ID.",
    "properties": {
     "claimCode": {
      "description": "ClaimCode defines the claim code of the device.",
      "type": "string"
     },
     "claimStatus": {
      "$ref": "#/components/schemas/modelsClaimStatus"
     },
     "deviceId": {
      "description": "DeviceId defines MAC address of the device.",
      "type": "string"
     },
     "modelName": {
      "description": "ModelName defines the device's model name.",
      "type": "string"
     },
     "serialNumber": {
      "description": "SerialNumber defines the device's serial number.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsClaimStatus": {
    "default": "CLAIM_STATUS_SUCCESS",
    "description": "ClaimStatus defines an enumeration of the possible outcomes when attempting to claim a device.",
    "enum": [
     "CLAIM_STATUS_SUCCESS",
     "CLAIM_STATUS_ALREADY_CLAIMED",
     "CLAIM_STATUS_INVALID_CODE",
     "CLAIM_STATUS_EXPIRED_CODE",
     "CLAIM_STATUS_REJECT_CLAIM",
     "CLAIM_STATUS_INTERNAL_ERR"
    ],
    "type": "string"
   },
   "modelsCommunity": {
    "description": "Community encapsulates properties of a BGP community.",
    "properties": {
     "accept": {
      "description": "Accept or reject (permit or deny).",
      "type": "boolean"
     },
     "community": {
      "description": "The BGP community tag. Maybe in wildcard format; e.g. *:100 or 1000:*.",
      "type": "string"
     },
     "description": {
      "description": "A short description for the community.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsConfigOrigin": {
    "default": "CONFIG_ORIGIN_CLOUD",
    "description": "ConfigOrigin is used by a management port to indicate if the configuration was provided by the cloud or the device.",
    "enum": [
     "CONFIG_ORIGIN_CLOUD",
     "CONFIG_ORIGIN_DEVICE"
    ],
    "type": "string"
   },
   "modelsConfigType": {
    "default": "CONFIG_TYPE_STATIC",
    "description": "ConfigType is used by a management port to indicate if the IP configuration is static or DHCP.",
    "enum": [
     "CONFIG_TYPE_STATIC",
     "CONFIG_TYPE_DHCP"
    ],
    "type": "string"
   },
   "modelsConnectedState": {
    "default": "CONNECTED_STATE_NOT_CONNECTED",
    "description": "ConnectedState is used by a management port to indicate if the port is successfully connected to the Hyperfabric service. It is distinct from the AdminState.",
    "enum": [
     "CONNECTED_STATE_NOT_CONNECTED",
     "CONNECTED_STATE_CONNECTED"
    ],
    "type": "string"
   },
   "modelsConnectivityStatus": {
    "default": "CONNECTIVITY_PENDING",
    "description": "External device connectivity status enumeration.",
    "enum": [
     "CONNECTIVITY_PENDING",
     "CONNECTIVITY_OK",
     "CONNECTIVITY_UNAUTHORIZED",
     "CONNECTIVITY_CANNOT_CONNECT",
     "CONNECTIVITY_ABORTED",
     "CONNECTIVITY_RESET",
     "CONNECTIVITY_DNS_ERROR",
     "CONNECTIVITY_TIMED_OUT",
     "CONNECTIVITY_TERMINATED",
     "CONNECTIVITY_NO_MGMT_ADDR_IN_TLV",
     "CONNECTIVITY_UNSUPPORTED_BMC",
     "CONNECTIVITY_NO_CREDENTIALS",
     "CONNECTIVITY_INTERNAL_ERROR",
     "CONNECTIVITY_PRE_AUTH_OK",
     "CONNECTIVITY_EXPIRED_CERTIFICATE",
     "CONNECTIVITY_CANNOT_GET_CERTIFICATE",
     "CONNECTIVITY_COLLECTION_ERROR",
     "CONNECTIVITY_CANNOT_PING",
     "CONNECTIVITY_CERTIFICATE_ERROR"
    ],
    "type": "string"
   },
   "modelsCredentials": {
    "description": "Credentials encapsulates organization's credential objects.",
    "properties": {
     "credentialsId": {
      "description": "The credentials identifier.",
      "type": "string"
     },
     "credentialsType": {
      "$ref": "#/components/schemas/modelsCredentialsType"
     },
     "description": {
      "description": "User defined description of the credentials.",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "User defined name of the credentials.",
      "type": "string"
     },
     "passwords": {
      "description": "Password of the user.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "username": {
      "description": "The username; valid only for password type.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsCredentialsType": {
    "default": "PASSWORD",
    "description": "CredentialsType defines an enumeration for various authentication credentials.",
    "enum": [
     "PASSWORD",
     "PUBLIC_KEY"
    ],
    "type": "string"
   },
   "modelsDataType": {
    "default": "STRING",
    "description": "DataType defines an enumeration of data types.",
    "enum": [
     "STRING",
     "INT32",
     "UINT32",
     "INT64",
     "UINT64",
     "BOOL",
     "TIME",
     "UUID",
     "DURATION",
     "JSON"
    ],
    "type": "string"
   },
   "modelsDesignObjectBaseData": {
    "description": "The BlueprintObjectbase_data defines the common base_data present in every object of the blueprint",
    "properties": {
     "fabricId": {
      "description": "The fabric_id that this blueprint object is associated with",
      "type": "string"
     },
     "id": {
      "description": "The external id of the blueprint object (will be populated for node_id)",
      "type": "string"
     },
     "name": {
      "description": "The name of the blueprint object",
      "type": "string"
     },
     "position": {
      "description": "The relative position of the object in its next level aggregation. For example position of device in hw_set, position of hw_set in switch/server group, position of switch/server group in tier.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "shortName": {
      "description": "The short name of the blueprint object",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsDhcpRelay": {
    "description": "DhcpRelay encapsulates properties of a DHCP relay object. A DhcpRelay is a child of Vrf, and all VNI/VLANs attached to the DhcpRelay must be in the Vrf. A DhcpRelay must have host IP addresses of the DHCP server, and a set of VNI objects that need DHCP relay feature.",
    "properties": {
     "annotations": {
      "description": "A list of name-value annotations to store user-defined data including complex data such as JSON associated with the DHCP Relay.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "description": {
      "description": "A user-defined description of DhcpRelay.",
      "type": "string"
     },
     "enabled": {
      "description": "Indicates if DhcpRelay is enabled or disabled.",
      "type": "boolean"
     },
     "fabricId": {
      "description": "The identifier of Fabric to which this DhcpRelay belong. Fabric identifier is mandatory, and immutable once set.",
      "type": "string"
     },
     "id": {
      "description": "The unique identifier of DhcpRelay. Identifier is required to update an existing DhcpRelay. If identifier is missing, then set operation defaults to CREATE mode.",
      "type": "string"
     },
     "ipv4Addresses": {
      "description": "IPv4 addresses of DHCP server. May provided a maximum of 2 IPv4 addresses.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "ipv6Addresses": {
      "description": "IPv6 addresses of DHCP server. May provided a maximum of 2 IPv6 addresses.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering DHCP Relays.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The user-defined name of the DhcpRelay. DhcpRelay name is unique, and is case-insensitive.",
      "type": "string"
     },
     "vnis": {
      "description": "DHCP relay specification on a per VNI basis. User may specify a maximum of 30 VNIs.",
      "items": {
       "$ref": "#/components/schemas/modelsVniDhcp"
      },
      "type": "array"
     },
     "vrfId": {
      "description": "The identifier of Vrf to which this DhcpRelay belong. Vrf identifier is mandatory, and immutable once set.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsDiscoveredDevice": {
    "description": "Discovered device includes the device and connection info of a discovered device that adjacent to the claimed device",
    "properties": {
     "connectedDevices": {
      "description": "ConnectedDevices defines the list of adjacent devices that current device connects to",
      "items": {
       "$ref": "#/components/schemas/modelsAdjacentDevice"
      },
      "type": "array"
     },
     "deviceId": {
      "description": "DeviceId defines MAC address of the discovered device.",
      "type": "string"
     },
     "deviceName": {
      "description": "DeviceName defines the name of the discovered device.",
      "type": "string"
     },
     "modelName": {
      "description": "ModelName defines discovered device's model name.",
      "type": "string"
     },
     "serialNumber": {
      "description": "SerialNumber defines discovered device's serial number.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsDscpConfig": {
    "description": "DscpConfig describes the configuration for DSCP or class-of-service (Cos).",
    "properties": {
     "annotations": {
      "description": "A set of annotations to store user-defined data.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "codePoints": {
      "description": "Defines a range code points. E.g. [1, 3-6, 9]",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "description": {
      "description": "A user-defined description of DscpConfig. Description can be up to 2000 characters.",
      "type": "string"
     },
     "dwrr": {
      "description": "DWRR weight value. Range is 0 - 100.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "ecnEnabled": {
      "description": "Enable ECN.",
      "type": "boolean"
     },
     "enabled": {
      "description": "Indicates if IpmConfig is enabled or disabled.",
      "type": "boolean"
     },
     "fabricId": {
      "description": "The identifier of Fabric to which this DscpConfig belongs. Fabric identifier is mandatory, and immutable once set.",
      "type": "string"
     },
     "id": {
      "description": "The unique identifier of DscpConfig. Identifier is required to update an existing DscpConfig. If identifier is missing, then set operation defaults to CREATE mode.",
      "type": "string"
     },
     "labels": {
      "description": "A set of user-defined labels for searching and locating objects.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The user-defined name of DscpConfig. DscpConfig name is unique, and is case-insensitive.",
      "type": "string"
     },
     "pfcEnabled": {
      "description": "Enable PFC.",
      "type": "boolean"
     },
     "queueId": {
      "description": "The queue or traffic class identifier (0-7).",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "strictPriority": {
      "description": "Enable strict priority for DSCP scheduler. Must not specify DWRR value.",
      "type": "boolean"
     }
    },
    "type": "object"
   },
   "modelsEndpoint": {
    "description": "Endpoint defines the configuration of a notification endpoint.",
    "properties": {
     "annotations": {
      "description": "A set of annotations to store user-defined data.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "description": {
      "description": "A user provided description for the endpoint.",
      "type": "string"
     },
     "email": {
      "$ref": "#/components/schemas/modelsEndpointEmail"
     },
     "enabled": {
      "description": "The status of the endpoint.",
      "type": "boolean"
     },
     "endpointId": {
      "description": "This is a read-only field. The unique id for the endpoint.",
      "readOnly": true,
      "type": "string"
     },
     "errorMessage": {
      "description": "This is a read-only field. An error message if the service encountered an error writing or forwarding to the endpoint.",
      "readOnly": true,
      "type": "string"
     },
     "labels": {
      "description": "One or more labels for the endpoint.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "A user provided name for the endpoint.",
      "type": "string"
     },
     "s3": {
      "$ref": "#/components/schemas/modelsEndpointS3"
     },
     "state": {
      "$ref": "#/components/schemas/modelsOperState"
     },
     "stateAt": {
      "description": "This is a read-only field. A timestamp recording when an error occured or was cleared. If not set then an error has never occured.",
      "format": "date-time",
      "readOnly": true,
      "type": "string"
     },
     "type": {
      "$ref": "#/components/schemas/modelsEndpointType"
     },
     "verified": {
      "description": "This is a read-only field. A confirmation code was successfully used to verify the endpoint.",
      "readOnly": true,
      "type": "boolean"
     }
    },
    "type": "object"
   },
   "modelsEndpointEmail": {
    "description": "A email notification endpoint.",
    "properties": {
     "address": {
      "description": "The recipients email address.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsEndpointGoogleStorage": {
    "description": "A Google storage notification endpoint.",
    "properties": {
     "accountKey": {
      "description": "The storage account key.",
      "type": "string"
     },
     "bucketName": {
      "description": "The endpoint bucket name.",
      "type": "string"
     },
     "rootPath": {
      "description": "The endpoint root path.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsEndpointPagerDuty": {
    "description": "A pager duty notification endpoint..",
    "properties": {
     "routingKey": {
      "description": "The endpoint routing key.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsEndpointS3": {
    "description": "An S3 notification endpoint.",
    "properties": {
     "accessKeyId": {
      "description": "The S3 access key id.",
      "type": "string"
     },
     "bucketName": {
      "description": "The endpoint bucket name.",
      "type": "string"
     },
     "fqdn": {
      "description": "The endpoint FQDN.",
      "type": "string"
     },
     "port": {
      "description": "The port.",
      "format": "int32",
      "type": "integer"
     },
     "region": {
      "description": "The AWS region.",
      "type": "string"
     },
     "rootPath": {
      "description": "The S3 bucket root path.",
      "type": "string"
     },
     "secretAccessKey": {
      "description": "The S3 secret access key.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsEndpointSlack": {
    "description": "A Slack notification endpoint.",
    "properties": {
     "webhook": {
      "description": "The webhook URL.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsEndpointSms": {
    "description": "An SMS notification endpoint.",
    "properties": {
     "countryCode": {
      "description": "The recipients phone number country code.",
      "type": "string"
     },
     "phoneNumber": {
      "description": "The recipients phone number.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsEndpointTeams": {
    "description": "A Microsoft Teams notification endpoint.",
    "properties": {
     "webhook": {
      "description": "The webhook URL.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsEndpointType": {
    "default": "EMAIL",
    "description": "EndpointType specifies the type of a notification endpoint.",
    "enum": [
     "EMAIL",
     "S3"
    ],
    "type": "string"
   },
   "modelsEndpointWebex": {
    "description": "A Webex notification endpoint.",
    "properties": {
     "webhook": {
      "description": "The webhook URL.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsEntitlementLevel": {
    "default": "ESSENTIALS",
    "description": "An entitlement level governs the extent to which a user can configure a fabric.",
    "enum": [
     "ESSENTIALS",
     "ADVANTAGE",
     "PREMIER"
    ],
    "type": "string"
   },
   "modelsFabric": {
    "description": "A Fabric is a collection of nodes, connections that represents the interconnections between the nodes, the configuration of the ports of the nodes and the logical constructs deployed across the fabric such as VRFs, logical networks named VNIs and other services.",
    "properties": {
     "address": {
      "description": "The physical street address where the fabric is located (E.g. 320 My Street).",
      "type": "string"
     },
     "annotations": {
      "description": "A list of name-value annotations to store user-defined data including complex data such as JSON associated with the fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "city": {
      "description": "The city in which the fabric is located (E.g. San Jose).",
      "type": "string"
     },
     "connections": {
      "description": "A list of fabric connections that represents the interconnections between nodes in a fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsPortConnection"
      },
      "type": "array"
     },
     "country": {
      "description": "The country code in which the fabric is located (E.g. US).",
      "type": "string"
     },
     "description": {
      "description": "The description is a user-defined field to store notes about the fabric.",
      "type": "string"
     },
     "design": {
      "$ref": "#/components/schemas/modelsFabricDesign"
     },
     "enableQpid": {
      "description": "Enable or Disable QPID hashing.",
      "type": "boolean"
     },
     "enabled": {
      "description": "The enabled state of the fabric which indicates if the fabric is enabled or disabled.",
      "type": "boolean"
     },
     "fabricType": {
      "$ref": "#/components/schemas/modelsFabricType"
     },
     "id": {
      "description": "The unique identifier of the fabric.",
      "type": "string"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering fabrics.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "level": {
      "$ref": "#/components/schemas/modelsEntitlementLevel"
     },
     "location": {
      "description": "The location is a user-defined field to store information about the location of the fabric (E.g. SJC01).",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The user-defined name of the fabric.",
      "type": "string"
     },
     "nodes": {
      "description": "A list of nodes that are part of the fabric.",
      "items": {
       "$ref": "#/components/schemas/modelsNode"
      },
      "type": "array"
     },
     "numCandidates": {
      "description": "The number of active candidate configurations of the fabric.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "sagMac": {
      "description": "The Static Anycast Gateway's MAC address for the fabric.",
      "type": "string"
     },
     "topology": {
      "$ref": "#/components/schemas/modelsFabricTopology"
     },
     "unrecognized": {
      "description": "A list of nodes that are discovered but not recognized by the Hyperfabric service.",
      "items": {
       "$ref": "#/components/schemas/modelsNode"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "modelsFabricBlueprintTemplate": {
    "description": "Fabric blueprint template has all the metadata for a fabric blueprint template",
    "properties": {
     "name": {
      "description": "The name of the blueprint template",
      "type": "string"
     },
     "summary": {
      "description": "The summary of the template",
      "type": "string"
     },
     "templateConnections": {
      "$ref": "#/components/schemas/modelsBlueprintTemplateConnections"
     },
     "templateId": {
      "description": "The id of the template",
      "type": "string"
     },
     "templateInventory": {
      "$ref": "#/components/schemas/modelsBlueprintTemplateInventory"
     },
     "templateOverrides": {
      "$ref": "#/components/schemas/modelsBlueprintTemplateConnectionOverrides"
     },
     "type": {
      "$ref": "#/components/schemas/modelsBlueprintTemplateType"
     }
    },
    "type": "object"
   },
   "modelsFabricDesign": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "fabricName": {
      "description": "Description not available",
      "type": "string"
     },
     "nodePortConnRules": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsNodePortConnectivityRule"
      },
      "type": "array"
     },
     "nodePortOverrideRules": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsNodePortOverrideRule"
      },
      "type": "array"
     },
     "railGroups": {
      "description": "The rail groups associated with the design",
      "items": {
       "$ref": "#/components/schemas/modelsRailGroup"
      },
      "type": "array"
     },
     "serverGroupConnRules": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsServerGroupConnectivityRule"
      },
      "type": "array"
     },
     "switchGroupConnRules": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsSwitchGroupConnectivityRule"
      },
      "type": "array"
     },
     "tiers": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsTier"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "modelsFabricImageUpdate": {
    "description": "FabricImageUpdate describes the image configurations",
    "properties": {
     "arch": {
      "description": "amd64 (default) or arm64",
      "type": "string"
     },
     "deployAt": {
      "description": "The optional planed deploy time",
      "format": "date-time",
      "type": "string"
     },
     "expireAt": {
      "description": "The optional fabric specific image expire time",
      "format": "date-time",
      "type": "string"
     },
     "fabricId": {
      "description": "The fabric id",
      "type": "string"
     },
     "fabricName": {
      "description": "The fabric name",
      "type": "string"
     },
     "tag": {
      "description": "The image update tag",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsFabricSoftwareConfig": {
    "description": "FabricSoftwareConfig describes the all software configurations used by a fabric",
    "properties": {
     "fabricId": {
      "description": "The fabric id",
      "type": "string"
     },
     "nodeImages": {
      "description": "The list of node images",
      "items": {
       "$ref": "#/components/schemas/modelsNodeImageUpdate"
      },
      "type": "array"
     },
     "runningImage": {
      "$ref": "#/components/schemas/modelsFabricImageUpdate"
     },
     "softwareMode": {
      "$ref": "#/components/schemas/modelsSoftwareMode"
     },
     "targetImage": {
      "$ref": "#/components/schemas/modelsFabricImageUpdate"
     }
    },
    "type": "object"
   },
   "modelsFabricTopology": {
    "default": "MESH",
    "description": "FabricTopology defines an enumeration of types of fabric topologies.",
    "enum": [
     "MESH",
     "SPINE_LEAF",
     "DESIGN_BASED"
    ],
    "type": "string"
   },
   "modelsFabricType": {
    "default": "INVENTORY",
    "description": "FabricType defines an enumeration of fabric types.",
    "enum": [
     "INVENTORY",
     "BLUEPRINT",
     "PARKINGLOT"
    ],
    "type": "string"
   },
   "modelsHwSet": {
    "description": "Description not available",
    "properties": {
     "airflowType": {
      "$ref": "#/components/schemas/modelsAirflowType"
     },
     "baseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "deviceModelName": {
      "description": "The model name/pid of the devices in the hw set.",
      "type": "string"
     },
     "nodes": {
      "description": "The node ids corresponding to the devices in the hw set This list will be sorted by the relative position of the nodes within the hardware set. For templates, this will have the name of the nodes, otherwise, this will be the node uuids",
      "items": {
       "$ref": "#/components/schemas/modelsDesignObjectBaseData"
      },
      "type": "array"
     },
     "psuModelName": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsIPAddrType": {
    "default": "IPV4",
    "description": "IpAddrType defines an enumeration of internet address types.",
    "enum": [
     "IPV4",
     "IPV6"
    ],
    "type": "string"
   },
   "modelsInterfaceStp": {
    "description": "The Spanning Tree Protocol (STP) interface configuration for the port. The configuration is only used when a VLAN is deployed on the port.",
    "properties": {
     "bpduGuard": {
      "description": "BPDU guard enforces that the connected device does not send STP BPDUs on the port. If STP BPDUs are received on the port where BPDU guard is enabled the port will be automatically shutdown. User can re-enable the port administratively after ensuring the BPDUs have stopped coming on the port.",
      "type": "boolean"
     },
     "enabled": {
      "description": "The enabled state of the Spanning-Tree Protocol (STP) which indicates if STP is enabled or disabled on the port. Requires at least one of the other properties to also be enabled.",
      "type": "boolean"
     },
     "portFast": {
      "description": "PortFast allows ports to move to forwarding state quickly when the connected device that is not participating in spanning-tree. PortFast is enabled by default on all ports.",
      "type": "boolean"
     },
     "rootGuard": {
      "description": "Root guard enforces the root bridge placement in the network and allows STP to interoperate with user network bridges while still maintaining the bridged network topology that the administrator requires. When BPDUs are received on a root guard enabled port, the STP state will be moved to \"Root inconsistent\" state to indicate this condition. Once the port stops receiving superior BPDUs, root guard will automatically set the port back to a FORWARDING state after the timeout period has expired.",
      "type": "boolean"
     },
     "uplinkFast": {
      "description": "UplinkFast feature enhances STP performance for switches with redundant uplinks. Using the default value for the standard STP forward delay, convergence following a transition from an active link to a redundant link can take up to 30 seconds; 15 seconds for listening and an additional 15 seconds for learning. UplinkFast maintains a list of backup path to the root bridge and immediately move one of the backup paths to forwarding state to speed up the network recovery.",
      "type": "boolean"
     }
    },
    "type": "object"
   },
   "modelsInterfaceType": {
    "default": "NETWORK_PORT_INTERFACE",
    "description": "InterfaceType defines an enumeration of network interface types.",
    "enum": [
     "NETWORK_PORT_INTERFACE",
     "LOOPBACK_INTERFACE",
     "VLAN_INTERFACE",
     "PORT_CHANNEL_INTERFACE",
     "SUB_PORT_INTERFACE"
    ],
    "type": "string"
   },
   "modelsIpPrefix": {
    "description": "IpPrefix encapsulates properties of an IP prefix.",
    "properties": {
     "accept": {
      "description": "Accept or reject (permit or deny).",
      "type": "boolean"
     },
     "description": {
      "description": "A short description for the prefix.",
      "type": "string"
     },
     "match": {
      "$ref": "#/components/schemas/modelsMatchType"
     },
     "matchLen": {
      "description": "Prefix length to be used with match operator. If MatchLen is \"0\", then prefix's length is assumed.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "prefix": {
      "description": "IPv4 or IPv6 prefix. Must be in CIDR format.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsIpmConfig": {
    "description": "IpmConfig describes the configuration for user-initiated IPM collection.",
    "properties": {
     "annotations": {
      "description": "A set of annotations to store user-defined data.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "description": {
      "description": "A user-defined description of IpmConfig. Description can be up to 2000 characters.",
      "type": "string"
     },
     "enabled": {
      "description": "Indicates if IpmConfig is enabled or disabled.",
      "type": "boolean"
     },
     "fabricId": {
      "description": "The identifier of Fabric to which this IpmConfig belongs. Fabric identifier is mandatory, and immutable once set.",
      "type": "string"
     },
     "id": {
      "description": "The unique identifier of IpmConfig. Identifier is required to update an existing IpmConfig. If identifier is missing, then set operation defaults to CREATE mode.",
      "type": "string"
     },
     "ipmTargetGroupId": {
      "description": "This specifies the target switch group id for this rule",
      "type": "string"
     },
     "isPrimary": {
      "description": "Indicates that this switch has been elected as primary switch (IPM).",
      "type": "boolean"
     },
     "labels": {
      "description": "A set of user-defined labels for searching and locating objects.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The user-defined name of IpmConfig. IpmConfig name is unique, and is case-insensitive.",
      "type": "string"
     },
     "peers": {
      "description": "List of IPs for monitoring sessions (readonly).",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "ruleId": {
      "description": "This specifies the connectivity rule that led to this Ipm config.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsIpmProbeType": {
    "default": "IPM_PROBE_TYPE_BIDIRECTIONAL",
    "description": "IpmProbeType defines the ipm probe configuration between two topology groups",
    "enum": [
     "IPM_PROBE_TYPE_BIDIRECTIONAL",
     "IPM_PROBE_TYPE_UNIDRECTIONAL"
    ],
    "type": "string"
   },
   "modelsIpmSetting": {
    "description": "Description not available",
    "properties": {
     "ipmConfigId": {
      "description": "uuid to reference the ipm configuration",
      "type": "string"
     },
     "ipmTarget": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "probeType": {
      "$ref": "#/components/schemas/modelsIpmProbeType"
     }
    },
    "type": "object"
   },
   "modelsKnownProvider": {
    "default": "CISCO",
    "description": "Known Single Sign On providers. Other providers will be named by user.",
    "enum": [
     "CISCO",
     "BOTS"
    ],
    "type": "string"
   },
   "modelsLacpMode": {
    "default": "LACP_ACTIVE",
    "description": "LacpMode defines an enumeration of LACP modes.",
    "enum": [
     "LACP_ACTIVE",
     "LACP_PASSIVE",
     "LACP_OFF"
    ],
    "type": "string"
   },
   "modelsLoopback": {
    "description": "Loopback represents a loopback device in a switch. Loopback encapsulates an IPv4 address, and an optional IPv6 address.",
    "properties": {
     "annotations": {
      "description": "A list of name-value annotations to store user-defined data including complex data such as JSON associated with the Loopback.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "autoCreated": {
      "description": "Indicates that Loopback is automatically created by system.",
      "type": "boolean"
     },
     "description": {
      "description": "A user-defined description of Loopback.",
      "type": "string"
     },
     "enabled": {
      "description": "Indicates if Loopback is enabled or disabled.",
      "type": "boolean"
     },
     "fabricId": {
      "description": "The fabric identifier to which this Loopback belongs to.",
      "type": "string"
     },
     "id": {
      "description": "The unique identifier of Loopback. Identifier is required to update an existing Loopback. If identifier is missing, then set operation defaults to CREATE mode.",
      "type": "string"
     },
     "ipv4Address": {
      "description": "IPv4 address of Loopback device. IPv4 address must be a host IPv4 address.",
      "type": "string"
     },
     "ipv6Address": {
      "description": "IPv6 address of Loopback device. IPv6 address must be a host IPv6 address.",
      "type": "string"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering Loopbacks.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The user-defined name of the Loopback. Loopback name is unique within a node. Loopback name has a fixed prefix of Loopback and an integer suffix (Eg. Loopback10).",
      "type": "string"
     },
     "nodeId": {
      "description": "The node identifier to which this Loopback belongs to.",
      "type": "string"
     },
     "vrfId": {
      "description": "Vrf object attached to this Loopback. Vrf identifier is readonly.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsManagedEndpointType": {
    "default": "MANAGED_ENDPOINT_SERVER_BMC",
    "description": "Type of managed endpoint.",
    "enum": [
     "MANAGED_ENDPOINT_SERVER_BMC",
     "MANAGED_ENDPOINT_SMART_NIC_BMC",
     "MANAGED_ENDPOINT_SMART_NIC_DPU",
     "MANAGED_ENDPOINT_UNSUPPORTED"
    ],
    "type": "string"
   },
   "modelsManagementPort": {
    "description": "A management port encapsulates the configuration and properties of an Out of Band network interface of a node used to communicate with the Cisco Nexus Hyperfabric service.",
    "properties": {
     "cloudUrls": {
      "description": "A list of one or more Cloud URLs used by a node.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "configOrigin": {
      "$ref": "#/components/schemas/modelsConfigOrigin"
     },
     "connectedState": {
      "$ref": "#/components/schemas/modelsConnectedState"
     },
     "description": {
      "description": "The description is a user-defined field to store notes about the management port.",
      "type": "string"
     },
     "dnsAddresses": {
      "description": "A list of one or more DNS IP addresses used by the node.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "enabled": {
      "description": "The administrative state of the management port which indicates if the management port is enabled or disabled.",
      "type": "boolean"
     },
     "id": {
      "description": "This is a read-only field. The unique identifier of the management port.",
      "readOnly": true,
      "type": "string"
     },
     "ipv4Address": {
      "description": "The IPv4 host address for the management port of the node.",
      "type": "string"
     },
     "ipv4ConfigType": {
      "$ref": "#/components/schemas/modelsConfigType"
     },
     "ipv4Gateway": {
      "description": "The IPv4 gateway address for the management port of the node.",
      "type": "string"
     },
     "ipv6Address": {
      "description": "The IPv6 host address for the management port of the node.",
      "type": "string"
     },
     "ipv6ConfigType": {
      "$ref": "#/components/schemas/modelsConfigType"
     },
     "ipv6Gateway": {
      "description": "The IPv6 gateway address for the management port of the node.",
      "type": "string"
     },
     "loginPassword": {
      "description": "Password used by system user to login to the device. An empty password is treated as \"use current password\", and not as \"no password\".",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The name of the management port of the node (E.g. eth0)",
      "type": "string"
     },
     "noProxy": {
      "description": "A list of IP addresses or domain names that should not be proxied.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "nodeId": {
      "description": "This is a read-only field. The unique identifier of the node to which this management port belongs to.",
      "readOnly": true,
      "type": "string"
     },
     "portType": {
      "$ref": "#/components/schemas/modelsPortType"
     },
     "proxyAddress": {
      "description": "The URL for a configured HTTPs proxy for the node.",
      "type": "string"
     },
     "proxyCredentialsId": {
      "description": "A unique identifier of a set of credentials for the proxy.",
      "type": "string"
     },
     "proxyPassword": {
      "description": "A password to be used to authenticate to the proxy. Once set, this attribute is not returned.",
      "type": "string"
     },
     "proxyUsername": {
      "description": "A username to be used to authenticate to the proxy.",
      "type": "string"
     },
     "setProxyPassword": {
      "description": "The flag to indicate that the proxy password should be cleared.",
      "type": "boolean"
     }
    },
    "type": "object"
   },
   "modelsMatchType": {
    "default": "MATCH_EQ",
    "description": "MatchType defines an enumeration of conditional matching operators.",
    "enum": [
     "MATCH_EQ",
     "MATCH_GE",
     "MATCH_LE",
     "MATCH_ANY"
    ],
    "type": "string"
   },
   "modelsMetadata": {
    "description": "Metadata defines a map of attributes related to the lifecycle of the object.",
    "properties": {
     "createdAt": {
      "description": "This is a read-only field. The timestamp when this object was created in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (e.g. `YYYY-MM-DDTHH:MM:SSZ`).",
      "format": "date-time",
      "readOnly": true,
      "type": "string"
     },
     "createdBy": {
      "description": "This is a read-only field. The identity provider and email of the user that created this object.",
      "readOnly": true,
      "type": "string"
     },
     "modifiedAt": {
      "description": "This is a read-only field. The timestamp when this object was last modified in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (e.g. `YYYY-MM-DDTHH:MM:SSZ`).",
      "format": "date-time",
      "readOnly": true,
      "type": "string"
     },
     "modifiedBy": {
      "description": "This is a read-only field. The identity provider and email of the user that modified this object last.",
      "readOnly": true,
      "type": "string"
     },
     "revisionId": {
      "description": "This is a read-only field. An integer that represent the current revision of the object.",
      "readOnly": true,
      "type": "string"
     }
    },
    "readOnly": true,
    "type": "object"
   },
   "modelsNetworkInterface": {
    "description": "NetworkInterface encapsulates properties of a network interface attached to a VRF. A NetworkInterface maybe a network port, VLAN interface (SVI), loopback, port channel or a sub-interface.",
    "properties": {
     "ipv4Addresses": {
      "description": "IPv4 addresses of network interface. IPv4 addresses are readonly, and are set by some APIs (E.g. GetVrfs API when NeedIps is set to true).",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "ipv6Addresses": {
      "description": "IPv6 addresses of network interface. IPv6 addresses are readonly, and are set by some APIs (E.g. GetVrfs API when NeedIps is set to true).",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "name": {
      "description": "The name of the network interface.",
      "type": "string"
     },
     "nodeId": {
      "description": "The node identifier where the interface is located. API users may specify either node name or node identifier.",
      "type": "string"
     },
     "type": {
      "$ref": "#/components/schemas/modelsInterfaceType"
     },
     "vlanId": {
      "description": "VLAN identifier - required only for VLAN interface. Name field is ignored when VlanId is specified.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vni": {
      "description": "The parent VNI of the VLAN. Valid only for VLAN interfaces.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "modelsNetworkPort": {
    "description": "A Port encapsulates the configuration and properties of a front panel network interface of a node used as fabric port to interconnect with other nodes, as routed port to peer at Layer 3 with external devices, as Link Aggregation Group member or as a host port to connect to other endpoints via Layer 2 (VLAN).",
    "properties": {
     "annotations": {
      "description": "A list of name-value annotations to store user-defined data including complex data such as JSON associated with the port.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "breakout": {
      "description": "This is a read-only field. The flag that indicates if the port is in breakout mode or not.",
      "readOnly": true,
      "type": "boolean"
     },
     "breakoutIndex": {
      "description": "This is a read-only field. The index number of the breakout in the parent port. The breakout index is not set when the port is not in breakout mode.",
      "maximum": 4294967295,
      "minimum": 0,
      "readOnly": true,
      "type": "integer"
     },
     "description": {
      "description": "The description is a user-defined field to store notes about the port.",
      "type": "string"
     },
     "enabled": {
      "description": "The enabled state of the port which indicates if the port is enabled or disabled.",
      "type": "boolean"
     },
     "fec": {
      "description": "The Forward Error Correction (FEC) mode of the port. Supported modes are \"rs\" and \"none\". The FEC must be set to \"none\" for 100G DR/FR/LR pluggable optics.",
      "type": "string"
     },
     "forceCounter": {
      "description": "The Force Counter can be incremented to force the port configuration to be forcefully reapplied when there are no other configuration changes such as to recover (un-shut) a port blocked by STP.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "id": {
      "description": "This is a read-only field. The unique identifier of the port.",
      "readOnly": true,
      "type": "string"
     },
     "index": {
      "description": "This is a read-only field. The index number of the port on the linecard.",
      "maximum": 4294967295,
      "minimum": 0,
      "readOnly": true,
      "type": "integer"
     },
     "ipv4Addresses": {
      "description": "A list of up to two IPv4 host addresses with subnet mask to be configured on the port. Requires the `ROUTED_PORT` role to be configured in roles and the port to be associated with a VRF.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "ipv6Addresses": {
      "description": "A list of up to two IPv6 host addresses with subnet mask to be configured on the port. Requires the `ROUTED_PORT` role to be configured in roles and the port to be associated with a VRF.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering ports.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "linecard": {
      "description": "This is a read-only field. The index number of the linecard to which this port belongs to.",
      "maximum": 4294967295,
      "minimum": 0,
      "readOnly": true,
      "type": "integer"
     },
     "linkDown": {
      "description": "Prevent traffic from being forwarded by the port. Requires `enabled` to be set to `true` (equivalent to `Admin State` set to `Up`) and role to be one of `UNUSED_PORT`, `ROUTED_PORT` or `HOST_PORT`.",
      "type": "boolean"
     },
     "maxSpeed": {
      "description": "This is a read-only field. The maximum speed of the port as reported by the system (E.g. 10G).",
      "readOnly": true,
      "type": "string"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "mtu": {
      "description": "The Maximum Transmission Unit (MTU) of the port of the node. Default value is 9100. The MTU value must be between 1500 and 9100.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "name": {
      "description": "The name of the port of the node. The name must have a prefix of Ethernet (E.g. Ethernet1_1) and cannot be modified.",
      "type": "string"
     },
     "nodeId": {
      "description": "This is a read-only field. The unique identifier of the node to which this port belongs to.",
      "readOnly": true,
      "type": "string"
     },
     "pluggable": {
      "description": "The name of the model (PID) of the pluggable cable or optic expected to be used in the port.",
      "type": "string"
     },
     "portAlias": {
      "description": "This specifies the alias for the port. The name of the port is always in canonical form but in the server case, this would also indicate the ensXXX alias for the port.",
      "type": "string"
     },
     "roles": {
      "description": "A list of roles of the port. The port roles list is mandatory, and must contain exactly one role.",
      "items": {
       "$ref": "#/components/schemas/modelsPortRole"
      },
      "type": "array"
     },
     "speed": {
      "description": "The configurable speed mode of the port (E.g. 10G). The port speed cannot be set for a port in breakout mode.",
      "type": "string"
     },
     "stp": {
      "$ref": "#/components/schemas/modelsInterfaceStp"
     },
     "subInfCount": {
      "description": "This is a read-only field. The number of sub-interfaces configured on the port.",
      "maximum": 4294967295,
      "minimum": 0,
      "readOnly": true,
      "type": "integer"
     },
     "systemModified": {
      "description": "This specifies if any port configurations have been made by the system (as opposed to being manual user changes). When the cabling algorithm requires making changes to the configuration and this port no longer requires such config changes, we can reset the port configuration. We should never modify the port configs if they were not made by the system",
      "type": "boolean"
     },
     "vlanIds": {
      "description": "This is a read-only field. A list of VLAN IDs deployed on the port of the node.",
      "items": {
       "maximum": 4294967295,
       "minimum": 0,
       "type": "integer"
      },
      "readOnly": true,
      "type": "array"
     },
     "vnis": {
      "description": "This is a read-only field. A list of VNIs attached to the port of the node.",
      "items": {
       "maximum": 4294967295,
       "minimum": 0,
       "type": "integer"
      },
      "readOnly": true,
      "type": "array"
     },
     "vrfId": {
      "description": "The unique identifier of the VRF associated with the port. The VRF identifier is required for a port with the `ROUTED_PORT` role.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsNode": {
    "description": "Node encapsulates properties of a blueprint fabric node. A node has the following properties and child objects.  - roles: A set of roles that defines what the node is for.  - ports: Physical ports of node. If a port is in break-out mode,   then the break-out ports are treated as physical ports of the node.  - routerId: The service allocated router identifier meant for BGP sessions.",
    "properties": {
     "annotations": {
      "description": "A list of name-value annotations to store user-defined data including complex data such as JSON associated with the node.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "breakouts": {
      "description": "Port breakout configs of the node. Breakouts are set only when entire Fabric config is queried.",
      "items": {
       "$ref": "#/components/schemas/modelsPortBreakout"
      },
      "type": "array"
     },
     "connections": {
      "description": "Fabric connection objects of the node. Note that connection list do not have host (endpoint) connections.",
      "items": {
       "$ref": "#/components/schemas/modelsPortConnection"
      },
      "type": "array"
     },
     "description": {
      "description": "A user-defined description of the node.",
      "type": "string"
     },
     "deviceId": {
      "description": "The identifier of bound (attached) physical device. Device identifier is readonly.",
      "type": "string"
     },
     "enabled": {
      "description": "Indicates if node is enabled or disabled.",
      "type": "boolean"
     },
     "fabricId": {
      "description": "The identifier of Fabric to which the node belongs. Fabric identifier is readonly.",
      "type": "string"
     },
     "grpId": {
      "description": "GrpId defines the server or switch group that this node belongs to",
      "type": "string"
     },
     "hwSetId": {
      "description": "HwSetId defines the hardware set that this node belongs to",
      "type": "string"
     },
     "hwSetNodePosition": {
      "description": "Position of Node in the hw set it belongs to in the design. Hw set position is readonly.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "id": {
      "description": "The unique identifier of the Node. Identifier is required to update an existing node. If identifier is missing, then set operation defaults to CREATE mode.",
      "type": "string"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering nodes.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "location": {
      "description": "A user-defined location string (E.g. SJC20).",
      "type": "string"
     },
     "managementPorts": {
      "description": "Management ports for the node.",
      "items": {
       "$ref": "#/components/schemas/modelsManagementPort"
      },
      "type": "array"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "modelName": {
      "description": "Hardware model name of the node. Model name cannot be nullified.",
      "type": "string"
     },
     "name": {
      "description": "The user-defined name of the Node. Node name is unique, and must be a FQDN compliant, single label hostname.",
      "type": "string"
     },
     "nodeType": {
      "$ref": "#/components/schemas/modelsNodeType"
     },
     "osType": {
      "$ref": "#/components/schemas/modelsOsType"
     },
     "ports": {
      "description": "NetworkPort objects of the node. Ports are optional for node updates.",
      "items": {
       "$ref": "#/components/schemas/modelsNetworkPort"
      },
      "type": "array"
     },
     "position": {
      "description": "Position of Node in the fabric's node list. Position is readonly.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "psuAirflows": {
      "description": "Airflows and corresponding psu models of the node.",
      "items": {
       "$ref": "#/components/schemas/modelsPsuAirflow"
      },
      "type": "array"
     },
     "roles": {
      "description": "A set of roles of the Node. Node roles are mandatory. A Node can have either LEAF or SPINE role, but not both.",
      "items": {
       "$ref": "#/components/schemas/modelsNodeRole"
      },
      "type": "array"
     },
     "serialNumber": {
      "description": "Serial number of the node. Serial number cannot be nullified.",
      "type": "string"
     },
     "serverMgmtPorts": {
      "description": "BMC \u0026 LOM ports for the node.",
      "items": {
       "$ref": "#/components/schemas/modelsServerMgmtPort"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "modelsNodeImageUpdate": {
    "description": "NodeImageUpdate describes the node image configurations",
    "properties": {
     "activateAt": {
      "description": "The optional activation time",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "The node id or name",
      "type": "string"
     },
     "nodeName": {
      "description": "optional node name",
      "type": "string"
     },
     "tag": {
      "description": "The image tag assigned to the node",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsNodePortConnectivityRule": {
    "description": "Description not available",
    "properties": {
     "cablePluggablePid": {
      "description": "The pluggable pid to be used for the cable in the rule",
      "type": "string"
     },
     "node1Id": {
      "description": "The external node id and name of the first node in the connectivity rule",
      "type": "string"
     },
     "node1Name": {
      "description": "Description not available",
      "type": "string"
     },
     "node1PortName": {
      "description": "The port name for the first node in the connectivity rule",
      "type": "string"
     },
     "node1PortPluggablePid": {
      "description": "The model name/pid for the pluggable to be used in the first node:port",
      "type": "string"
     },
     "node2Id": {
      "description": "The id and name of the second node in the connectivity rule",
      "type": "string"
     },
     "node2Name": {
      "description": "Description not available",
      "type": "string"
     },
     "node2PortName": {
      "description": "The port name for the second node in the connectivity rule",
      "type": "string"
     },
     "node2PortPluggablePid": {
      "description": "The model name/pid for the pluggable to be used in the second node:port",
      "type": "string"
     },
     "notes": {
      "description": "The notes associated with the connectivity rule. This could",
      "type": "string"
     },
     "ruleId": {
      "description": "The id of the rule",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsNodePortOverrideRule": {
    "description": "Description not available",
    "properties": {
     "nodeId": {
      "description": "The id and name of the node in the override rule",
      "type": "string"
     },
     "nodeName": {
      "description": "Description not available",
      "type": "string"
     },
     "nodePortName": {
      "description": "The port name for the node in the override rule",
      "type": "string"
     },
     "pluggable": {
      "description": "Pluggable associated with the node port. Can be a specific breakout configuration.",
      "type": "string"
     },
     "ruleId": {
      "description": "The id of the rule",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsNodeRole": {
    "default": "LEAF",
    "description": "NodeRole defines an enumeration of roles that can be associated with a node.",
    "enum": [
     "LEAF",
     "SPINE",
     "SERVER",
     "SWITCH"
    ],
    "type": "string"
   },
   "modelsNodeType": {
    "default": "NODE_BLUEPRINT",
    "description": "NodeType defines an enumeration of node types.",
    "enum": [
     "NODE_BLUEPRINT",
     "NODE_SWITCH",
     "NODE_SERVER"
    ],
    "type": "string"
   },
   "modelsNotificationSettings": {
    "description": "The notification settings for a fabric.",
    "properties": {
     "enabled": {
      "description": "Enable/disable the subcription.",
      "type": "boolean"
     },
     "endpointIds": {
      "description": "A list of endpoint ids or names. Notifications on the fabric are forwarded to these.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "fabricId": {
      "description": "This is a read-only field. The fabric id or name.",
      "readOnly": true,
      "type": "string"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     }
    },
    "type": "object"
   },
   "modelsObjectType": {
    "default": "USER",
    "description": "ObjectType defines an enumeration of types of objects.",
    "enum": [
     "USER",
     "TENANT",
     "FABRIC",
     "NODE",
     "NETWORK_PORT",
     "PORT_CONNECTION",
     "VLAN",
     "SVI",
     "DHCP_RELAY",
     "VRF",
     "STATIC_ROUTES",
     "PORT_CHANNEL",
     "FABRIC_TRANSACTION",
     "ORGANIZATION",
     "BEARER_TOKEN",
     "API_KEY",
     "REST_KEY",
     "VNI",
     "MANAGEMENT_PORT",
     "LOOPBACK",
     "SUB_INTERFACE",
     "PER_VLAN_STP",
     "BGP_PEER",
     "PORT_BREAKOUT",
     "BGP_POLICY",
     "PREFIX_LIST",
     "DEVICE",
     "NOTIFICATION_ENDPOINT",
     "CERTIFICATES",
     "FABRIC_IMAGE_UPDATE",
     "NODE_IMAGE_PACKAGE",
     "IMAGE_PACKAGE",
     "IPM_CONFIG",
     "NODE_IMAGE_UPDATE",
     "NODE_METADATA",
     "NOTIFICATION_SETTINGS",
     "DSCP_CONFIG",
     "TIER",
     "SWITCH_GROUP",
     "SERVER_GROUP",
     "RAIL_GROUP",
     "RAIL",
     "HW_SET",
     "SWITCH_GROUP_CONN_RULE",
     "SERVER_GROUP_CONN_RULE",
     "NODE_PORT_CONN_RULE",
     "NODE_PORT_OVERRIDE_RULE"
    ],
    "type": "string"
   },
   "modelsOperState": {
    "default": "UP",
    "description": "OperState defines an enumeration for object's operational states.",
    "enum": [
     "UP",
     "DOWN"
    ],
    "type": "string"
   },
   "modelsOperation": {
    "default": "CREATE",
    "description": "Operation defines an enumeration of the types of operations or actions.",
    "enum": [
     "CREATE",
     "UPDATE",
     "DELETE",
     "ENABLE",
     "DISABLE",
     "LOGIN",
     "LOGOUT",
     "COMMIT",
     "REVERT",
     "BIND",
     "UNBIND",
     "COMMENT"
    ],
    "type": "string"
   },
   "modelsOrgKind": {
    "default": "REGULAR",
    "description": "OrgKind lists various organization types.",
    "enum": [
     "REGULAR",
     "PARKING_LOT"
    ],
    "type": "string"
   },
   "modelsOrgProperty": {
    "description": "OrgProperty encapsulates name/value pair for configuring an organization level property.",
    "properties": {
     "enabled": {
      "description": "Is the property enabled?",
      "type": "boolean"
     },
     "name": {
      "description": "The name of the property.",
      "type": "string"
     },
     "service": {
      "description": "Optional service name.",
      "type": "string"
     },
     "value": {
      "description": "Value of the property.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsOsType": {
    "default": "HYPER_FABRIC",
    "description": "OsType defines an enumeration of various device operating system types.",
    "enum": [
     "HYPER_FABRIC",
     "NEXUS",
     "IOS_XE",
     "IOS_XR",
     "LINUX",
     "WINDOWS"
    ],
    "type": "string"
   },
   "modelsPerVlanStp": {
    "description": "PerVlanStp encapsulates properties of a Per-Vlan spanning tree protocol config object. There can be only one PerVlanStp config for a fabric.",
    "properties": {
     "enabled": {
      "description": "Indicates if PerVlanStp is enabled or disabled.",
      "type": "boolean"
     },
     "fabricId": {
      "description": "The identifier of Fabric to which this PerVlanStp belong. Fabric identifier is mandatory, and immutable once set.",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "priority": {
      "description": "Bridge priority value as a multiple of 4096. Default is 32768, and range is 4096-61440.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "stpMac": {
      "description": "Bridge MAC address. User is expected to set the lowest MAC address to make this Fabric as the root of spanning tree.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsPlacementStrategy": {
    "default": "PLACEMENT_STRATEGY_TYPE_PACKED",
    "description": "PlacementStrategy defines how the rails are placed on the switches in the switch group they are associated with",
    "enum": [
     "PLACEMENT_STRATEGY_TYPE_PACKED",
     "PLACEMENT_STRATEGY_TYPE_SEQUENTIAL"
    ],
    "type": "string"
   },
   "modelsPortBreakout": {
    "description": "PortBreakout encapsulates a network port breakout policy. PortBreakout does not represent a configurable object. It is a policy that gets applied to a switch.",
    "properties": {
     "annotations": {
      "description": "A list of name-value annotations to store user-defined data including complex data such as JSON associated with the Port Breakout.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "breakouts": {
      "description": "The output of the port breakout operation (readonly).",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "description": {
      "description": "A user-defined description of PortBreakout.",
      "type": "string"
     },
     "enabled": {
      "description": "Indicates if PortBreakout is enabled or disabled.",
      "type": "boolean"
     },
     "fabricId": {
      "description": "The identifier of Fabric to which this PortBreakout belongs to. FabricId is mandatory.",
      "type": "string"
     },
     "id": {
      "description": "The unique identifier of PortBreakout. Identifier is required to update an existing PortBreakout. If identifier is missing, then set operation defaults to CREATE mode.",
      "type": "string"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering Port Breakouts.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "mode": {
      "description": "Breakout mode. E.g. 2x200G(2)",
      "type": "string"
     },
     "name": {
      "description": "The user-defined name of the PortBreakout object.",
      "type": "string"
     },
     "nodeId": {
      "description": "The identifier of the node for which the PortBreakout is for. NodeId is mandatory.",
      "type": "string"
     },
     "pluggable": {
      "description": "User-defined cable model name (PID).",
      "type": "string"
     },
     "ports": {
      "description": "The names of base network ports.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "systemModified": {
      "description": "This specifies if any port breakout configs have been made by the system (as opposed to being manual user changes). When the cabling algorithm requires making changes to the configuration and this port breakout is no longer required, we can remove the port configuratio. We should never modify the port breakout configs if they were not made by the system",
      "type": "boolean"
     }
    },
    "type": "object"
   },
   "modelsPortChannel": {
    "description": "PortChannel represents a set of physical ports in a PortChannel/LACP config. PortChannel name is unique within a fabric. NOTES: - PortChannel object must have HOST_PORT as role. - PortChannel members cannot be part of Vlans. - PortChannel member ports must have LAG_PORT as port role.",
    "properties": {
     "annotations": {
      "description": "A list of name-value annotations to store user-defined data including complex data such as JSON associated with the port channel.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "description": {
      "description": "A user-defined description of PortChannel.",
      "type": "string"
     },
     "enabled": {
      "description": "Indicates if PortChannel is enabled or disabled.",
      "type": "boolean"
     },
     "fabricId": {
      "description": "The identifier of the fabric to which this port channel belongs to. FabricId is mandatory.",
      "type": "string"
     },
     "id": {
      "description": "The unique identifier of PortChannel. Identifier is required to update an existing PortChannel. If identifier is missing, then set operation defaults to CREATE mode.",
      "type": "string"
     },
     "ipv4Addresses": {
      "description": "IPv4 addresses of PortChannel. The service supports up to 2 IPv4 addresses, and every address must be a network address. Meaning, address must be in CIDR format with CIDR \u003c 32. IPv4 address is valid only for routed PortChannel.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "ipv6Addresses": {
      "description": "IPv6 addresses of PortChannel. The service supports up to 2 IPv6 addresses, and every address must be a network address. Meaning, address must be in CIDR format with CIDR \u003c 128. IPv6 address is valid only for routed PortChannel.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering port channels.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "lacpMode": {
      "$ref": "#/components/schemas/modelsLacpMode"
     },
     "maxSpeed": {
      "description": "Maximum speed of the PortChannel (readonly) (E.g. 10G).",
      "type": "string"
     },
     "members": {
      "description": "A set of member NetworkPort objects (E.g. Ethernet1_1, Ethernet1_4 etc.). There must be at least two members.",
      "items": {
       "$ref": "#/components/schemas/modelsPortEndpoint"
      },
      "type": "array"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "minLinks": {
      "description": "Minimum number of active links needed for PortChannel to operate.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "mtu": {
      "description": "MTU of the PortChannel. Value must be between 1500 and 9600.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "name": {
      "description": "The name of PortChannel. Name must have a prefix of PortChannel (E.g. PortChannel1).",
      "type": "string"
     },
     "roles": {
      "description": "A set of roles of the PortChannel. Roles must have exactly one entry, and it must be either HOST_PORT or ROUTED_PORT.",
      "items": {
       "$ref": "#/components/schemas/modelsPortRole"
      },
      "type": "array"
     },
     "stp": {
      "$ref": "#/components/schemas/modelsInterfaceStp"
     },
     "sysMac": {
      "description": "MAC address used for EVPN multi-homing.",
      "type": "string"
     },
     "vlanIds": {
      "description": "VlanIds defines the identifiers of VLANs of which this port channel is a member of. VlanIds is readonly.",
      "items": {
       "maximum": 4294967295,
       "minimum": 0,
       "type": "integer"
      },
      "type": "array"
     },
     "vnis": {
      "description": "Vnis defines the identifiers of VNIs of which this port channel is a member of. Vnis is readonly.",
      "items": {
       "maximum": 4294967295,
       "minimum": 0,
       "type": "integer"
      },
      "type": "array"
     },
     "vrfId": {
      "description": "The identifier of VRF to which this PortChannel belongs to. VRF identifier is set only for routed PortChannel that are added to a VRF.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsPortConnection": {
    "description": "A Connection represents the bidirectional physical interconnection between two ports of two nodes in a fabric. The role of the ports in a connection will be automatically configured as `FABRIC_PORT`. Cisco Nexus Hyperfabric uses the connections to generate a possible Bill Of Material, cabling plan and to verify the correct implementation of the desired connectivity intent in a fabric.",
    "properties": {
     "description": {
      "description": "The description is a user-defined field to store notes about the connection.",
      "type": "string"
     },
     "fabricId": {
      "description": "This is a read-only field. The identifier of the fabric to which this connection belongs to.",
      "readOnly": true,
      "type": "string"
     },
     "id": {
      "description": "This is a read-only field. The unique identifier of the connection.",
      "readOnly": true,
      "type": "string"
     },
     "local": {
      "$ref": "#/components/schemas/modelsPortEndpoint"
     },
     "osType": {
      "$ref": "#/components/schemas/modelsOsType"
     },
     "pluggable": {
      "description": "The type or name of the model (PID) of the pluggable cable or optic expected to be used for the connection.",
      "type": "string"
     },
     "remote": {
      "$ref": "#/components/schemas/modelsPortEndpoint"
     },
     "remotePluggable": {
      "description": "The type or name of the model (PID) of the pluggable cable or optic expected to be used for the remote end of the connection",
      "type": "string"
     },
     "remoteRailId": {
      "description": "The remote rail id and name",
      "type": "string"
     },
     "unrecognized": {
      "description": "This is a read-only field. The flag that indicates if the remote side of the connection is recognized or not.",
      "readOnly": true,
      "type": "boolean"
     }
    },
    "type": "object"
   },
   "modelsPortEndpoint": {
    "description": "PortEndpoint defines a globally unique port location or endpoint.",
    "properties": {
     "nodeId": {
      "description": "The unique identifier of the node.",
      "type": "string"
     },
     "nodeName": {
      "description": "The user-defined name of the node.",
      "type": "string"
     },
     "portName": {
      "description": "The canonical name of the port (E.g. Ethernet1_1).",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsPortRole": {
    "default": "UNUSED_PORT",
    "description": "PortRole defines an enumeration of roles of ports or port channels.",
    "enum": [
     "UNUSED_PORT",
     "FABRIC_PORT",
     "HOST_PORT",
     "ROUTED_PORT",
     "LAG_PORT"
    ],
    "type": "string"
   },
   "modelsPortType": {
    "default": "DATA_PORT",
    "description": "PortType enumerates the categories of ports",
    "enum": [
     "DATA_PORT",
     "MGMT_PORT",
     "BMC_PORT"
    ],
    "type": "string"
   },
   "modelsPrefixList": {
    "description": "PrefixList encapsulates a set of IPv4 or IPv6 prefixes.",
    "properties": {
     "annotations": {
      "description": "A set of annotations to store user-defined data.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "description": {
      "description": "A user-defined description of PrefixList. Description can be up to 2000 characters.",
      "type": "string"
     },
     "enabled": {
      "description": "Indicates if PrefixList is enabled or disabled.",
      "type": "boolean"
     },
     "id": {
      "description": "The unique identifier of PrefixList. Identifier is required to update an existing PrefixList. If identifier is missing, then set operation defaults to CREATE mode.",
      "type": "string"
     },
     "labels": {
      "description": "A set of user-defined labels for searching and locating objects.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The user-defined name of PrefixList. PrefixList name is unique, and is case-insensitive.",
      "type": "string"
     },
     "prefixes": {
      "description": "A set of prefixes. May provide up to 50 prefixes.",
      "items": {
       "$ref": "#/components/schemas/modelsIpPrefix"
      },
      "type": "array"
     },
     "type": {
      "$ref": "#/components/schemas/modelsIPAddrType"
     }
    },
    "type": "object"
   },
   "modelsPsuAirflow": {
    "description": "PsuAirflow encapsulates Airflow and corresponding Psu model.",
    "properties": {
     "airflow": {
      "$ref": "#/components/schemas/modelsAirflowType"
     },
     "psuModel": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsRail": {
    "description": "Description not available",
    "properties": {
     "baseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     }
    },
    "type": "object"
   },
   "modelsRailGroup": {
    "description": "Description not available",
    "properties": {
     "baseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "count": {
      "description": "number of rails in the group. This corresponds to the number of GPUs on the platform.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "overallGroupPosition": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "railWidth": {
      "description": "number of reserved ports in a rail. This loosely corresponds to the number of servers in the server group associated with the rail group this rail is a member of. The user can pre-allocate ports for future use by configuring a larger width than the number of currently associated servers.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "rails": {
      "description": "all the rails that are members of this rail group",
      "items": {
       "$ref": "#/components/schemas/modelsRail"
      },
      "type": "array"
     },
     "strategy": {
      "$ref": "#/components/schemas/modelsPlacementStrategy"
     },
     "switchGroup": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     }
    },
    "type": "object"
   },
   "modelsRestKeyType": {
    "default": "REST_KEY_TYPE_ED25519",
    "description": "Used to indicate either an ed25519/RSA key.",
    "enum": [
     "REST_KEY_TYPE_ED25519",
     "REST_KEY_TYPE_RSA"
    ],
    "type": "string"
   },
   "modelsRouteInfo": {
    "description": "RouteInfo defines a specific single IPv4 or IPv6 static route which inludes an IPv4 or IPv6 prefix in CIDR notation and a next-hop address of the same IP version.",
    "properties": {
     "discard": {
      "description": "The flag that defines if the traffic matching the static route is silently discarded or not. This is also referred to as a null route or a black hole route.",
      "type": "boolean"
     },
     "interface": {
      "description": "The next-hop interface or network port name.",
      "type": "string"
     },
     "nextHop": {
      "description": "The next-hop IP address. Must be a host IP address.",
      "type": "string"
     },
     "nextVrf": {
      "description": "The name of the VRF where the next-hop is present.",
      "type": "string"
     },
     "nodeId": {
      "description": "The unique identifier of the node where the route is deployed.",
      "type": "string"
     },
     "preference": {
      "description": "The route preference value (ascending) which sets the administrative distance. The range is from 1 to 255.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "prefix": {
      "description": "The IPv4 or IPv6 prefix in CIDR notation.",
      "type": "string"
     },
     "tag": {
      "$ref": "#/components/schemas/modelsRouteTag"
     }
    },
    "type": "object"
   },
   "modelsRouteOriginType": {
    "default": "ROUTE_ORIGIN_EBGP",
    "description": "RouteOriginType defines an enumeration of BGP route origins.",
    "enum": [
     "ROUTE_ORIGIN_EBGP",
     "ROUTE_ORIGIN_IBGP"
    ],
    "type": "string"
   },
   "modelsRouteTag": {
    "default": "TAG_BLUE",
    "description": "RouteTag defines an enumeration of custom route tags. The following values are reserved and should not be used, TAG_AMBER",
    "enum": [
     "TAG_AMBER",
     "TAG_BLACK",
     "TAG_BLUE",
     "TAG_GREEN",
     "TAG_RED",
     "TAG_PURPLE",
     "TAG_YELLOW"
    ],
    "type": "string"
   },
   "modelsRouteType": {
    "default": "ROUTE_EAD",
    "description": "RouteType defines an enumeration of BGP EVPN route types from 1 to 5.",
    "enum": [
     "ROUTE_EAD",
     "ROUTE_MAC_IP",
     "ROUTE_MULTICAST",
     "ROUTE_ES",
     "ROUTE_PREFIX"
    ],
    "type": "string"
   },
   "modelsRuleExecutionException": {
    "description": "Description not available",
    "properties": {
     "deficitCount": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "node1Id": {
      "description": "Description not available",
      "type": "string"
     },
     "node1Name": {
      "description": "Description not available",
      "type": "string"
     },
     "node2Id": {
      "description": "Description not available",
      "type": "string"
     },
     "node2Name": {
      "description": "Description not available",
      "type": "string"
     },
     "node2RailId": {
      "description": "Description not available",
      "type": "string"
     },
     "node2RailName": {
      "description": "Description not available",
      "type": "string"
     },
     "svrGroupRule": {
      "$ref": "#/components/schemas/modelsServerGroupConnectivityRule"
     },
     "swGroupRule": {
      "$ref": "#/components/schemas/modelsSwitchGroupConnectivityRule"
     }
    },
    "type": "object"
   },
   "modelsSbpModel": {
    "default": "HF6100_32D",
    "description": "A list of supported device models.",
    "enum": [
     "HF6100_32D",
     "HF6100_60L4D",
     "HF6100_64ED"
    ],
    "type": "string"
   },
   "modelsSbpPid": {
    "default": "HF6100_32D_SVC_E",
    "description": "A list of supported Product IDs (PIDs). There is a direct mapping from a PID to a entitlement level and device model.",
    "enum": [
     "HF6100_32D_SVC_E",
     "HF6100_60L4D_SVC_E",
     "HF6100_64ED_SVC_E",
     "HF6100_32D_SVC_A",
     "HF6100_60L4D_SVC_A",
     "HF6100_64ED_SVC_A",
     "HF6100_32D_SVC_P",
     "HF6100_60L4D_SVC_P",
     "HF6100_64ED_SVC_P",
     "HF6100_32D_DEMO",
     "HF6100_60L4D_DEMO",
     "HF6100_64ED_DEMO"
    ],
    "type": "string"
   },
   "modelsServerGroup": {
    "description": "Description not available",
    "properties": {
     "baseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "baseModel": {
      "description": "Description not available",
      "type": "string"
     },
     "hwSets": {
      "description": "The hw sets that belong to this switch group This list will be sorted by the relative position of the hardware sets within the switch group",
      "items": {
       "$ref": "#/components/schemas/modelsHwSet"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "modelsServerGroupConnectivityRule": {
    "description": "Description not available",
    "properties": {
     "cablePluggablePid": {
      "description": "The pluggable pid to be used for the cable in the rule",
      "type": "string"
     },
     "ipmProbes": {
      "description": "Ipm settings for indirect connections",
      "items": {
       "$ref": "#/components/schemas/modelsIpmSetting"
      },
      "type": "array"
     },
     "notes": {
      "description": "The notes associated with the connectivity rule. This could describe",
      "type": "string"
     },
     "numDirectConnections": {
      "description": "number of direct connections between group 1 and group 2",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "portGroupType": {
      "$ref": "#/components/schemas/modelsServerPortGroupType"
     },
     "railGroupBaseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "ruleId": {
      "description": "The id of the rule",
      "type": "string"
     },
     "serverGroupBaseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "serverGroupPluggablePid": {
      "description": "The pluggable pid to be used for the ports of the devices in the server group",
      "type": "string"
     },
     "strategy": {
      "$ref": "#/components/schemas/modelsCablingStrategy"
     },
     "switchGroupBaseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "switchGroupBreakout": {
      "description": "Breakout mode at the switches in sw group in this rule",
      "type": "boolean"
     },
     "switchGroupPluggablePid": {
      "description": "The pluggable pid to be used for the ports of the devices in the switch group",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsServerMgmtPort": {
    "description": "Description not available",
    "properties": {
     "description": {
      "description": "The description is a user-defined field to store notes about the server mgmt port.",
      "type": "string"
     },
     "deviceId": {
      "description": "Mac address of the server mgmt port",
      "type": "string"
     },
     "id": {
      "description": "This is a read-only field. The unique identifier of the Server MGMT port(BMC or LOM port).",
      "readOnly": true,
      "type": "string"
     },
     "index": {
      "description": "This is a read-only field. Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "readOnly": true,
      "type": "integer"
     },
     "linecard": {
      "description": "This is a read-only field. The index number of the linecard to which this port belongs to.",
      "maximum": 4294967295,
      "minimum": 0,
      "readOnly": true,
      "type": "integer"
     },
     "name": {
      "description": "The name of the server mgmt port of the node (E.g. eth0)",
      "type": "string"
     },
     "nodeId": {
      "description": "This is a read-only field. The unique identifier of the node to which this server mgmt port belongs to.",
      "readOnly": true,
      "type": "string"
     },
     "pluggable": {
      "description": "Description not available",
      "type": "string"
     },
     "portGroupType": {
      "$ref": "#/components/schemas/modelsServerPortGroupType"
     },
     "portType": {
      "$ref": "#/components/schemas/modelsPortType"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "remotePluggable": {
      "description": "Description not available",
      "type": "string"
     },
     "remotePort": {
      "description": "The remote port name that connects to this server mgmt port",
      "type": "string"
     },
     "speed": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsServerPortGroupType": {
    "default": "NORTH_SOUTH",
    "description": "ServerPortGroupType enumerates various categories of server ports",
    "enum": [
     "NORTH_SOUTH",
     "EAST_WEST",
     "NORTH_SOUTH_BMC",
     "LOM_ETHERNET",
     "BMC",
     "EAST_WEST_BMC"
    ],
    "type": "string"
   },
   "modelsSoftwareMode": {
    "default": "SOFTWARE_MODE_MAINTENANCE_ON",
    "description": "SoftwareMode specifies the operation mode of the fabric software",
    "enum": [
     "SOFTWARE_MODE_MAINTENANCE_ON",
     "SOFTWARE_MODE_MAINTENANCE_OFF"
    ],
    "type": "string"
   },
   "modelsStaticRoutes": {
    "description": "The Static Routes object is a child object of a VRF that encapsulates a set of IP static routes pointing to a next-hop. The next-hop must be accessible through one of the routed interfaces associated with the parent VRF.",
    "properties": {
     "annotations": {
      "description": "A list of name-value annotations to store user-defined data including complex data such as JSON associated with the static routes.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "description": {
      "description": "The description is a user-defined field to store notes about the static routes.",
      "type": "string"
     },
     "enabled": {
      "description": "The enabled state of the static routes which indicates if the static routes is enabled or disabled.",
      "type": "boolean"
     },
     "fabricId": {
      "description": "This is a read-only field. The unique identifier of the fabric to which this static routes belong.",
      "readOnly": true,
      "type": "string"
     },
     "id": {
      "description": "This is a read-only field. The unique identifier of the static routes object.",
      "readOnly": true,
      "type": "string"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering static routes.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The user-defined name of the static routes. The static routes name has to be unique, and is case-insensitive.",
      "type": "string"
     },
     "routes": {
      "description": "A list of IP static route definitions.",
      "items": {
       "$ref": "#/components/schemas/modelsRouteInfo"
      },
      "type": "array"
     },
     "vrfId": {
      "description": "This is a read-only field. The unique identifier of the VRF to which this static routes belong to. The VRF identifier is immutable once set.",
      "readOnly": true,
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsSubInterface": {
    "description": "SubInterface encapsulates properties of a sub-port or sub-interface. SubInterface provides logical division of a physical interface. SubInterface cannot be added to a NetworkPort or a PortChannel attached to Vlans. SubInterface maybe added a routed port or routed PortChannel.",
    "properties": {
     "annotations": {
      "description": "A list of name-value annotations to store user-defined data including complex data such as JSON associated with the Sub-Interface.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "description": {
      "description": "A user-defined description of SubInterface.",
      "type": "string"
     },
     "enabled": {
      "description": "Indicates if SubInterface is enabled or disabled.",
      "type": "boolean"
     },
     "fabricId": {
      "description": "The identifier of Fabric to which this SubInterface belongs to. FabricId is mandatory.",
      "type": "string"
     },
     "id": {
      "description": "The unique identifier of SubInterface. Identifier is required to update an existing SubInterface. If identifier is missing, then set operation defaults to CREATE mode.",
      "type": "string"
     },
     "ipv4Addresses": {
      "description": "SubInterface's IPv4 addresses. The service supports up to 2 IPv4 addresses, and every address must be a network address. Meaning, address must be in CIDR format with CIDR \u003c 32.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "ipv6Addresses": {
      "description": "SubInterface's IPv6 addresses. The service supports up to 2 IPv6 addresses, and every address must be a network address. Meaning, address must be in CIDR format with CIDR \u003c 128.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering Sub-Interfaces.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The user-defined name of the SubInterface. SubInterface name is unique, and must be in the format (\u003cEthernet1_4_1|\u003cPortChannel0\u003e)[.]\u003cID\u003e",
      "type": "string"
     },
     "nodeId": {
      "description": "The identifier of the Node where SubInterface is located. NodeId is mandatory.",
      "type": "string"
     },
     "parent": {
      "description": "The name of parent interface. This property is readonly.",
      "type": "string"
     },
     "vlanId": {
      "description": "Vlan identifier of SubInterface.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vrfId": {
      "description": "The identifier of VRF to which this SubInterface belongs to.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsSupportAccessState": {
    "default": "OFF",
    "description": "SupportAccessState defines whether support access is enabled for an organization.",
    "enum": [
     "OFF",
     "ON"
    ],
    "type": "string"
   },
   "modelsSupportSettings": {
    "description": "SupportSettings holds support access configuration for an org.",
    "properties": {
     "supportAccessEndTs": {
      "description": "Time that support access ends.",
      "format": "date-time",
      "type": "string"
     },
     "supportAccessStartTs": {
      "description": "Time that support access begins.",
      "format": "date-time",
      "type": "string"
     },
     "supportAccessState": {
      "$ref": "#/components/schemas/modelsSupportAccessState"
     }
    },
    "type": "object"
   },
   "modelsSvi": {
    "description": "A Switch Virtual Interface (SVI) or VLAN interface is a logical Layer 3 interface that connects a VLAN to a Layer 3 virtual routing and forwarding (VRF) instance and acts as a gateway for the hosts connected to the VLAN. A Static Anycast Gateway SVI is an SVI deployed on multiple devices enabling the use of the same gateway IP addresses across all the nodes that are part of a VNI.",
    "properties": {
     "enabled": {
      "description": "The enabled state of the SVI which indicates if the SVI is enabled or disabled.",
      "type": "boolean"
     },
     "ipv4Addresses": {
      "description": "A list of up to two IPv4 host addresses with subnet mask to be configured on the SVI. If there are two IP addresses on the SVI, then there are two possibilities. \ta) If IPS are in two different networks, then SVI gets two networks. \tb) If IPS are in the same network, then the first IP address is the primary gateway \t  and second IP address is the secondary gateway.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "ipv6Addresses": {
      "description": "A list of up to one IPv6 host address with subnet mask to be configured on the SVI.",
      "items": {
       "type": "string"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "modelsSwitchGroup": {
    "description": "Description not available",
    "properties": {
     "baseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "baseModel": {
      "description": "Description not available",
      "type": "string"
     },
     "hwSets": {
      "description": "The hw sets that belong to this switch group This list will be sorted by the relative position of the hardware sets within the switch group",
      "items": {
       "$ref": "#/components/schemas/modelsHwSet"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "modelsSwitchGroupConnectivityRule": {
    "description": "Description not available",
    "properties": {
     "cablePluggablePid": {
      "description": "The pluggable pid to be used for the cable in the rule",
      "type": "string"
     },
     "ipmProbes": {
      "description": "ipm configuration(s) for this rule",
      "items": {
       "$ref": "#/components/schemas/modelsIpmSetting"
      },
      "type": "array"
     },
     "notes": {
      "description": "The notes associated with the connectivity rule. This could describe",
      "type": "string"
     },
     "numDirectConnections": {
      "description": "number of direct connections between group 1 and group 2",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "ruleId": {
      "description": "The id of the rule",
      "type": "string"
     },
     "strategy": {
      "$ref": "#/components/schemas/modelsCablingStrategy"
     },
     "switchGroup1BaseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "switchGroup1Breakout": {
      "description": "Breakout applied at the switches in sw group 1 in this rule",
      "type": "boolean"
     },
     "switchGroup1PluggablePid": {
      "description": "The pluggable pid to be used for the ports of the devices in group 1",
      "type": "string"
     },
     "switchGroup2BaseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "switchGroup2Breakout": {
      "description": "Breakout applied at the switches in sw group 2 in this rule",
      "type": "boolean"
     },
     "switchGroup2PluggablePid": {
      "description": "The pluggable pid to be used for the ports of the devices in group 2",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsTenant": {
    "description": "A tenant object.",
    "properties": {
     "annotations": {
      "description": "A set of annotations to store user-defined data. Tortuga allows up to four annotations per object. If caller needs more than four, then caller may store them as JSON in an annotation.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "description": {
      "description": "A user-defined description of Tenant. Description can be up to 2000 characters.",
      "type": "string"
     },
     "enabled": {
      "description": "Indicates if Tenant is enabled or disabled.",
      "type": "boolean"
     },
     "id": {
      "description": "The unique identifier of the Tenant. Identifier is required to update an existing Tenant. If identifier is missing, then set operation defaults to CREATE mode.",
      "type": "string"
     },
     "isDefault": {
      "description": "Indicates if this Tenant object is the default-tenant of organization.",
      "type": "boolean"
     },
     "labels": {
      "description": "A set of user-defined labels for searching and locating objects.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The user-defined name of the Tenant. Tenant name is unique, and is case-insensitive.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsTheme": {
    "default": "DARK",
    "description": "Theme defines an enumeration of UI themes.",
    "enum": [
     "DARK",
     "LIGHT",
     "HIGH_CONTRAST"
    ],
    "type": "string"
   },
   "modelsTier": {
    "description": "Description not available",
    "properties": {
     "allowedTierTypes": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/modelsTierType"
      },
      "type": "array"
     },
     "baseData": {
      "$ref": "#/components/schemas/modelsDesignObjectBaseData"
     },
     "serverGroups": {
      "description": "The server groups that are a part of the tier if one of the allowed tier types is a server group",
      "items": {
       "$ref": "#/components/schemas/modelsServerGroup"
      },
      "type": "array"
     },
     "switchGroups": {
      "description": "The switch groups that are a part of the tier if one of the allowed tier types is a switch group",
      "items": {
       "$ref": "#/components/schemas/modelsSwitchGroup"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "modelsTierType": {
    "default": "TIER_TYPE_SWITCH_GROUP",
    "description": "TierType enumerates the types of tiers in a fabric topology",
    "enum": [
     "TIER_TYPE_SWITCH_GROUP",
     "TIER_TYPE_SERVER_GROUP",
     "TIER_TYPE_RAIL_GROUP"
    ],
    "type": "string"
   },
   "modelsTokenScope": {
    "default": "TOKEN_SCOPE_ADMIN",
    "description": "TokenScope defines an enumeration of scopes that represents different level of privileges that can be associated with bearer tokens and API keys.",
    "enum": [
     "TOKEN_SCOPE_ADMIN",
     "TOKEN_SCOPE_READ_ONLY",
     "TOKEN_SCOPE_READ_WRITE"
    ],
    "type": "string"
   },
   "modelsUser": {
    "description": "A User is a Cisco.com account, identified by email, authorized to access a specific Cisco Nexus Hyperfabric Organization with a specific role that represents the level of privilege of the user. Only a user with administrative privileges may modify another user's user record.",
    "properties": {
     "email": {
      "description": "The email address of the user.",
      "type": "string"
     },
     "enabled": {
      "description": "The enabled state of the user which indicates if the user is enabled or disabled.",
      "type": "boolean"
     },
     "id": {
      "description": "This is a read-only field. The unique identifier of a user.",
      "readOnly": true,
      "type": "string"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering users.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "lastLogin": {
      "description": "This is a read-only field. The last recorded web interface login time of the user in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (e.g. `YYYY-MM-DDTHH:MM:SSZ`).",
      "format": "date-time",
      "readOnly": true,
      "type": "string"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "role": {
      "$ref": "#/components/schemas/modelsUserRole"
     }
    },
    "type": "object"
   },
   "modelsUserPreferences": {
    "description": "UserPreferences describes preferences for a user across all tenants.",
    "properties": {
     "provider": {
      "description": "The single sign on (SSO) identity provider (IDP), optional (default: CISCO).",
      "type": "string"
     },
     "skipFeatureHighlights": {
      "description": "Indicates whether to skip the feature highlights or not.",
      "type": "boolean"
     },
     "skipVideoTour": {
      "description": "Indicates whether to skip the video tour or not.",
      "type": "boolean"
     },
     "theme": {
      "$ref": "#/components/schemas/modelsTheme"
     },
     "timezone": {
      "description": "Preferred timezone.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsUserRole": {
    "default": "ADMIN",
    "description": "UserRole defines an enumeration of roles that represents different level of privileges that can be associated with a user.",
    "enum": [
     "ADMIN",
     "READ_WRITE",
     "READ_ONLY"
    ],
    "type": "string"
   },
   "modelsVlan": {
    "description": "A VLAN is a Layer 2 logical network that allows a group of devices on one or more Local Area Networks (LANs) to communicate as if they were attached to the same wire. Each VLAN creates a separate broadcast domain which is the set of all devices that will receive broadcast frames originating from any device within the set.",
    "properties": {
     "annotations": {
      "description": "A list of name-value annotations to store user-defined data including complex data such as JSON associated with the VLAN.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "description": {
      "description": "The description is a user-defined field to store notes about the VLAN.",
      "type": "string"
     },
     "enabled": {
      "description": "The enabled state of the VLAN which indicates if the VLAN is enabled or disabled.",
      "type": "boolean"
     },
     "fabricId": {
      "description": "This is a read-only field. The identifier of the fabric to which this VLAN belongs to.",
      "readOnly": true,
      "type": "string"
     },
     "id": {
      "description": "This is a read-only field. The unique identifier of the VLAN.",
      "readOnly": true,
      "type": "string"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering VLANs.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "members": {
      "description": "A list of member ports or port channels of the VLAN.",
      "items": {
       "$ref": "#/components/schemas/modelsVlanMember"
      },
      "type": "array"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The user-defined name of the VLAN. The VLAN name has to be unique, and is case-insensitive.",
      "type": "string"
     },
     "svis": {
      "description": "A list of Switch Virtual Interfaces (SVIs) for the VLAN.",
      "items": {
       "$ref": "#/components/schemas/modelsSvi"
      },
      "type": "array"
     },
     "vlanId": {
      "description": "The VLAN ID used as dot1Q encapsulation for the VLAN. The VLAN ID must be between 2 and 3600.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vni": {
      "description": "This is a read-only field. The VXLAN Network Identifier (VNI) to which this VLAN is attached to.",
      "maximum": 4294967295,
      "minimum": 0,
      "readOnly": true,
      "type": "integer"
     },
     "vrfId": {
      "description": "This is a read-only field. The unique identifier of the VRF to which this VLAN is attached to.",
      "readOnly": true,
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsVlanMember": {
    "description": "A VNI VLAN Member represents the attachement of a specific VNI to a port or port channel untagged or using a dot1q VLAN ID (also known as a trunk). The role of the port or port channel has to be configured as `HOST_PORT`.",
    "properties": {
     "port": {
      "$ref": "#/components/schemas/modelsPortEndpoint"
     },
     "untagged": {
      "description": "The flag that defines if the VNI VLAN member is configured as untagged or not.",
      "type": "boolean"
     },
     "vlanId": {
      "description": "The VLAN ID to be used as dot1Q encapsulation for the VNI on a port of the node or a port channel. The VLAN ID must be between 2 and 3600.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "modelsVni": {
    "description": "A VNI represents a Layer 2 or Layer 3 logical network that can be extended across the fabric and mapped to a VLAN ID on specific ports and port channels. A VNI can be mapped to a VRF and configured with an SVI to serve as an Anycast Gateway.",
    "properties": {
     "annotations": {
      "description": "A list of name-value annotations to store user-defined data including complex data such as JSON associated with the VNI.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "description": {
      "description": "The description is a user-defined field to store notes about the VNI.",
      "type": "string"
     },
     "enabled": {
      "description": "This is a read-only field. The enabled state of the VNI which indicates if the VNI is enabled or disabled.",
      "readOnly": true,
      "type": "boolean"
     },
     "fabricId": {
      "description": "This is a read-only field. The unique identifier of the fabric to which this VNI belongs to.",
      "readOnly": true,
      "type": "string"
     },
     "id": {
      "description": "This is a read-only field. The unique identifier of the VNI.",
      "readOnly": true,
      "type": "string"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering VNIs.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The user-defined name of the VNI. The VNI name has to be unique, and is case-insensitive.",
      "type": "string"
     },
     "svis": {
      "description": "A list of Switch Virtual Interfaces (SVIs) for the VNI.",
      "items": {
       "$ref": "#/components/schemas/modelsSvi"
      },
      "type": "array"
     },
     "vni": {
      "description": "The VXLAN Network Identifier (VNI) used for the VNI. The value must be between 2 and 6000000.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vrfId": {
      "description": "The unique identifier of the VRF associated with the VNI.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "modelsVniDhcp": {
    "description": "VniDhcp encapsulates properties of a VNI DHCP relay. VniDhcp is used for setting up inter-VNI DHCP relay.",
    "properties": {
     "ipv4Enabled": {
      "description": "Indicates that IPv4 DHCP relay is enabled for VNI.",
      "type": "boolean"
     },
     "ipv6Enabled": {
      "description": "Indicates that IPv6 DHCP relay is enabled for VNI.",
      "type": "boolean"
     },
     "vni": {
      "description": "The identifier of VNI that needs DHCP relay.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "modelsVrf": {
    "description": "A VRF is a virtual-routing-and-forwarding instance that represents a routing table deployed across nodes in the fabric to implement VRF-lite and the ability to have multiple routing tables on a single device. A VRF can be associated to multiple VNIs configured with an Anycast Gateway SVI.",
    "properties": {
     "annotations": {
      "description": "A list of name-value annotations to store user-defined data including complex data such as JSON associated with the VRF.",
      "items": {
       "$ref": "#/components/schemas/modelsAnnotation"
      },
      "type": "array"
     },
     "asn": {
      "description": "The Autonomous System Number (ASN) used for the VRF external BGP peering.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "description": {
      "description": "The description is a user-defined field to store notes about the VRF.",
      "type": "string"
     },
     "enabled": {
      "description": "This is a read-only field. The enabled state of the VRF which indicates if the VRF is enabled or disabled.",
      "readOnly": true,
      "type": "boolean"
     },
     "fabricId": {
      "description": "This is a read-only field. The unique identifier of the fabric to which this VRF belongs to.",
      "readOnly": true,
      "type": "string"
     },
     "id": {
      "description": "This is a read-only field. The unique identifier of the VRF.",
      "readOnly": true,
      "type": "string"
     },
     "interfaces": {
      "description": "This is a read-only field. A list of interfaces that are associated with the VRF.",
      "items": {
       "$ref": "#/components/schemas/modelsNetworkInterface"
      },
      "readOnly": true,
      "type": "array"
     },
     "isDefault": {
      "description": "This is a read-only field. The flag that indicates if the VRF is the default (auto-created) VRF or not.",
      "readOnly": true,
      "type": "boolean"
     },
     "labels": {
      "description": "A list of user-defined labels that can be used for grouping and filtering VRFs.",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "metadata": {
      "$ref": "#/components/schemas/modelsMetadata"
     },
     "name": {
      "description": "The user-defined name of the VRF. The VRF name has to be unique, and is case-insensitive. The name should start with `Vrf`, `VRF`, `VRf` or `VrF`, followed by an optional `-` separator and end with an alpha-numeric string of 1 to 16 character.",
      "type": "string"
     },
     "vni": {
      "description": "The VXLAN Network Identifier (VNI) used for the VRF.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "readerAssertBgpPeerEstablished": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "lineCard": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "vrf": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertConfigAddedToDb": {
    "description": "Description not available",
    "properties": {
     "childId": {
      "description": "Description not available",
      "type": "string"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "objectId": {
      "description": "Description not available",
      "type": "string"
     },
     "objectName": {
      "description": "Description not available",
      "type": "string"
     },
     "objectType": {
      "description": "Description not available",
      "type": "string"
     },
     "operation": {
      "description": "Description not available",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "parentId": {
      "description": "Description not available",
      "type": "string"
     },
     "txnId": {
      "description": "Description not available",
      "type": "string"
     },
     "username": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertCounterReport": {
    "description": "AssertCounterReport holds an assertion counter record at particular time instance",
    "properties": {
     "clearedFalseAsserts": {
      "description": "The number of cleared false asserts per time granularity",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "configActivities": {
      "description": "The number of config activities during the time granularity",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "device": {
      "description": "the device name or UUID",
      "type": "string"
     },
     "newFalseAsserts": {
      "description": "The number of new false asserts per time granularity",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "portName": {
      "description": "The port index.",
      "type": "string"
     },
     "timestamp": {
      "description": "The timestamp associated this report",
      "format": "date-time",
      "type": "string"
     },
     "type": {
      "description": "The assert type",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertCounterReportResponse": {
    "description": "AssertCounterReportResponse holds the AssertCounter time series query result.",
    "properties": {
     "counterReport": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/readerAssertCounterReport"
      },
      "type": "array"
     },
     "pagination": {
      "$ref": "#/components/schemas/commonPaginationResponse"
     }
    },
    "type": "object"
   },
   "readerAssertDeviceConnectedToCloud": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertDeviceConnectedToFabric": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertDeviceEnvPsuUsageBelowThreshold": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertDeviceFanSpeedBelowThreshold": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertDeviceResourceUsageBelowThreshold": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "highCpuUtil": {
      "description": "Description not available",
      "type": "boolean"
     },
     "highDiskUtil": {
      "description": "Description not available",
      "type": "boolean"
     },
     "highMemUtil": {
      "description": "Description not available",
      "type": "boolean"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertDeviceTemperatureBelowThreshold": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertExpectedPortBreakoutExists": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "breakout": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "lineCard": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "port": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertHistoryApiRecord": {
    "description": "Description not available",
    "properties": {
     "assertType": {
      "description": "Description not available",
      "type": "string"
     },
     "bgpPeerEstablished": {
      "$ref": "#/components/schemas/readerAssertBgpPeerEstablished"
     },
     "configAddedToDb": {
      "$ref": "#/components/schemas/readerAssertConfigAddedToDb"
     },
     "deviceConnectedToCloud": {
      "$ref": "#/components/schemas/readerAssertDeviceConnectedToCloud"
     },
     "deviceConnectedToFabric": {
      "$ref": "#/components/schemas/readerAssertDeviceConnectedToFabric"
     },
     "deviceEnvPsuUsageBelowThreshold": {
      "$ref": "#/components/schemas/readerAssertDeviceEnvPsuUsageBelowThreshold"
     },
     "deviceFanSpeedBelowThreshold": {
      "$ref": "#/components/schemas/readerAssertDeviceFanSpeedBelowThreshold"
     },
     "deviceResourceUsageBelowThreshold": {
      "$ref": "#/components/schemas/readerAssertDeviceResourceUsageBelowThreshold"
     },
     "deviceTemperatureBelowThreshold": {
      "$ref": "#/components/schemas/readerAssertDeviceTemperatureBelowThreshold"
     },
     "expectedPortBreakoutExists": {
      "$ref": "#/components/schemas/readerAssertExpectedPortBreakoutExists"
     },
     "managementPortConfigSame": {
      "$ref": "#/components/schemas/readerAssertManagementPortConfigSame"
     },
     "portChannelMemberUp": {
      "$ref": "#/components/schemas/readerAssertPortChannelMemberUp"
     },
     "portConnectionSpeedMatch": {
      "$ref": "#/components/schemas/readerAssertPortConnectionSpeedMatch"
     },
     "portExpectedNeighbor": {
      "$ref": "#/components/schemas/readerAssertPortExpectedNeighbor"
     },
     "portLinkDown": {
      "$ref": "#/components/schemas/readerAssertPortLinkDown"
     },
     "portLinkUp": {
      "$ref": "#/components/schemas/readerAssertPortLinkUp"
     },
     "portNoUnknownVlanFound": {
      "$ref": "#/components/schemas/readerAssertPortNoUnknownVlanFound"
     },
     "portNotConnectedToFabric": {
      "$ref": "#/components/schemas/readerAssertPortNotConnectedToFabric"
     },
     "portPluggablePidSame": {
      "$ref": "#/components/schemas/readerAssertPortPluggablePidSame"
     },
     "portSpeedConsistent": {
      "$ref": "#/components/schemas/readerAssertPortSpeedConsistent"
     },
     "portVlanStpStateConsistent": {
      "$ref": "#/components/schemas/readerAssertPortVlanStpStateConsistent"
     },
     "staticDefaultRouteExists": {
      "$ref": "#/components/schemas/readerAssertStaticDefaultRouteExists"
     },
     "subInterfaceDown": {
      "$ref": "#/components/schemas/readerAssertSubInterfaceDown"
     },
     "subInterfaceUp": {
      "$ref": "#/components/schemas/readerAssertSubInterfaceUp"
     },
     "unified": {
      "$ref": "#/components/schemas/readerUnifiedAssertRecord"
     },
     "vlanHasTraffic": {
      "$ref": "#/components/schemas/readerAssertVlanHasTraffic"
     }
    },
    "type": "object"
   },
   "readerAssertHistoryApiRecordResponse": {
    "description": "AssertHistoryRecordResponseSchemaProto holds the Assertion record time series query result in the message format defined in schema.proto.",
    "properties": {
     "assertions": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/readerAssertHistoryApiRecord"
      },
      "type": "array"
     },
     "pagination": {
      "$ref": "#/components/schemas/commonPaginationResponse"
     }
    },
    "type": "object"
   },
   "readerAssertManagementPortConfigSame": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "lineCard": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "managementState": {
      "description": "Description not available",
      "type": "string"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertPortChannelMemberUp": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "lineCard": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertPortConnectionSpeedMatch": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "breakout": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "lineCard": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "localPortSpeed": {
      "description": "Description not available",
      "type": "string"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "port": {
      "description": "Description not available",
      "type": "string"
     },
     "portName": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteDevice": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "remotePortName": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertPortExpectedNeighbor": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "breakout": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "lineCard": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "numNeighbors": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "port": {
      "description": "Description not available",
      "type": "string"
     },
     "portName": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteDevice": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "remotePortName": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertPortLinkDown": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "breakout": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "lineCard": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "port": {
      "description": "Description not available",
      "type": "string"
     },
     "portName": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteDevice": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "remotePortName": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertPortLinkUp": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "breakout": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "lineCard": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "port": {
      "description": "Description not available",
      "type": "string"
     },
     "portName": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertPortNoUnknownVlanFound": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "lineCard": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertPortNotConnectedToFabric": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "breakout": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "lineCard": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "port": {
      "description": "Description not available",
      "type": "string"
     },
     "portName": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteDevice": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "remotePortName": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertPortPluggablePidSame": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "breakout": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "lineCard": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "port": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertPortSpeedConsistent": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "breakout": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "lineCard": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "localPortSpeed": {
      "description": "Description not available",
      "type": "string"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "port": {
      "description": "Description not available",
      "type": "string"
     },
     "portName": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertPortVlanStpStateConsistent": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "portName": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertStaticDefaultRouteExists": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "lineCard": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "vrf": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertSubInterfaceDown": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "breakout": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "lineCard": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "port": {
      "description": "Description not available",
      "type": "string"
     },
     "portName": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertSubInterfaceUp": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "breakout": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "lineCard": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "port": {
      "description": "Description not available",
      "type": "string"
     },
     "portName": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "readerAssertVlanHasTraffic": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "lastTrafficBytes": {
      "description": "Description not available",
      "type": "string"
     },
     "lastTrafficTime": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "lineCard": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "recentTrafficBytes": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "vlanState": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "readerHistoryResponse": {
    "description": "HistoryResponse is the top-level history query response message for all supported query types",
    "properties": {
     "assertApiResponse": {
      "$ref": "#/components/schemas/readerAssertHistoryApiRecordResponse"
     },
     "assertCounterReport": {
      "$ref": "#/components/schemas/readerAssertCounterReportResponse"
     },
     "assertResponse": {
      "$ref": "#/components/schemas/druidAssertHistoryRecordResponse"
     },
     "portCounterResponse": {
      "$ref": "#/components/schemas/druidPortCounterHistoryRecordResponse"
     },
     "portStateResponse": {
      "$ref": "#/components/schemas/druidPortStateHistoryRecordResponse"
     },
     "queryType": {
      "$ref": "#/components/schemas/readerQueryType"
     }
    },
    "type": "object"
   },
   "readerQueryType": {
    "default": "PORT_STATE",
    "description": "ReaderType indicates the telemetry reader type",
    "enum": [
     "PORT_STATE",
     "PORT_COUNTER_BIT_RATE",
     "PORT_COUNTER_PFC_COUNTER",
     "ASSERT_COUNTER_REPORT",
     "HISTORY_RECORD_QUERY_BASE",
     "PORT_STATE_HISTORY_RECORD",
     "PORT_COUNTER_HISTORY_RECORD",
     "ASSERT_HISTORY_RECORD"
    ],
    "type": "string"
   },
   "readerUnifiedAssertRecord": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "assertType": {
      "description": "The assert type value as set in the schema-path.",
      "type": "string"
     },
     "breakout": {
      "description": "breakout as in various assert schema-paths",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "childId": {
      "description": "The object identifier of child object.",
      "type": "string"
     },
     "device": {
      "description": "device mac address string",
      "type": "string"
     },
     "fabric": {
      "description": "The fabric uuid",
      "type": "string"
     },
     "highCpuUtil": {
      "description": "The high_cpu_util flag as set in AssertHighSwitchResourceUsage.",
      "type": "boolean"
     },
     "highDiskUtil": {
      "description": "The high_disk_util as set in AssertHighSwitchResourceUsage.",
      "type": "boolean"
     },
     "highMemUtil": {
      "description": "The high_mem_util as set in AssertHighSwitchResourceUsage.",
      "type": "boolean"
     },
     "implicit": {
      "description": "implicit assert flag as set in assert config data",
      "type": "boolean"
     },
     "lastTrafficBytes": {
      "description": "last_traffic_bytes as in AssertVlanHasTraffic",
      "type": "string"
     },
     "lastTrafficTime": {
      "description": "last_traffic_time as in AssertVlanHasTraffic",
      "format": "date-time",
      "type": "string"
     },
     "latchTime": {
      "description": "The latch_time as in all types of assert config data",
      "type": "string"
     },
     "latchedAt": {
      "description": "latched_at as in all types of assert config data.",
      "format": "date-time",
      "type": "string"
     },
     "lineCard": {
      "description": "line_card as in various assert schema-paths",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "localPortSpeed": {
      "description": "local_port_speed as in AssertPortConnectionSpeedMatch",
      "type": "string"
     },
     "managementState": {
      "description": "The management state as set in the config data.",
      "type": "string"
     },
     "masked": {
      "description": "The flag indicates if the assertion is masked.",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Time at which the assertion were modified.",
      "format": "date-time",
      "type": "string"
     },
     "nodeId": {
      "description": "The node uuid associated with the device",
      "type": "string"
     },
     "numNeighbors": {
      "description": "num_neighbors as in AssertPortExpectedNeighbor",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "objectId": {
      "description": "The object identifier.",
      "type": "string"
     },
     "objectName": {
      "description": "The user defined object name..",
      "type": "string"
     },
     "objectType": {
      "description": "The type of the object that triggered the event.",
      "type": "string"
     },
     "operation": {
      "description": "The type of user operation.",
      "type": "string"
     },
     "orgId": {
      "description": "The Org UUID as set in the assert config data.",
      "type": "string"
     },
     "parentId": {
      "description": "The object identifier of parent object.",
      "type": "string"
     },
     "port": {
      "description": "Unique identifier of a port within a device",
      "type": "string"
     },
     "portName": {
      "description": "port name as set in the assert config data.",
      "type": "string"
     },
     "recentTrafficBytes": {
      "description": "last_traffic_bytes as in AssertVlanHasTraffic",
      "type": "string"
     },
     "remoteDevice": {
      "description": "remote device mac address",
      "type": "string"
     },
     "remoteNodeId": {
      "description": "The node uuid associated with the remote device",
      "type": "string"
     },
     "remotePortName": {
      "description": "remote_port_name is the LldpRemPortDesc stored in AssertPortLinkDown and AssertPortExpectedNeighbor",
      "type": "string"
     },
     "rowCount": {
      "description": "Standard count metric",
      "type": "string"
     },
     "txnId": {
      "description": "The database transaction id",
      "type": "string"
     },
     "username": {
      "description": "The user who triggered the activity event.",
      "type": "string"
     },
     "vlanState": {
      "description": "vlan_state as in SchemaPathAssertConfigVlanHasTraffic.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vrf": {
      "description": "vrf as set in AssertStaticDefaultRouteExists.",
      "type": "string"
     }
    },
    "type": "object"
   },
   "refpointsCreateRefPointRequest": {
    "description": "REST Request to create a new reference point",
    "properties": {
     "deviceIds": {
      "description": "Optional list of devices to include in the capture",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "fabricId": {
      "description": "The fabric id or name",
      "type": "string"
     }
    },
    "type": "object"
   },
   "refpointsDiffPart": {
    "description": "REST response for a diff file (and also the format on disk)",
    "properties": {
     "deviceId": {
      "description": "The device id",
      "type": "string"
     },
     "newer": {
      "$ref": "#/components/schemas/syncfollowDataSeries"
     },
     "newerRefPointTime": {
      "description": "The timestamp of the newer refpoint",
      "format": "date-time",
      "type": "string"
     },
     "objectType": {
      "$ref": "#/components/schemas/schemaPathSchemaType"
     },
     "older": {
      "$ref": "#/components/schemas/syncfollowDataSeries"
     },
     "olderRefPointTime": {
      "description": "The timestamp of the older refpoint",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "refpointsRefPoint": {
    "description": "REST RefPoint metadata",
    "properties": {
     "createCompleted": {
      "description": "When the create job was completed",
      "format": "date-time",
      "type": "string"
     },
     "createJobState": {
      "$ref": "#/components/schemas/schemaRefPointJobState"
     },
     "created": {
      "description": "The timestamp for when the reference point metadata was created",
      "format": "date-time",
      "type": "string"
     },
     "deviceIds": {
      "description": "Optional list of devices to include in the capture",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "diffJobState": {
      "$ref": "#/components/schemas/schemaRefPointJobState"
     },
     "fabricId": {
      "description": "The fabric id",
      "type": "string"
     },
     "name": {
      "description": "The reference point name",
      "type": "string"
     }
    },
    "type": "object"
   },
   "refpointsRefPointByFabricRequest": {
    "description": "REST request messages only needing a fabric id",
    "properties": {
     "fabricId": {
      "description": "The fabric id or name",
      "type": "string"
     }
    },
    "type": "object"
   },
   "refpointsRefPointList": {
    "description": "REST list of refpoints",
    "properties": {
     "refPoints": {
      "description": "A repeated list of reference point",
      "items": {
       "$ref": "#/components/schemas/refpointsRefPoint"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "routingGetUserContextsResponse": {
    "description": "Description not available",
    "properties": {
     "contexts": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/routingUserContext"
      },
      "type": "array"
     },
     "email": {
      "description": "Description not available",
      "type": "string"
     },
     "eulaVersion": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "routingUserContext": {
    "description": "Description not available",
    "properties": {
     "current": {
      "description": "Description not available",
      "type": "boolean"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "orgName": {
      "description": "Description not available",
      "type": "string"
     },
     "role": {
      "$ref": "#/components/schemas/modelsUserRole"
     },
     "tenantId": {
      "description": "Description not available",
      "type": "string"
     },
     "tenantName": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaActiveWorker": {
    "description": "ActiveWorker is a record indicating a single worker who is currently assigned to work on setting up the fabric. This is a set of unique values found in SmartHandsCommonTask.Worker for all tasks for this fabric.",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAdvertisedAutoNegotiation": {
    "description": "Description not available",
    "properties": {
     "fd": {
      "description": "Description not available",
      "type": "boolean"
     },
     "hd": {
      "description": "Description not available",
      "type": "boolean"
     },
     "type": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAggregatedDeviceClaim": {
    "description": "Description not available",
    "properties": {
     "adjacencyBloomFilter": {
      "description": "Description not available",
      "format": "byte",
      "type": "string"
     },
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "deviceClaim": {
      "$ref": "#/components/schemas/schemaDeviceClaimData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaApiKey": {
    "description": "ApiKey describes the metadata for an API key used during a REST API call. API keys are scoped to a user within a tenant.",
    "properties": {
     "email": {
      "description": "The key owner.",
      "type": "string"
     },
     "fingerprint": {
      "description": "The fingerprint of the key.",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "keyId": {
      "description": "The unique id for the key. This is provided in the Authorization header in the request.",
      "type": "string"
     },
     "keyType": {
      "$ref": "#/components/schemas/modelsRestKeyType"
     },
     "notAfter": {
      "description": "The end of the validity period for a key.",
      "format": "date-time",
      "type": "string"
     },
     "notBefore": {
      "description": "The start of the validity period for a key.",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "The orgId that owns the tenant that owns the key.",
      "type": "string"
     },
     "provider": {
      "$ref": "#/components/schemas/modelsKnownProvider"
     },
     "publicKey": {
      "description": "The ed25519/RSA public key, provided by the user. The private key is not known to us.\nFIXME Right now this is fixed at 64 which is enough for a hex encoded ed25519 public key. RSA public keys are much larger, but whether we support RSA at all is still TBD.",
      "type": "string"
     },
     "scope": {
      "$ref": "#/components/schemas/modelsTokenScope"
     },
     "tenantId": {
      "description": "The tenant that owns the key.",
      "type": "string"
     },
     "userRole": {
      "$ref": "#/components/schemas/modelsUserRole"
     }
    },
    "type": "object"
   },
   "schemaApiPath": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaApiPathMethod": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaApiPathProtocol": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaApiServiceMapping": {
    "description": "FORMAT . METHOD . PATH. Mapping e.g. API_FORMAT_TYPE_REST . GET . /ui/v1/sessions",
    "properties": {
     "app": {
      "$ref": "#/components/schemas/schemaApplicationIdentity"
     },
     "deprecatedApi": {
      "description": "Description not available",
      "type": "string"
     },
     "deprecatedMethod": {
      "description": "Description not available",
      "type": "string"
     },
     "deprecatedRoutingPolicy": {
      "description": "Description not available",
      "type": "string"
     },
     "deprecatedSvc": {
      "description": "Description not available",
      "type": "string"
     },
     "deviceAuth": {
      "description": "Description not available",
      "type": "boolean"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "noAuth": {
      "description": "Description not available",
      "type": "boolean"
     },
     "restAuth": {
      "description": "Description not available",
      "type": "boolean"
     },
     "routingPolicy": {
      "$ref": "#/components/schemas/schemaRoutingPolicy"
     },
     "webAuth": {
      "description": "Description not available",
      "type": "boolean"
     }
    },
    "type": "object"
   },
   "schemaApplication": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaApplicationIdentity": {
    "default": "APPLICATION_IDENTITY_BILGE",
    "description": "Description not available",
    "enum": [
     "APPLICATION_IDENTITY_BILGE",
     "APPLICATION_IDENTITY_BRIG",
     "APPLICATION_IDENTITY_CONFIGD",
     "APPLICATION_IDENTITY_SEXTANT",
     "APPLICATION_IDENTITY_MIZZEN",
     "APPLICATION_IDENTITY_RUDDER",
     "APPLICATION_IDENTITY_FRED",
     "APPLICATION_IDENTITY_GINGER"
    ],
    "type": "string"
   },
   "schemaApplicationReadiness": {
    "default": "APPLICATION_READINESS_PENDING",
    "description": "A greatly simplified set of readiness states for a given instance of a Tortuga application.",
    "enum": [
     "APPLICATION_READINESS_PENDING",
     "APPLICATION_READINESS_READY",
     "APPLICATION_READINESS_FAILED",
     "APPLICATION_READINESS_OFFLINE",
     "APPLICATION_READINESS_DRAINING",
     "APPLICATION_READINESS_STARTING",
     "APPLICATION_READINESS_TERMINATING"
    ],
    "type": "string"
   },
   "schemaAssertBgpPeerEstablished": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigBgpPeerEstablishedData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigBgpPeerEstablished": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigBgpPeerEstablishedData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigBgpPeerEstablishedData": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "peerIp": {
      "description": "Description not available",
      "type": "string"
     },
     "peerRemoteAs": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vrfName": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigConnectedPortSpeedsMatchData": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "port": {
      "$ref": "#/components/schemas/schemaPortConfigDetails"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigConnectedToCloudData": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigConnectedToFabricData": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigDeviceConnectedToCloud": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigConnectedToCloudData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigDeviceConnectedToFabric": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigConnectedToFabricData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigDeviceEnvPsuUsageBelowThreshold": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigDeviceEnvPsuUsageBelowThresholdData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigDeviceEnvPsuUsageBelowThresholdData": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "fanSpeedThreshold": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "powerDrawnThreshold": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigDeviceFanSpeedBelowThreshold": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigDeviceFanSpeedBelowThresholdData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigDeviceFanSpeedBelowThresholdData": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "fanSpeedThreshold": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigDeviceResourceUsageBelowThreshold": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigDeviceResourceUsageBelowThresholdData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigDeviceResourceUsageBelowThresholdData": {
    "description": "Description not available",
    "properties": {
     "cpuThreshold": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "diskThreshold": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "memoryThreshold": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigDeviceTemperatureBelowThreshold": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigDeviceTemperatureBelowThresholdData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigDeviceTemperatureBelowThresholdData": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigExpectedNeighborData": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "port": {
      "$ref": "#/components/schemas/schemaPortConfigDetails"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigExpectedPortBreakoutExists": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigExpectedPortBreakoutExistsData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigExpectedPortBreakoutExistsData": {
    "description": "Description not available",
    "properties": {
     "expectedPortBreakoutCfg": {
      "$ref": "#/components/schemas/schemaPortBreakoutConfig"
     },
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigLinkDownData": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "port": {
      "$ref": "#/components/schemas/schemaPortConfigDetails"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigLinkUpData": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "port": {
      "$ref": "#/components/schemas/schemaPortConfigDetails"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigManagementPortConfigData": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "mgmtPortState": {
      "$ref": "#/components/schemas/schemaManagementState"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigManagementPortConfigSame": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigManagementPortConfigData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigNotConnectedToFabricData": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "port": {
      "$ref": "#/components/schemas/schemaPortConfigDetails"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigPortChannelMemberUp": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigPortChannelMemberUpData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigPortChannelMemberUpData": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "portChannelMember": {
      "$ref": "#/components/schemas/schemaPortChannelMemberState"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigPortConnectionSpeedMatch": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigConnectedPortSpeedsMatchData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigPortExpectedNeighbor": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigExpectedNeighborData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigPortLinkDown": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigLinkDownData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigPortLinkUp": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigLinkUpData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigPortNoUnknownVlanFound": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigPortNoUnknownVlanFoundData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigPortNoUnknownVlanFoundData": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigPortNotConnectedToFabric": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigNotConnectedToFabricData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigPortPluggablePidSame": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigPortPluggablePidSameData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigPortPluggablePidSameData": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "pluggableDetails": {
      "$ref": "#/components/schemas/schemaPortPluggableDetails"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigPortSpeedConsistent": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigPortSpeedConsistentData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigPortSpeedConsistentData": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "port": {
      "$ref": "#/components/schemas/schemaPortConfigDetails"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigPortVlanStpStateConsistent": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigPortVlanStpStateConsistentData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigPortVlanStpStateConsistentData": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "stpVlanPortState": {
      "$ref": "#/components/schemas/schemaStpVlanPortState"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigStaticDefaultRouteExists": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigStaticDefaultRouteExistsData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "interfaceName": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigStaticDefaultRouteExistsData": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigSubInterfaceDown": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigSubInterfaceDownData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigSubInterfaceDownData": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "subInterface": {
      "$ref": "#/components/schemas/schemaSubInterfaceDetails"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigSubInterfaceUp": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigSubInterfaceUpData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigSubInterfaceUpData": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "subInterface": {
      "$ref": "#/components/schemas/schemaSubInterfaceDetails"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigVlanHasTraffic": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigVlanHasTrafficData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaAssertConfigVlanHasTrafficData": {
    "description": "Description not available",
    "properties": {
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "generationId": {
      "description": "Description not available",
      "type": "string"
     },
     "implicit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "latchTime": {
      "description": "Description not available",
      "type": "string"
     },
     "latchedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertDeviceConnectedToCloud": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigConnectedToCloudData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertDeviceConnectedToFabric": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigConnectedToFabricData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertDeviceEnvPsuUsageBelowThreshold": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigDeviceEnvPsuUsageBelowThresholdData"
     },
     "currentPsu": {
      "$ref": "#/components/schemas/schemaPsu"
     },
     "fanSpeedInRange": {
      "description": "Description not available",
      "type": "boolean"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "powerDrawnInRange": {
      "description": "Description not available",
      "type": "boolean"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertDeviceFanSpeedBelowThreshold": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigDeviceFanSpeedBelowThresholdData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertDeviceResourceUsageBelowThreshold": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigDeviceResourceUsageBelowThresholdData"
     },
     "currentSystemStats": {
      "$ref": "#/components/schemas/schemaSystemStats"
     },
     "highCpuUtil": {
      "description": "Description not available",
      "type": "boolean"
     },
     "highDiskUtil": {
      "description": "Description not available",
      "type": "boolean"
     },
     "highMemUtil": {
      "description": "Description not available",
      "type": "boolean"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertDeviceTemperatureBelowThreshold": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigDeviceTemperatureBelowThresholdData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertExpectedPortBreakoutExists": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigExpectedPortBreakoutExistsData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertManagementPortConfigSame": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigManagementPortConfigData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "operationalMgmtPortState": {
      "$ref": "#/components/schemas/schemaManagementState"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertPortChannelMemberUp": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigPortChannelMemberUpData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertPortConnectionSpeedMatch": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigConnectedPortSpeedsMatchData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "localPortSpeed": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "remoteDeviceId": {
      "description": "Description not available",
      "type": "string"
     },
     "remotePortName": {
      "description": "Description not available",
      "type": "string"
     },
     "remotePortSpeed": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaAssertPortExpectedNeighbor": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigExpectedNeighborData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "numNeighbors": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "remoteDeviceId": {
      "description": "Description not available",
      "type": "string"
     },
     "remotePortName": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertPortLinkDown": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigLinkDownData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "remoteDeviceId": {
      "description": "Description not available",
      "type": "string"
     },
     "remotePortName": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertPortLinkUp": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigLinkUpData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertPortNoUnknownVlanFound": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigPortNoUnknownVlanFoundData"
     },
     "hasAdditionalUnknownVlans": {
      "description": "Description not available",
      "type": "boolean"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "unknownVlan1": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "unknownVlan2": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "unknownVlan3": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "unknownVlan4": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "unknownVlan5": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaAssertPortNotConnectedToFabric": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigNotConnectedToFabricData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "remoteDeviceId": {
      "description": "Description not available",
      "type": "string"
     },
     "remotePortName": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertPortPluggablePidSame": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigPortPluggablePidSameData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "observedPortPluggableDetails": {
      "$ref": "#/components/schemas/schemaPortPluggableDetails"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertPortSpeedConsistent": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigPortSpeedConsistentData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "localPortSpeed": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertPortVlanStpStateConsistent": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigPortVlanStpStateConsistentData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "observedStpVlanPortState": {
      "$ref": "#/components/schemas/schemaStpVlanPortStateStatus"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertStaticDefaultRouteExists": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigStaticDefaultRouteExistsData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertSubInterfaceDown": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigSubInterfaceDownData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertSubInterfaceUp": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigSubInterfaceUpData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaAssertVlanHasTraffic": {
    "description": "Description not available",
    "properties": {
     "assertState": {
      "$ref": "#/components/schemas/modelsAssertStateType"
     },
     "category": {
      "$ref": "#/components/schemas/modelsAssertCategoryType"
     },
     "config": {
      "$ref": "#/components/schemas/schemaAssertConfigVlanHasTrafficData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "lastTrafficBytes": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "lastTrafficTime": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "masked": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByConnectionToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "maskedByPortLinkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "readyToLatchAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "recentTrafficBytes": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaAssignmentState": {
    "default": "AssignmentStateStandby",
    "description": "Description not available",
    "enum": [
     "AssignmentStateStandby",
     "AssignmentStateActive",
     "AssignmentStateLoading",
     "AssignmentStateUnassigned",
     "AssignmentStateDeleted"
    ],
    "type": "string"
   },
   "schemaAssignmentStatus": {
    "description": "Description not available",
    "properties": {
     "assignmentState": {
      "$ref": "#/components/schemas/schemaAssignmentState"
     },
     "fabricType": {
      "$ref": "#/components/schemas/modelsFabricType"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "instanceId": {
      "description": "Description not available",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "resourceType": {
      "$ref": "#/components/schemas/schemaResourceType"
     },
     "revision": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaAssignmentSvcRoute": {
    "description": "AssignmentSvcRoute is used to route to a serivce assigned a specific resource (i.e. the configd for a specified fabric) object: \u003ccellId\u003e, index: \u003cappNum\u003e . \u003cresourceId\u003e",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "orgId": {
      "description": "only set for fabric assignments",
      "type": "string"
     },
     "ready": {
      "description": "Description not available",
      "type": "boolean"
     },
     "revision": {
      "description": "technically non-meaningful, but used for tracking updates, best efforts made to only increment when needed",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "route": {
      "$ref": "#/components/schemas/schemaSvcRoute"
     },
     "updatedTs": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaBasicCounters": {
    "description": "Universal counters for L2/L3 entities",
    "properties": {
     "bytesIn": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "bytesOut": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "errPktsIn": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "errPktsOut": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "pktsIn": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "pktsOut": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaBearerToken": {
    "description": "BearerToken describes the metadata for a bearer token used during a REST API call. Bearer tokens are scoped to a user within a tenant.",
    "properties": {
     "email": {
      "description": "The token owner.",
      "type": "string"
     },
     "expires": {
      "description": "The end of the validity period for a token.",
      "format": "date-time",
      "type": "string"
     },
     "fingerprint": {
      "description": "The fingerprint of the token.",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "notBefore": {
      "description": "The start of the validity period for a token.",
      "format": "date-time",
      "type": "string"
     },
     "orgId": {
      "description": "The orgId that owns the tenant that owns the token.",
      "type": "string"
     },
     "provider": {
      "$ref": "#/components/schemas/modelsKnownProvider"
     },
     "scope": {
      "$ref": "#/components/schemas/modelsTokenScope"
     },
     "signingPublicKey": {
      "description": "An ed25519 public key used to verify the token. The private key is owned by Brig.",
      "type": "string"
     },
     "signingPublicKeyFp": {
      "description": "The fingerprint of the signing public key.",
      "type": "string"
     },
     "tenantId": {
      "description": "The tenant that owns the token.",
      "type": "string"
     },
     "tokenId": {
      "description": "The unique id for the token. This is embedded in the token JWT as the JTI claim.",
      "type": "string"
     },
     "userRole": {
      "$ref": "#/components/schemas/modelsUserRole"
     }
    },
    "type": "object"
   },
   "schemaBgpAddressFamily": {
    "default": "IPV6_UNICAST",
    "description": "Description not available",
    "enum": [
     "IPV6_UNICAST",
     "L2_VPN_EVPN",
     "IPV4_UNICAST"
    ],
    "type": "string"
   },
   "schemaBgpIdType": {
    "default": "IPV6",
    "description": "Description not available",
    "enum": [
     "IPV6",
     "IPV4",
     "INTERFACE"
    ],
    "type": "string"
   },
   "schemaBgpNeighborAddressFamily": {
    "description": "Description not available",
    "properties": {
     "ipv4Unicast": {
      "$ref": "#/components/schemas/schemaBgpNeighborAddressFamilyInfo"
     },
     "ipv6Unicast": {
      "$ref": "#/components/schemas/schemaBgpNeighborAddressFamilyInfo"
     },
     "l2VpnEvpn": {
      "$ref": "#/components/schemas/schemaBgpNeighborAddressFamilyInfo"
     }
    },
    "type": "object"
   },
   "schemaBgpNeighborAddressFamilyInfo": {
    "description": "Description not available",
    "properties": {
     "acceptedPrefixCounter": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "advertiseAllVnis": {
      "description": "Description not available",
      "type": "boolean"
     },
     "allowAsInCount": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "bgpAddressFamily": {
      "$ref": "#/components/schemas/schemaBgpAddressFamily"
     },
     "commAttriSentToNbr": {
      "description": "Description not available",
      "type": "string"
     },
     "inboundPathPolicyConfig": {
      "description": "Description not available",
      "type": "boolean"
     },
     "outboundPathPolicyConfig": {
      "description": "Description not available",
      "type": "boolean"
     },
     "packetQueueLength": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "peerGroupMember": {
      "description": "Description not available",
      "type": "string"
     },
     "routeMapForIncomingAdvertisements": {
      "description": "Description not available",
      "type": "string"
     },
     "routeMapForOutgoingAdvertisements": {
      "description": "Description not available",
      "type": "string"
     },
     "routerAlwaysNextHop": {
      "description": "Description not available",
      "type": "boolean"
     },
     "sentPrefixCounter": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "subGroupId": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "unchangedNextHopPropogatedToNbr": {
      "description": "Description not available",
      "type": "boolean"
     },
     "updateGroupId": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaBgpNeighborCapabilities": {
    "description": "Description not available",
    "properties": {
     "addPath": {
      "$ref": "#/components/schemas/schemaBgpNeighborCapabilitiesAddPath"
     },
     "addressFamiliesByPeer": {
      "description": "Description not available",
      "type": "string"
     },
     "enhancedRouteRefresh": {
      "$ref": "#/components/schemas/schemaBgpNeighborCapability"
     },
     "extendedMessage": {
      "$ref": "#/components/schemas/schemaBgpNeighborCapability"
     },
     "fourByteAs": {
      "$ref": "#/components/schemas/schemaBgpNeighborCapability"
     },
     "gracefulRestart": {
      "$ref": "#/components/schemas/schemaBgpNeighborCapability"
     },
     "gracefulRestartRemoteTimerMsecs": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "hostName": {
      "$ref": "#/components/schemas/schemaBgpNeighborCapabilitiesHostName"
     },
     "longLivedGracefulRestart": {
      "$ref": "#/components/schemas/schemaBgpNeighborCapability"
     },
     "multiprotocolExtensions": {
      "$ref": "#/components/schemas/schemaBgpNeighborCapabilitiesMultiProtocolExtensions"
     },
     "routeRefresh": {
      "$ref": "#/components/schemas/schemaBgpNeighborCapability"
     }
    },
    "type": "object"
   },
   "schemaBgpNeighborCapabilitiesAddPath": {
    "description": "Description not available",
    "properties": {
     "ipv4Unicast": {
      "$ref": "#/components/schemas/schemaBgpNeighborCapabilitiesAddPathInfo"
     },
     "ipv6Unicast": {
      "$ref": "#/components/schemas/schemaBgpNeighborCapabilitiesAddPathInfo"
     },
     "l2VpnEvpn": {
      "$ref": "#/components/schemas/schemaBgpNeighborCapabilitiesAddPathInfo"
     }
    },
    "type": "object"
   },
   "schemaBgpNeighborCapabilitiesAddPathInfo": {
    "description": "Description not available",
    "properties": {
     "rxAdvertiseAndReceived": {
      "description": "Description not available",
      "type": "boolean"
     }
    },
    "type": "object"
   },
   "schemaBgpNeighborCapabilitiesHostName": {
    "description": "Description not available",
    "properties": {
     "advDomainName": {
      "description": "Description not available",
      "type": "string"
     },
     "advHostName": {
      "description": "Description not available",
      "type": "string"
     },
     "rcvDomainName": {
      "description": "Description not available",
      "type": "string"
     },
     "rcvHostName": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaBgpNeighborCapabilitiesMultiProtocolExtensions": {
    "description": "Description not available",
    "properties": {
     "ipv4Unicast": {
      "$ref": "#/components/schemas/schemaBgpNeighborCapabilitiesAddPathInfo"
     },
     "ipv6Unicast": {
      "$ref": "#/components/schemas/schemaBgpNeighborCapabilitiesAddPathInfo"
     },
     "l2VpnEvpn": {
      "$ref": "#/components/schemas/schemaBgpNeighborCapabilitiesAddPathInfo"
     }
    },
    "type": "object"
   },
   "schemaBgpNeighborCapability": {
    "default": "ADVERTISED_AND_RECEIVED",
    "description": "Description not available",
    "enum": [
     "ADVERTISED_AND_RECEIVED",
     "ADVERTISED",
     "ADVERTISED_AND_RECEIVED_OLD",
     "ADVERTISED_AND_RECEIVED_NEW",
     "ADVERTISED_AND_RECEIVED_OLD_NEW"
    ],
    "type": "string"
   },
   "schemaBgpNeighborFamily": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaBgpNeighborGracefulRestartEndOfRibInfo": {
    "description": "Description not available",
    "properties": {
     "ipv4Unicast": {
      "description": "Description not available",
      "type": "boolean"
     },
     "ipv6Unicast": {
      "description": "Description not available",
      "type": "boolean"
     },
     "l2VpnEvpn": {
      "description": "Description not available",
      "type": "boolean"
     }
    },
    "type": "object"
   },
   "schemaBgpNeighborGracefulRestartInfo": {
    "description": "Description not available",
    "properties": {
     "endOfRibRecv": {
      "$ref": "#/components/schemas/schemaBgpNeighborGracefulRestartEndOfRibInfo"
     },
     "endOfRibSend": {
      "$ref": "#/components/schemas/schemaBgpNeighborGracefulRestartEndOfRibInfo"
     },
     "ipv4Unicast": {
      "$ref": "#/components/schemas/schemaBgpNeighborGracefulRestartInfoEndOfRibStatus"
     },
     "ipv6Unicast": {
      "$ref": "#/components/schemas/schemaBgpNeighborGracefulRestartInfoEndOfRibStatus"
     },
     "l2VpnEvpn": {
      "$ref": "#/components/schemas/schemaBgpNeighborGracefulRestartInfoEndOfRibStatus"
     },
     "localGrMode": {
      "description": "Description not available",
      "type": "string"
     },
     "nBit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "rBit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "remoteGrMode": {
      "description": "Description not available",
      "type": "string"
     },
     "timers": {
      "$ref": "#/components/schemas/schemaBgpNeighborGracefulRestartTimers"
     }
    },
    "type": "object"
   },
   "schemaBgpNeighborGracefulRestartInfoEndOfRibStatus": {
    "description": "Description not available",
    "properties": {
     "endOfRibRecv": {
      "description": "Description not available",
      "type": "boolean"
     },
     "endOfRibSend": {
      "description": "Description not available",
      "type": "boolean"
     },
     "endOfRibSentAfterUpdate": {
      "description": "Description not available",
      "type": "boolean"
     },
     "fBit": {
      "description": "Description not available",
      "type": "boolean"
     },
     "timers": {
      "$ref": "#/components/schemas/schemaBgpNeighborGracefulRestartTimers"
     }
    },
    "type": "object"
   },
   "schemaBgpNeighborGracefulRestartTimers": {
    "description": "Description not available",
    "properties": {
     "configuredRestartTimer": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "receivedRestartTimer": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "stalePathTimer": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaBgpNeighborInfo": {
    "description": "Description not available",
    "properties": {
     "addressFamilyInfo": {
      "$ref": "#/components/schemas/schemaBgpNeighborAddressFamily"
     },
     "bgpConnection": {
      "description": "Description not available",
      "type": "string"
     },
     "bgpInUpdateElapsedTimeMsecs": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "bgpState": {
      "$ref": "#/components/schemas/schemaBgpPeerConnectionState"
     },
     "bgpTimerConfiguredConditionalAdvertisementsSec": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "bgpTimerConfiguredHoldTimeMsecs": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "bgpTimerConfiguredKeepAliveIntervalMsecs": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "bgpTimerHoldTimeMsecs": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "bgpTimerKeepAliveIntervalMsecs": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "bgpTimerLastRead": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "bgpTimerLastWrite": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "bgpTimerUpEstablishedEpoch": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "bgpTimerUpMsec": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "bgpTimerUpString": {
      "description": "Description not available",
      "type": "string"
     },
     "bgpVersion": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "connectRetryTimer": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "connectionsDropped": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "connectionsEstablished": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "estimatedRttInMsecs": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "extendedOptionalParametersLength": {
      "description": "Description not available",
      "type": "boolean"
     },
     "externalBgpNbrMaxHopsAway": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "gracefulRestartInfo": {
      "$ref": "#/components/schemas/schemaBgpNeighborGracefulRestartInfo"
     },
     "hostForeign": {
      "description": "Description not available",
      "type": "string"
     },
     "hostLocal": {
      "description": "Description not available",
      "type": "string"
     },
     "hostname": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "internalBgpNbrMaxHopsAway": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "lastResetCode": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "lastResetDueTo": {
      "description": "Description not available",
      "type": "string"
     },
     "lastResetTimerMsecs": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "localAs": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "localRole": {
      "$ref": "#/components/schemas/schemaBgpNeighborRole"
     },
     "localRouterId": {
      "description": "Description not available",
      "type": "string"
     },
     "messageStats": {
      "$ref": "#/components/schemas/schemaBgpNeighborMessageStats"
     },
     "minBtwnAdvertisementRunsTimerMsecs": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "nbrExternalLink": {
      "description": "Description not available",
      "type": "boolean"
     },
     "neighborCapabilities": {
      "$ref": "#/components/schemas/schemaBgpNeighborCapabilities"
     },
     "nextHop": {
      "description": "Description not available",
      "type": "string"
     },
     "nextHopGlobal": {
      "description": "Description not available",
      "type": "string"
     },
     "nextHopLocal": {
      "description": "Description not available",
      "type": "string"
     },
     "peerAuthEnable": {
      "$ref": "#/components/schemas/schemaBgpPeerAuthenticationStatus"
     },
     "peerBfdInfo": {
      "$ref": "#/components/schemas/schemaBgpPeerBfdInfo"
     },
     "peerGroup": {
      "$ref": "#/components/schemas/schemaBgpNeighborPeerGroup"
     },
     "portForeign": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "portLocal": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "readThread": {
      "$ref": "#/components/schemas/schemaBgpNeighborThreadState"
     },
     "remoteAs": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "remoteRole": {
      "$ref": "#/components/schemas/schemaBgpNeighborRole"
     },
     "remoteRouterId": {
      "description": "Description not available",
      "type": "string"
     },
     "updateSource": {
      "description": "Description not available",
      "type": "string"
     },
     "vrfId": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vrfName": {
      "description": "Description not available",
      "type": "string"
     },
     "writeThread": {
      "$ref": "#/components/schemas/schemaBgpNeighborThreadState"
     }
    },
    "type": "object"
   },
   "schemaBgpNeighborMessageStats": {
    "description": "Description not available",
    "properties": {
     "capabilityRecv": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "capabilitySent": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "depthInq": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "depthOutq": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "keepalivesRecv": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "keepalivesSent": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "notificationsRecv": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "notificationsSent": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "opensRecv": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "opensSent": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "routeRefreshRecv": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "routeRefreshSent": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "totalRecv": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "totalSent": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "updatesRecv": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "updatesSent": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaBgpNeighborPeerGroup": {
    "default": "TRANSIT",
    "description": "Description not available",
    "enum": [
     "TRANSIT",
     "TRANSIT_IPV6",
     "OVERLAY"
    ],
    "type": "string"
   },
   "schemaBgpNeighborReceivedRoute": {
    "description": "Description not available",
    "properties": {
     "addrPrefix": {
      "description": "Description not available",
      "type": "string"
     },
     "best": {
      "description": "Description not available",
      "type": "boolean"
     },
     "bgpLocalRouterId": {
      "description": "Description not available",
      "type": "string"
     },
     "bgpNeighborOriginAddressFamily": {
      "$ref": "#/components/schemas/schemaBgpAddressFamily"
     },
     "bgpNeighborOriginVrf": {
      "description": "Description not available",
      "type": "string"
     },
     "bgpOriginCode": {
      "description": "Description not available",
      "type": "string"
     },
     "bgpTableVersion": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "community": {
      "description": "Description not available",
      "type": "string"
     },
     "damped": {
      "description": "Description not available",
      "type": "boolean"
     },
     "defaultLocPrf": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "filteredPrefixCounter": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "history": {
      "description": "Description not available",
      "type": "boolean"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "internal": {
      "description": "Description not available",
      "type": "boolean"
     },
     "isAsPathTruncated": {
      "description": "Description not available",
      "type": "boolean"
     },
     "locPrf": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "localAs": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "metric": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "network": {
      "description": "Description not available",
      "type": "string"
     },
     "nextHop": {
      "description": "Description not available",
      "type": "string"
     },
     "origin": {
      "$ref": "#/components/schemas/schemaBgpNeighborReceivedRouteOrigin"
     },
     "path": {
      "description": "Description not available",
      "type": "string"
     },
     "prefixLen": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "receivedRoute": {
      "description": "Description not available",
      "type": "string"
     },
     "ribFailure": {
      "description": "Description not available",
      "type": "boolean"
     },
     "stale": {
      "description": "Description not available",
      "type": "boolean"
     },
     "suppressed": {
      "description": "Description not available",
      "type": "boolean"
     },
     "totalPrefixCounter": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "valid": {
      "description": "Description not available",
      "type": "boolean"
     },
     "weight": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaBgpNeighborReceivedRouteOrigin": {
    "default": "IGP",
    "description": "Description not available",
    "enum": [
     "IGP",
     "EGP",
     "IN_COMPLETE"
    ],
    "type": "string"
   },
   "schemaBgpNeighborRole": {
    "default": "BGP_NEIGHBOR_ROLE_UNDEFINED",
    "description": "Description not available",
    "enum": [
     "BGP_NEIGHBOR_ROLE_UNDEFINED",
     "I_BGP",
     "E_BGP"
    ],
    "type": "string"
   },
   "schemaBgpNeighborSummary": {
    "description": "Description not available",
    "properties": {
     "addressFamily": {
      "$ref": "#/components/schemas/schemaBgpAddressFamily"
     },
     "as": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "displayedPeers": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "dynamicPeers": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "failedPeers": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "multiPathRelax": {
      "description": "Description not available",
      "type": "boolean"
     },
     "peerConnectionState": {
      "$ref": "#/components/schemas/schemaBgpPeerConnectionState"
     },
     "peerConnectionsDropped": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "peerConnectionsEstablished": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "peerCount": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "peerGroupCount": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "peerGroupMemory": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "peerHostname": {
      "description": "Description not available",
      "type": "string"
     },
     "peerIdType": {
      "$ref": "#/components/schemas/schemaBgpIdType"
     },
     "peerInQ": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "peerLocalAs": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "peerMemory": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "peerMsgRcvd": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "peerMsgSent": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "peerName": {
      "description": "Description not available",
      "type": "string"
     },
     "peerOutQ": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "peerPfxRcd": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "peerPfxSnt": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "peerRemoteAs": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "peerState": {
      "$ref": "#/components/schemas/schemaBgpPeerState"
     },
     "peerTableVersion": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "peerUptime": {
      "description": "Description not available",
      "type": "string"
     },
     "peerUptimeEstablishedEpoch": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "peerUptimeMsec": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "peerVersion": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "ribCount": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "ribMemory": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "routerId": {
      "description": "Description not available",
      "type": "string"
     },
     "tableVersion": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "totalPeers": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vrfId": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vrfName": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaBgpNeighborThreadState": {
    "default": "THREAD_STATE_ON",
    "description": "Description not available",
    "enum": [
     "THREAD_STATE_ON",
     "THREAD_STATE_OFF"
    ],
    "type": "string"
   },
   "schemaBgpPathSelectionReason": {
    "default": "BGP_PATH_SELECTION_LOCAL_PREF",
    "description": "Description not available",
    "enum": [
     "BGP_PATH_SELECTION_LOCAL_PREF",
     "BGP_PATH_SELECTION_AS_PATH",
     "BGP_PATH_SELECTION_ORIGIN",
     "BGP_PATH_SELECTION_MED",
     "BGP_PATH_SELECTION_EBGP_IBGP",
     "BGP_PATH_SELECTION_IGP_COST",
     "BGP_PATH_SELECTION_ROUTER_ID",
     "BGP_PATH_SELECTION_OLDEST_PATH",
     "BGP_PATH_SELECTION_MULTIPATH",
     "BGP_PATH_SELECTION_TIE_BREAK",
     "BGP_PATH_SELECTION_WEIGHT",
     "BGP_PATH_SELECTION_FIRST_PATH_RECEIVED"
    ],
    "type": "string"
   },
   "schemaBgpPathSource": {
    "default": "BGP_PATH_SORUCE_LOCAL",
    "description": "Description not available",
    "enum": [
     "BGP_PATH_SORUCE_LOCAL",
     "BGP_PATH_SORUCE_STATIC",
     "BGP_PATH_SORUCE_NORMAL",
     "BGP_PATH_SORUCE_EXTERNAL",
     "BGP_PATH_SORUCE_REDISTRIBUTE",
     "BGP_PATH_SORUCE_AGGREGATE",
     "BGP_PATH_SORUCE_CONNECTED",
     "BGP_PATH_SORUCE_IMPORTED"
    ],
    "type": "string"
   },
   "schemaBgpPeerAuthenticationStatus": {
    "default": "BGP_PEER_AUTH_ENABLE",
    "description": "Description not available",
    "enum": [
     "BGP_PEER_AUTH_ENABLE",
     "BGP_PEER_AUTH_DISABLE"
    ],
    "type": "string"
   },
   "schemaBgpPeerBfdInfo": {
    "description": "Description not available",
    "properties": {
     "detectMultiplier": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "lastUpdate": {
      "description": "Description not available",
      "type": "string"
     },
     "rxMinInterval": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "status": {
      "$ref": "#/components/schemas/schemaBgpPeerBfdState"
     },
     "txMinInterval": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "type": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaBgpPeerBfdState": {
    "default": "BFD_STATE_UNKNOWN",
    "description": "Description not available",
    "enum": [
     "BFD_STATE_UNKNOWN",
     "BFD_STATE_DOWN",
     "BFD_STATE_INIT",
     "BFD_STATE_UP",
     "BFD_STATE_ADMIN_DOWN"
    ],
    "type": "string"
   },
   "schemaBgpPeerConnectionState": {
    "default": "ESTABLISHED",
    "description": "Description not available",
    "enum": [
     "ESTABLISHED",
     "NOT_ESTABLISHED",
     "IDLE",
     "CONNECT",
     "OPEN_SENT",
     "OPEN_CONFIRM",
     "BGP_STATE_ACTIVE",
     "BGP_STATE_CLEARING",
     "BGP_STATE_DELETED"
    ],
    "type": "string"
   },
   "schemaBgpPeerState": {
    "default": "PEER_STATE_OK",
    "description": "Description not available",
    "enum": [
     "PEER_STATE_OK",
     "PEER_STATE_NOT_OK"
    ],
    "type": "string"
   },
   "schemaBgpRouteOriginType": {
    "default": "BGP_ROUTE_ORIGIN_TYPE_IGP",
    "description": "Description not available",
    "enum": [
     "BGP_ROUTE_ORIGIN_TYPE_IGP",
     "BGP_ROUTE_ORIGIN_TYPE_EGP",
     "BGP_ROUTE_ORIGIN_TYPE_INCOMPLETE"
    ],
    "type": "string"
   },
   "schemaBmc": {
    "description": "Discovered BMCs",
    "properties": {
     "bmcManager": {
      "$ref": "#/components/schemas/schemaServerManager"
     },
     "bmcProduct": {
      "$ref": "#/components/schemas/modelsBmcProductType"
     },
     "firmwareInventory": {
      "description": "Information below is available Post authentication - the actual parts of the extensive BMC model we utilize will be adjusted based on requirements. Query is done to get all firmware inventory items.",
      "items": {
       "$ref": "#/components/schemas/schemaServerFirmwareInventoryItem"
      },
      "type": "array"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "managedEndpoint": {
      "$ref": "#/components/schemas/schemaManagedEndpoint"
     },
     "preAuthInfo": {
      "$ref": "#/components/schemas/schemaServerBmcPreAuthInfo"
     },
     "serverSystem": {
      "$ref": "#/components/schemas/schemaServerSystem"
     },
     "state": {
      "$ref": "#/components/schemas/modelsBmcStateType"
     }
    },
    "type": "object"
   },
   "schemaBmcConfig": {
    "description": "This is created when the BMC is bound, its used by Lira to understand 1) A detected BMC is now bound and may be accessed 2) If Cert based auth is not supported it will convey the BMC Creds.",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaBreakout": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "state": {
      "$ref": "#/components/schemas/schemaPortState"
     }
    },
    "type": "object"
   },
   "schemaBrigSymmetricSigningKey": {
    "description": "Description not available",
    "properties": {
     "createdAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "keyId": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "keyValue": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaBulkUpliftJobRequest": {
    "description": "Description not available",
    "properties": {
     "dependsOn": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "directory": {
      "description": "Sub directory in s3 where the data for this job will be stored",
      "type": "string"
     },
     "external": {
      "description": "True if this job is customer visible in the main UI, false if only available to cisco support users",
      "type": "boolean"
     },
     "fileName": {
      "description": "File name in s3 where the data for this job will be stored",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "jobType": {
      "$ref": "#/components/schemas/schemaBulkUpliftJobType"
     },
     "pullInterval": {
      "description": "The interval in seconds for polling type jobs like \"Prometheus Metrics\"",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaBulkUpliftJobStatus": {
    "description": "Description not available",
    "properties": {
     "bytesDropped": {
      "description": "In various scenarios the client will drop data and must update this field to indicate how much was dropped",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "bytesUploaded": {
      "description": "Total bytes uploaded to the backend for this job. Client does not need to set this, automatically set by the backend",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "status": {
      "$ref": "#/components/schemas/schemaBulkUpliftStatus"
     }
    },
    "type": "object"
   },
   "schemaBulkUpliftJobType": {
    "default": "BULK_UPLIFT_JOB_SYSLOG",
    "description": "Description not available",
    "enum": [
     "BULK_UPLIFT_JOB_SYSLOG",
     "BULK_UPLIFT_JOB_PCAP",
     "BULK_UPLIFT_JOB_ALWAYS_ON_SYSLOG",
     "BULK_UPLIFT_JOB_ALWAYS_ON_PROMETHEUS_METRICS"
    ],
    "type": "string"
   },
   "schemaBulkUpliftStatus": {
    "default": "BULK_UPLIFT_STATUS_PENDING",
    "description": "Description not available",
    "enum": [
     "BULK_UPLIFT_STATUS_PENDING",
     "BULK_UPLIFT_STATUS_IN_PROGRESS",
     "BULK_UPLIFT_STATUS_COMPLETED",
     "BULK_UPLIFT_STATUS_FAILED"
    ],
    "type": "string"
   },
   "schemaCacheStatus": {
    "default": "PRESENT_PENDING_VERIFICATION",
    "description": "Description not available",
    "enum": [
     "PRESENT_PENDING_VERIFICATION",
     "FETCHING",
     "FAILED_VERIFICATION_PENDING_REFETCH",
     "FAILED_VERIFICATION_REFETCHING",
     "FETCH_PENDING"
    ],
    "type": "string"
   },
   "schemaClaimAndBindTask": {
    "description": "ClaimAndBindTask is a task to claim the device and bind to a fabric This task is monitored, we will check the device is claimed and bound by checking the state held for this device",
    "properties": {
     "bound": {
      "$ref": "#/components/schemas/schemaSmartHandsCompletionStatus"
     },
     "common": {
      "$ref": "#/components/schemas/schemaSmartHandsCommonTask"
     },
     "connectedToCloud": {
      "$ref": "#/components/schemas/schemaSmartHandsCompletionStatus"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaDacCounters": {
    "description": "Description not available",
    "properties": {
     "inOctets": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaDacQsfp": {
    "description": "Description not available",
    "properties": {
     "counters": {
      "$ref": "#/components/schemas/schemaDacCounters"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaDbTableEnum": {
    "default": "DB_TABLE_AUTH_USER",
    "description": "Description not available",
    "enum": [
     "DB_TABLE_AUTH_USER",
     "DB_TABLE_AUTH_BEARER_TOKEN",
     "DB_TABLE_AUTH_API_KEY",
     "DB_TABLE_TENANCY_TENANT"
    ],
    "type": "string"
   },
   "schemaDbTableUpdateNotification": {
    "description": "Description not available",
    "properties": {
     "createdAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "dbTable": {
      "$ref": "#/components/schemas/schemaDbTableEnum"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "instanceName": {
      "description": "Description not available",
      "type": "string"
     },
     "tableUpdatedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaDevice": {
    "description": "A detected Device",
    "properties": {
     "commonPortSpeed": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "firstSeen": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "info": {
      "$ref": "#/components/schemas/schemaDeviceInfo"
     },
     "lastSeen": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaDeviceClaim": {
    "description": "Description not available",
    "properties": {
     "activeDeviceClaim_1": {
      "description": "Description not available",
      "type": "string"
     },
     "activeDeviceClaim_1Expiry": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "activeDeviceClaim_2": {
      "description": "Description not available",
      "type": "string"
     },
     "activeDeviceClaim_2Expiry": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "deviceClaim": {
      "$ref": "#/components/schemas/schemaDeviceClaimData"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "usbClaimOperation": {
      "description": "Description not available",
      "type": "boolean"
     }
    },
    "type": "object"
   },
   "schemaDeviceClaimData": {
    "description": "Description not available",
    "properties": {
     "activeDeviceClaim_1": {
      "description": "Description not available",
      "type": "string"
     },
     "activeDeviceClaim_1Expiry": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "activeDeviceClaim_2": {
      "description": "Description not available",
      "type": "string"
     },
     "activeDeviceClaim_2Expiry": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "usbClaimOperation": {
      "description": "Description not available",
      "type": "boolean"
     }
    },
    "type": "object"
   },
   "schemaDeviceConnection": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "wsConnected": {
      "description": "Number of websocket connections that are currently up",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "wsLastConnectedAt": {
      "description": "Time at which any websocket connection was last made",
      "format": "date-time",
      "type": "string"
     },
     "wsLastDisconnectedAt": {
      "description": "Time at which any websocket connection was last lost",
      "format": "date-time",
      "type": "string"
     },
     "wsMustConnectBy": {
      "description": "Grace period for initial connection after device is marked active",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaDeviceInfo": {
    "description": "Description not available",
    "properties": {
     "agentsVersion": {
      "description": "Description not available",
      "type": "string"
     },
     "lldpLocId": {
      "description": "Description not available",
      "type": "string"
     },
     "model": {
      "description": "Description not available",
      "type": "string"
     },
     "name": {
      "description": "Description not available",
      "type": "string"
     },
     "psuNum": {
      "description": "Description not available",
      "type": "string"
     },
     "revision": {
      "description": "Description not available",
      "type": "string"
     },
     "serial": {
      "description": "Description not available",
      "type": "string"
     },
     "sonicVersion": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaDnsConfig": {
    "description": "Description not available",
    "properties": {
     "dnsServers": {
      "description": "Description not available",
      "items": {
       "type": "string"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "schemaDrakeConfig": {
    "description": "Description not available",
    "properties": {
     "cloudBaseUrlList": {
      "description": "Description not available",
      "items": {
       "type": "string"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "schemaEnvLedStatus": {
    "default": "GREEN",
    "description": "EnvLedStatus defines an enumeration of LED states.",
    "enum": [
     "GREEN",
     "RED",
     "OFF"
    ],
    "type": "string"
   },
   "schemaEnvStatus": {
    "default": "OK",
    "description": "EnvStatus defines an enumeration of hardware operational states.",
    "enum": [
     "OK",
     "NOT_OK",
     "WARNING",
     "NOT_PRESENT"
    ],
    "type": "string"
   },
   "schemaEsiInfo": {
    "description": "Description not available",
    "properties": {
     "accessPort": {
      "description": "Description not available",
      "type": "string"
     },
     "bridgePort": {
      "description": "Description not available",
      "type": "boolean"
     },
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "df": {
      "description": "Description not available",
      "type": "boolean"
     },
     "dfPreference": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "esi": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "local": {
      "description": "Description not available",
      "type": "boolean"
     },
     "macCount": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "nextHopGroup": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "nextHopGroupActive": {
      "description": "Description not available",
      "type": "boolean"
     },
     "operUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "readyForBgp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "remote": {
      "description": "Description not available",
      "type": "boolean"
     },
     "vniCount": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaEsiVtepInfo": {
    "description": "Description not available",
    "properties": {
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "dfAlgorithm": {
      "description": "Description not available",
      "type": "string"
     },
     "dfPreference": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "esi": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "nextHopId": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vtep": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaFabric": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "numDevices": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaFabricConfig": {
    "description": "Description not available",
    "properties": {
     "adminState": {
      "$ref": "#/components/schemas/modelsAdminState"
     },
     "assignmentRevision": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "description": {
      "description": "Description not available",
      "type": "string"
     },
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "location": {
      "description": "Description not available",
      "type": "string"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "name": {
      "description": "Description not available",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "tags": {
      "description": "Description not available",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "topology": {
      "$ref": "#/components/schemas/modelsFabricTopology"
     },
     "type": {
      "$ref": "#/components/schemas/modelsFabricType"
     }
    },
    "type": "object"
   },
   "schemaFabricConfigEvent": {
    "description": "Description not available",
    "properties": {
     "deviceId": {
      "description": "Description not available",
      "type": "string"
     },
     "event": {
      "$ref": "#/components/schemas/schemaFabricEvent"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaFabricConfigNotification": {
    "description": "Description not available",
    "properties": {
     "configFp": {
      "description": "Description not available",
      "type": "string"
     },
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "sequence": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaFabricConnectionTask": {
    "description": "FabricConnectionTask is a task to connect two fabric ports This task is monitored, we will check the ports are correctly connected by checking the state held for this device",
    "properties": {
     "common": {
      "$ref": "#/components/schemas/schemaSmartHandsCommonTask"
     },
     "correctFromPid": {
      "$ref": "#/components/schemas/schemaSmartHandsCompletionStatus"
     },
     "correctToPid": {
      "$ref": "#/components/schemas/schemaSmartHandsCompletionStatus"
     },
     "foundToPort": {
      "$ref": "#/components/schemas/schemaSmartHandsPort"
     },
     "fromPort": {
      "$ref": "#/components/schemas/schemaSmartHandsPort"
     },
     "fromPortState": {
      "$ref": "#/components/schemas/modelsOperState"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "portConnected": {
      "$ref": "#/components/schemas/schemaSmartHandsCompletionStatus"
     },
     "requiredFromPid": {
      "description": "Description not available",
      "type": "string"
     },
     "requiredToPid": {
      "description": "Description not available",
      "type": "string"
     },
     "requiredToPort": {
      "$ref": "#/components/schemas/schemaSmartHandsPort"
     },
     "toPortState": {
      "$ref": "#/components/schemas/modelsOperState"
     }
    },
    "type": "object"
   },
   "schemaFabricDevice": {
    "description": "FabricDevice determines the assignment of a given device id to a fabric id.",
    "properties": {
     "deviceId": {
      "description": "Description not available",
      "type": "string"
     },
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "majorLatchedFalseAsserts": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "majorLatchedTrueAsserts": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "majorUnlatchedFalseAsserts": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "majorUnlatchedTrueAsserts": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "mgmtPortState": {
      "$ref": "#/components/schemas/schemaManagementState"
     },
     "minorLatchedFalseAsserts": {
      "description": "FIXME: unused for now as we do not have assert severity yet, but once this has been defined we will",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "minorLatchedTrueAsserts": {
      "description": "FIXME: unused for now as we do not have assert severity yet, but once this has been defined we will",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "minorUnlatchedFalseAsserts": {
      "description": "FIXME: unused for now as we do not have assert severity yet, but once this has been defined we will",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "minorUnlatchedTrueAsserts": {
      "description": "FIXME: unused for now as we do not have assert severity yet, but once this has been defined we will",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "plannedConfig": {
      "$ref": "#/components/schemas/schemaPlannedConfigData"
     }
    },
    "type": "object"
   },
   "schemaFabricEvent": {
    "default": "FABRIC_EVENT_ADD_DEVICE",
    "description": "Description not available",
    "enum": [
     "FABRIC_EVENT_ADD_DEVICE",
     "FABRIC_EVENT_REMOVE_DEVICE",
     "FABRIC_EVENT_BIND_DEVICE",
     "FABRIC_EVENT_UNBIND_DEVICE"
    ],
    "type": "string"
   },
   "schemaFabricMemoryUsage": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaFabricTransaction": {
    "description": "Description not available",
    "properties": {
     "changedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "committed": {
      "description": "Description not available",
      "type": "boolean"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaFabricUuid": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaFan": {
    "description": "A Fan represents an hardware fan module of a Device.",
    "properties": {
     "collectedAt": {
      "description": "The time the data was last collected in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (e.g. `YYYY-MM-DDTHH:MM:SSZ`).",
      "format": "date-time",
      "type": "string"
     },
     "deprecatedDirection": {
      "description": "Description not available",
      "type": "string"
     },
     "direction": {
      "$ref": "#/components/schemas/schemaFanDirection"
     },
     "drawer": {
      "description": "The tray or drawer to which the Fan belongs to.",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "ledStatus": {
      "$ref": "#/components/schemas/schemaEnvLedStatus"
     },
     "model": {
      "description": "The model name of the Fan.",
      "type": "string"
     },
     "name": {
      "description": "The name of the Fan.",
      "type": "string"
     },
     "serial": {
      "description": "The serial number of the Fan.",
      "type": "string"
     },
     "speed": {
      "description": "The Fan speed as a percentage of the maximum rated speed.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "status": {
      "$ref": "#/components/schemas/schemaEnvStatus"
     }
    },
    "type": "object"
   },
   "schemaFanDirection": {
    "default": "INTAKE",
    "description": "FanDirection defines an enumeration of airflow directions for of Fan. The airflow direction is relative to the port-side.",
    "enum": [
     "INTAKE",
     "EXHAUST"
    ],
    "type": "string"
   },
   "schemaFecType": {
    "default": "FEC_TYPE_NONE",
    "description": "Description not available",
    "enum": [
     "FEC_TYPE_NONE",
     "FEC_TYPE_RS",
     "FEC_TYPE_FC",
     "FEC_TYPE_BASER"
    ],
    "type": "string"
   },
   "schemaFiberCounters": {
    "description": "Description not available",
    "properties": {
     "inOctets": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaFiberQsfp": {
    "description": "Description not available",
    "properties": {
     "counters": {
      "$ref": "#/components/schemas/schemaFiberCounters"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaFileCacheStatus": {
    "description": "Description not available",
    "properties": {
     "actualSize": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "expectedSize": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "filename": {
      "description": "Description not available",
      "type": "string"
     },
     "lastChanged": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "lastChecked": {
      "description": "when was this message generated",
      "format": "date-time",
      "type": "string"
     },
     "packageName": {
      "description": "Description not available",
      "type": "string"
     },
     "partitionName": {
      "description": "Description not available",
      "type": "string"
     },
     "sha512224": {
      "description": "Description not available",
      "type": "string"
     },
     "status": {
      "$ref": "#/components/schemas/schemaCacheStatus"
     }
    },
    "type": "object"
   },
   "schemaFirmwareVersion": {
    "description": "Description not available",
    "properties": {
     "aikidoVersion": {
      "description": "Description not available",
      "type": "string"
     },
     "biosVersion": {
      "description": "Description not available",
      "type": "string"
     },
     "cpldgVersion": {
      "description": "Description not available",
      "type": "string"
     },
     "cpldlVersion": {
      "description": "Description not available",
      "type": "string"
     },
     "cpldrVersion": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "iofpgaVersion": {
      "description": "Description not available",
      "type": "string"
     },
     "ssdVersion": {
      "description": "Description not available",
      "type": "string"
     },
     "tamVersion": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaGatewayInfo": {
    "description": "Description not available",
    "properties": {
     "isGateway": {
      "description": "Description not available",
      "type": "boolean"
     }
    },
    "type": "object"
   },
   "schemaHostPort": {
    "description": "Description not available",
    "properties": {
     "grpcPort": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "host": {
      "description": "Description not available",
      "type": "string"
     },
     "httpsPort": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaIpFamilyType": {
    "default": "IPv4",
    "description": "Description not available",
    "enum": [
     "IPv4",
     "IPv6"
    ],
    "type": "string"
   },
   "schemaIpNextHop": {
    "description": "Description not available",
    "properties": {
     "active": {
      "description": "Description not available",
      "type": "boolean"
     },
     "afi": {
      "$ref": "#/components/schemas/schemaIpFamilyType"
     },
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "deprecatedAfi": {
      "description": "Description not available",
      "type": "string"
     },
     "directlyConnected": {
      "description": "Description not available",
      "type": "boolean"
     },
     "fib": {
      "description": "Description not available",
      "type": "boolean"
     },
     "flags": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "interfaceIndex": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "interfaceName": {
      "description": "Description not available",
      "type": "string"
     },
     "ip": {
      "description": "Description not available",
      "type": "string"
     },
     "onLink": {
      "description": "Description not available",
      "type": "boolean"
     },
     "routerMac": {
      "description": "Description not available",
      "type": "string"
     },
     "weight": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaIpPrefix": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaIpRouteTable": {
    "description": "Description not available",
    "properties": {
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "deprecatedProtocol": {
      "description": "Description not available",
      "type": "string"
     },
     "destSelected": {
      "description": "Description not available",
      "type": "boolean"
     },
     "distance": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "installed": {
      "description": "Description not available",
      "type": "boolean"
     },
     "installedNextHopGroupId": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "internalFlags": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "internalNextHopActiveNum": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "internalNextHopNum": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "internalStatus": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "ipFamily": {
      "$ref": "#/components/schemas/schemaIpFamilyType"
     },
     "med": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "metric": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "multipleDiffNextHops": {
      "description": "Description not available",
      "type": "boolean"
     },
     "nextHopGroupId": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "nhIp": {
      "description": "Description not available",
      "type": "string"
     },
     "nhName": {
      "description": "Description not available",
      "type": "string"
     },
     "offloaded": {
      "description": "Description not available",
      "type": "boolean"
     },
     "origin": {
      "$ref": "#/components/schemas/schemaBgpRouteOriginType"
     },
     "pathFrom": {
      "$ref": "#/components/schemas/schemaBgpPathSource"
     },
     "peerAsnPath": {
      "description": "Description not available",
      "type": "string"
     },
     "peerId": {
      "description": "Description not available",
      "type": "string"
     },
     "prefix": {
      "description": "Description not available",
      "type": "string"
     },
     "prefixLen": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "protocol": {
      "$ref": "#/components/schemas/schemaProtocolType"
     },
     "selected": {
      "description": "Description not available",
      "type": "boolean"
     },
     "selectionReason": {
      "$ref": "#/components/schemas/schemaBgpPathSelectionReason"
     },
     "table": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "uptime": {
      "description": "Description not available",
      "type": "string"
     },
     "vrfId": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vrfName": {
      "description": "Description not available",
      "type": "string"
     },
     "weight": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaIpmLivenessCounters": {
    "description": "Description not available",
    "properties": {
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "ipmParams": {
      "$ref": "#/components/schemas/schemaIpmSessionParameters"
     },
     "livenessTimer": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "state": {
      "$ref": "#/components/schemas/schemaLivenessStatus"
     }
    },
    "type": "object"
   },
   "schemaIpmProcJitterCounters": {
    "description": "Description not available",
    "properties": {
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "ipmParams": {
      "$ref": "#/components/schemas/schemaIpmSessionParameters"
     },
     "jitter100": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "jitter100Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "jitter50": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "jitter50Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "jitter80": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "jitter80Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "jitter90": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "jitter90Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "latPercentile0": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "latPercentile10": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "latPercentile100": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "latPercentile25": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "latPercentile5": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "latPercentile50": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "latPercentile75": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "latPercentile90": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "latPercentile95": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     }
    },
    "type": "object"
   },
   "schemaIpmProcLatencyCounters": {
    "description": "Description not available",
    "properties": {
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "criticalLatency": {
      "description": "Description not available",
      "type": "boolean"
     },
     "criticalThreshold": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "criticalThresholdPercentage": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "exceedingCritical": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "exceedingCriticalEma": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "exceedingSuspicious": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "exceedingSuspiciousEma": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "ipmParams": {
      "$ref": "#/components/schemas/schemaIpmSessionParameters"
     },
     "rxBin0Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin10Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin11Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin12Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin13Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin14Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin15Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin16Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin17Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin18Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin19Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin1Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin20Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin21Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin22Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin23Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin24Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin25Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin26Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin27Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin2Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin3Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin4Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin5Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin6Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin7Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin8Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxBin9Ema": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "suspiciousLatency": {
      "description": "Description not available",
      "type": "boolean"
     },
     "suspiciousThreshold": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "suspiciousThresholdPercentage": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     }
    },
    "type": "object"
   },
   "schemaIpmProcLossCounters": {
    "description": "Description not available",
    "properties": {
     "alternateMarkingInterval": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "ipmParams": {
      "$ref": "#/components/schemas/schemaIpmSessionParameters"
     },
     "loss": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "pLoss": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "pLossEma": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "receivedPackets": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "transmittedPackets": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaIpmRawLatencyCounters": {
    "description": "Description not available",
    "properties": {
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "ipmParams": {
      "$ref": "#/components/schemas/schemaIpmSessionParameters"
     },
     "maxBin0": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin1": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin10": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin11": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin12": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin13": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin14": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin15": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin16": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin17": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin18": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin19": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin2": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin20": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin21": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin22": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin23": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin24": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin25": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin26": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin27": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin3": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin4": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin5": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin6": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin7": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin8": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "maxBin9": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin0": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin1": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin10": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin11": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin12": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin13": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin14": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin15": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin16": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin17": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin18": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin19": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin2": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin20": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin21": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin22": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin23": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin24": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin25": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin26": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin27": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin3": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin4": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin5": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin6": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin7": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin8": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "rxBin9": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaIpmSessionId": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaIpmSessionParameters": {
    "description": "Description not available",
    "properties": {
     "confSessionId": {
      "description": "Description not available",
      "type": "string"
     },
     "description": {
      "description": "Description not available",
      "type": "string"
     },
     "dscp": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "dstAddr": {
      "description": "Description not available",
      "type": "string"
     },
     "flowLabel": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "srcAddr": {
      "description": "Description not available",
      "type": "string"
     },
     "vrf": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaKubernetesServiceInstance": {
    "description": "Description not available",
    "properties": {
     "appName": {
      "$ref": "#/components/schemas/schemaApplicationIdentity"
     },
     "appReadiness": {
      "$ref": "#/components/schemas/schemaApplicationReadiness"
     },
     "clusterId": {
      "description": "cluster or cell identifier",
      "type": "string"
     },
     "externalHostAndPort": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "instanceId": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "instanceName": {
      "description": "Description not available",
      "type": "string"
     },
     "internalHostAndPort": {
      "description": "Description not available",
      "type": "string"
     },
     "podUuid": {
      "description": "Description not available",
      "type": "string"
     },
     "softwareVersion": {
      "description": "Description not available",
      "type": "string"
     },
     "svcRoute": {
      "$ref": "#/components/schemas/schemaSvcRoute"
     },
     "updatedTs": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaL2Fdb": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "l2entries": {
      "description": "TBD collection time TBD min/max key values for block",
      "items": {
       "$ref": "#/components/schemas/schemaL2FdbEntry"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "schemaL2FdbEntry": {
    "description": "Description not available",
    "properties": {
     "entryDiscoveredAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "entryType": {
      "$ref": "#/components/schemas/schemaL2FdbEntryType"
     },
     "macAddress": {
      "description": "Description not available",
      "type": "string"
     },
     "portRef": {
      "description": "Give this a field type for port ref",
      "type": "string"
     },
     "staticEntry": {
      "description": "Was entry added statically?",
      "type": "boolean"
     },
     "vlanId": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vni": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaL2FdbEntryType": {
    "default": "L2_FDB_ENTRY_TYPE_LOCAL",
    "description": "Description not available",
    "enum": [
     "L2_FDB_ENTRY_TYPE_LOCAL",
     "L2_FDB_ENTRY_TYPE_REMOTE",
     "L2_FDB_ENTRY_TYPE_STATIC"
    ],
    "type": "string"
   },
   "schemaL2Mac": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaL3Status": {
    "default": "UNKNOWN",
    "description": "Description not available",
    "enum": [
     "UNKNOWN",
     "NO_ARP",
     "STALE",
     "REACHABLE",
     "PERMANENT",
     "NONE",
     "INCOMPLETE",
     "DELAY",
     "PROBE",
     "FAILED"
    ],
    "type": "string"
   },
   "schemaL3Table": {
    "description": "Description not available",
    "properties": {
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "entryDiscoveredAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "familyType": {
      "$ref": "#/components/schemas/schemaIpFamilyType"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "ifName": {
      "description": "Description not available",
      "type": "string"
     },
     "internal": {
      "description": "Description not available",
      "type": "boolean"
     },
     "ipAddress": {
      "description": "Description not available",
      "type": "string"
     },
     "learnedFrom": {
      "$ref": "#/components/schemas/schemaL3TableEntrySource"
     },
     "macAddress": {
      "description": "Description not available",
      "type": "string"
     },
     "stale": {
      "description": "Description not available",
      "type": "boolean"
     },
     "status": {
      "$ref": "#/components/schemas/schemaL3Status"
     },
     "vlan": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vni": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaL3TableEntrySource": {
    "default": "ARP",
    "description": "Description not available",
    "enum": [
     "ARP",
     "ND"
    ],
    "type": "string"
   },
   "schemaLLDPRemoteDeviceHostSubType": {
    "default": "IF_ALIAS",
    "description": "Description not available",
    "enum": [
     "IF_ALIAS",
     "LOCAL",
     "MAC",
     "IP",
     "IFNAME"
    ],
    "type": "string"
   },
   "schemaLLDPSysCapabilityType": {
    "default": "REPEATER",
    "description": "DEPRECATED",
    "enum": [
     "REPEATER",
     "BRIDGE",
     "WLAN",
     "ROUTER",
     "TELEPHONE",
     "DOCSIS_CABLE_DEVICE",
     "STATION"
    ],
    "type": "string"
   },
   "schemaLineCard": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaLivenessStatus": {
    "default": "LIVENESS_UP",
    "description": "Description not available",
    "enum": [
     "LIVENESS_UP",
     "LIVENESS_DOWN"
    ],
    "type": "string"
   },
   "schemaLoadBalancedSvcRoute": {
    "description": "LoadBalancedSvcRoute is used to route to an application in a specific cell without a resource (i.e. any brig or any configd) object: \u003ccellId\u003e, index: \u003cappNum\u003e",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "route": {
      "$ref": "#/components/schemas/schemaSvcRoute"
     },
     "updatedTs": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaMac": {
    "description": "MACs observed on a VNI port",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "macAddress": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaManagedEndpoint": {
    "description": "Description not available",
    "properties": {
     "connectionReason": {
      "description": "Description not available",
      "type": "string"
     },
     "connectivityStatus": {
      "$ref": "#/components/schemas/modelsConnectivityStatus"
     },
     "lastConnectedAt": {
      "description": "Last time we successfully connected to Managed Endpoint",
      "format": "date-time",
      "type": "string"
     },
     "lastLldpReceivedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "lldpInfo": {
      "$ref": "#/components/schemas/schemaManagedEndpointLldpInfo"
     },
     "meType": {
      "$ref": "#/components/schemas/modelsManagedEndpointType"
     },
     "otherStates": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaManagedEndpointOtherState"
      },
      "type": "array"
     },
     "spdmSupported": {
      "description": "Description not available",
      "type": "boolean"
     }
    },
    "type": "object"
   },
   "schemaManagedEndpointLldpInfo": {
    "description": "Cannot include time, as we hash on this to determine change",
    "properties": {
     "localInterface": {
      "description": "LocalPort",
      "type": "string"
     },
     "macAddress": {
      "description": "LldpRemChassisId -\u003e MAC Address",
      "type": "string"
     },
     "mgmtAddrs": {
      "description": "lldpRemManAddr -\u003e We expect a IPv6 LLA here, and possibly on IPv4 address with optionally more IPv6 addresses",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "serverInfo": {
      "$ref": "#/components/schemas/schemaManagedEndpointServerInfo"
     },
     "sysDesc": {
      "description": "lldpSysDesc",
      "type": "string"
     },
     "sysName": {
      "description": "lldpSysName",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaManagedEndpointOtherState": {
    "description": "Description not available",
    "properties": {
     "description": {
      "description": "Description not available",
      "type": "string"
     },
     "state": {
      "$ref": "#/components/schemas/schemaManagedEndpointOtherStateEnum"
     }
    },
    "type": "object"
   },
   "schemaManagedEndpointOtherStateEnum": {
    "default": "ME_OTHER_STATE_BIOS_OPROM_OPT_ENABLED",
    "description": "Description not available",
    "enum": [
     "ME_OTHER_STATE_BIOS_OPROM_OPT_ENABLED"
    ],
    "type": "string"
   },
   "schemaManagedEndpointServerInfo": {
    "description": "Description not available",
    "properties": {
     "family": {
      "description": "Description not available",
      "type": "string"
     },
     "manufacturer": {
      "description": "Description not available",
      "type": "string"
     },
     "pcieBus": {
      "description": "Populated for DPU BMC and DPU, but not from a Server BMC",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "pcieFunction": {
      "description": "Populated for DPU BMC and DPU, but not from a Server BMC",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "pcieSlot": {
      "description": "Populated for DPU BMC and DPU, but not from a Server BMC",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "product": {
      "description": "Description not available",
      "type": "string"
     },
     "serialNum": {
      "description": "Description not available",
      "type": "string"
     },
     "sku": {
      "description": "Description not available",
      "type": "string"
     },
     "uuid": {
      "description": "Description not available",
      "type": "string"
     },
     "version": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaManagementConfig": {
    "description": "Description not available",
    "properties": {
     "configSource": {
      "description": "Description not available",
      "type": "string"
     },
     "dns": {
      "$ref": "#/components/schemas/schemaDnsConfig"
     },
     "drake": {
      "$ref": "#/components/schemas/schemaDrakeConfig"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "ipv4Method": {
      "description": "Description not available",
      "type": "string"
     },
     "ipv6Method": {
      "description": "Description not available",
      "type": "string"
     },
     "ntpServers": {
      "description": "Description not available",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "proxy": {
      "$ref": "#/components/schemas/schemaProxyConfig"
     },
     "sonic": {
      "$ref": "#/components/schemas/schemaSonicConfig"
     }
    },
    "type": "object"
   },
   "schemaManagementState": {
    "description": "Description not available",
    "properties": {
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "configSource": {
      "description": "Description not available",
      "type": "string"
     },
     "dns": {
      "$ref": "#/components/schemas/schemaDnsConfig"
     },
     "drake": {
      "$ref": "#/components/schemas/schemaDrakeConfig"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "ifNameAlias": {
      "description": "Description not available",
      "type": "string"
     },
     "ipv4Method": {
      "description": "Description not available",
      "type": "string"
     },
     "ipv6Method": {
      "description": "Description not available",
      "type": "string"
     },
     "ntpServers": {
      "description": "Description not available",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "operationStatus": {
      "$ref": "#/components/schemas/schemaOperationStatus"
     },
     "proxy": {
      "$ref": "#/components/schemas/schemaProxyConfig"
     },
     "secondaryIpv4Addr": {
      "description": "Description not available",
      "type": "string"
     },
     "secondaryIpv4Method": {
      "description": "Description not available",
      "type": "string"
     },
     "sonic": {
      "$ref": "#/components/schemas/schemaSonicConfig"
     }
    },
    "type": "object"
   },
   "schemaManifestImageInfo": {
    "description": "Description not available",
    "properties": {
     "agentsActualFileName": {
      "description": "Description not available",
      "type": "string"
     },
     "agentsSha": {
      "description": "Description not available",
      "type": "string"
     },
     "bootloaderActualFileName": {
      "description": "Description not available",
      "type": "string"
     },
     "bootloaderCfgActualFileName": {
      "description": "Description not available",
      "type": "string"
     },
     "bootloaderCfgSha": {
      "description": "Description not available",
      "type": "string"
     },
     "bootloaderSha": {
      "description": "Description not available",
      "type": "string"
     },
     "dockerfsActualFileName": {
      "description": "Description not available",
      "type": "string"
     },
     "dockerfsSha": {
      "description": "Description not available",
      "type": "string"
     },
     "downloadProgress": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "initrdActualFileName": {
      "description": "Description not available",
      "type": "string"
     },
     "initrdSha": {
      "description": "Description not available",
      "type": "string"
     },
     "kernelActualFileName": {
      "description": "Description not available",
      "type": "string"
     },
     "kernelSha": {
      "description": "Description not available",
      "type": "string"
     },
     "manifestIssued": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "monolithActualFileName": {
      "description": "Description not available",
      "type": "string"
     },
     "monolithSha": {
      "description": "Description not available",
      "type": "string"
     },
     "partitionName": {
      "description": "Description not available",
      "type": "string"
     },
     "partitionStatus": {
      "$ref": "#/components/schemas/schemaManifestImagePartitionStatus"
     },
     "releaseTag": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaManifestImagePartitionStatus": {
    "default": "PARTITION_STATUS_ACTIVE",
    "description": "Description not available",
    "enum": [
     "PARTITION_STATUS_ACTIVE",
     "PARTITION_STATUS_STANDBY_READY",
     "PARTITION_STATUS_ARTIFACTS_NOT_FULLY_SPECIFIED",
     "PARTITION_STATUS_DOWNLOADING_ARTIFACTS",
     "PARTITION_STATUS_STAGING_IN_PROGRESS",
     "PARTITION_STATUS_STAGING_COMPLETED",
     "PARTITION_STATUS_STAGING_FAILED",
     "PARTITION_STATUS_VERIFY_IN_PROGRESS",
     "PARTITION_STATUS_VERIFY_COMPLETED",
     "PARTITION_STATUS_VERIFY_FAILED",
     "PARTITION_STATUS_UPGRADE_IN_PROGRESS",
     "PARTITION_STATUS_UPGRADE_FAILED",
     "PARTITION_STATUS_FIRMWARE_UPGRADE_IN_PROGRESS"
    ],
    "type": "string"
   },
   "schemaManifestImageState": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaManifestPartitionFileCacheStatus": {
    "description": "Description not available",
    "properties": {
     "file": {
      "$ref": "#/components/schemas/schemaFileCacheStatus"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "partitionName": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaManifestRunningImageStatus": {
    "description": "Software download manifest status definitions",
    "properties": {
     "activeRunningImage": {
      "$ref": "#/components/schemas/schemaManifestImageInfo"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "standByImage": {
      "$ref": "#/components/schemas/schemaManifestImageInfo"
     }
    },
    "type": "object"
   },
   "schemaNegativeConnectionTask": {
    "description": "NegativeConnectionTask is a task that indicates a connection needs to be removed/corrected",
    "properties": {
     "common": {
      "$ref": "#/components/schemas/schemaSmartHandsCommonTask"
     },
     "foundOpticPid": {
      "description": "Description not available",
      "type": "string"
     },
     "foundToPort": {
      "$ref": "#/components/schemas/schemaSmartHandsPort"
     },
     "fromPort": {
      "$ref": "#/components/schemas/schemaSmartHandsPort"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaNeighborType": {
    "default": "DRAKE_FABRIC",
    "description": "Description not available",
    "enum": [
     "DRAKE_FABRIC",
     "DRAKE_NOT_FABRIC"
    ],
    "type": "string"
   },
   "schemaNode": {
    "description": "Node anchors the blueprint config that configd sends to sextant to configure smarthands task for a blueprint slot",
    "properties": {
     "connectedToCloud": {
      "description": "Description not available",
      "type": "boolean"
     },
     "deviceId": {
      "description": "Description not available",
      "type": "string"
     },
     "groupId": {
      "description": "Description not available",
      "type": "string"
     },
     "groupName": {
      "description": "Description not available",
      "type": "string"
     },
     "groupShortName": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "model": {
      "description": "Description not available",
      "type": "string"
     },
     "name": {
      "description": "Description not available",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "overallGroupPosition": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "position": {
      "description": "1-based index of the slot. E.g. 1 for Leaf1, 2 for Leaf2, 2 for Spine2",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "role": {
      "$ref": "#/components/schemas/modelsNodeRole"
     },
     "serialNumber": {
      "description": "Description not available",
      "type": "string"
     },
     "tags": {
      "description": "Description not available",
      "items": {
       "type": "string"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "schemaNodeBreakout": {
    "description": "NodeBreakout is a breakout in a blueprint slot. If there is no breakout the breakout index is 0, otherwise it is 1-based.",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "interfaceName": {
      "description": "Description not available",
      "type": "string"
     },
     "requiredOpticPid": {
      "description": "Description not available",
      "type": "string"
     },
     "requiredRemoteOpticPid": {
      "description": "Description not available",
      "type": "string"
     },
     "requiredToPort": {
      "$ref": "#/components/schemas/schemaSmartHandsPort"
     }
    },
    "type": "object"
   },
   "schemaNodeConfig": {
    "description": "Description not available",
    "properties": {
     "adminState": {
      "$ref": "#/components/schemas/modelsAdminState"
     },
     "bound": {
      "description": "Description not available",
      "type": "boolean"
     },
     "claimedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "configFp": {
      "description": "Description not available",
      "type": "string"
     },
     "description": {
      "description": "Description not available",
      "type": "string"
     },
     "deviceId": {
      "description": "Description not available",
      "type": "string"
     },
     "fabricId": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "modelName": {
      "description": "Description not available",
      "type": "string"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "name": {
      "description": "Description not available",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "osType": {
      "$ref": "#/components/schemas/modelsOsType"
     },
     "role": {
      "$ref": "#/components/schemas/modelsNodeRole"
     },
     "serialNumber": {
      "description": "Description not available",
      "type": "string"
     },
     "tags": {
      "description": "Description not available",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "type": {
      "$ref": "#/components/schemas/modelsNodeType"
     }
    },
    "type": "object"
   },
   "schemaNodeLineCard": {
    "description": "NodeLineCard is a linecard in a blueprint slot. 1-based.",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaNodePort": {
    "description": "NodePort is a port in a blueprint slot. 1-based.",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaOperationStatus": {
    "default": "UP",
    "description": "OperationStatus defines an enumeration of operational statuses of an interface or a port.",
    "enum": [
     "UP",
     "DOWN"
    ],
    "type": "string"
   },
   "schemaOrgToCellPairMapping": {
    "description": "Description not available",
    "properties": {
     "activeCellUuid": {
      "description": "Description not available",
      "type": "string"
     },
     "activeSvcProxyHost": {
      "description": "Description not available",
      "type": "string"
     },
     "cellPairUuid": {
      "description": "Description not available",
      "type": "string"
     },
     "createdBy": {
      "description": "Description not available",
      "type": "string"
     },
     "generation": {
      "description": "monotonically increasing number",
      "format": "int32",
      "type": "integer"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "orgKind": {
      "$ref": "#/components/schemas/modelsOrgKind"
     },
     "orgUuid": {
      "description": "Description not available",
      "type": "string"
     },
     "reserved_5": {
      "description": "was svc_proxy (fred) for cell A",
      "type": "string"
     },
     "reserved_6": {
      "description": "was svc_proxy (fred) for cell B",
      "type": "string"
     },
     "standbyCellUuid": {
      "description": "Description not available",
      "type": "string"
     },
     "updatedTs": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaOrgUuid": {
    "description": "FIXME: Should not need DeviceType",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaPathPathId": {
    "description": "PathId identifies the specific \"schema coordinates\" identifier of an object in the schema tree.",
    "properties": {
     "activeWorker": {
      "description": "Description not available",
      "type": "string"
     },
     "aggregatedDeviceClaim": {
      "description": "Description not available",
      "type": "string"
     },
     "apiKey": {
      "description": "Description not available",
      "type": "string"
     },
     "apiPath": {
      "description": "Description not available",
      "type": "string"
     },
     "apiPathMethod": {
      "description": "Description not available",
      "type": "string"
     },
     "apiPathProtocol": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "apiServiceMapping": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "application": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertBgpPeerEstablished": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigBgpPeerEstablished": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigDeviceConnectedToCloud": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigDeviceConnectedToFabric": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigDeviceEnvPsuUsageBelowThreshold": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigDeviceFanSpeedBelowThreshold": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigDeviceResourceUsageBelowThreshold": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigDeviceTemperatureBelowThreshold": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigExpectedPortBreakoutExists": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigManagementPortConfigSame": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigPortChannelMemberUp": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigPortConnectionSpeedMatch": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigPortExpectedNeighbor": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigPortLinkDown": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigPortLinkUp": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigPortNoUnknownVlanFound": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigPortNotConnectedToFabric": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigPortPluggablePidSame": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigPortSpeedConsistent": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigPortVlanStpStateConsistent": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigStaticDefaultRouteExists": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigSubInterfaceDown": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigSubInterfaceUp": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertConfigVlanHasTraffic": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertDeviceConnectedToCloud": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertDeviceConnectedToFabric": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertDeviceEnvPsuUsageBelowThreshold": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertDeviceFanSpeedBelowThreshold": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertDeviceResourceUsageBelowThreshold": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertDeviceTemperatureBelowThreshold": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertExpectedPortBreakoutExists": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertManagementPortConfigSame": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertPortChannelMemberUp": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertPortConnectionSpeedMatch": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertPortExpectedNeighbor": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertPortLinkDown": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertPortLinkUp": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertPortNoUnknownVlanFound": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertPortNotConnectedToFabric": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertPortPluggablePidSame": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertPortSpeedConsistent": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertPortVlanStpStateConsistent": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertStaticDefaultRouteExists": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertSubInterfaceDown": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertSubInterfaceUp": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assertVlanHasTraffic": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "assignmentStatus": {
      "description": "Description not available",
      "type": "string"
     },
     "assignmentSvcRoute": {
      "description": "Description not available",
      "type": "string"
     },
     "bearerToken": {
      "description": "Description not available",
      "type": "string"
     },
     "bgpNeighborFamily": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "bgpNeighborInfo": {
      "description": "Description not available",
      "type": "string"
     },
     "bgpNeighborReceivedRoute": {
      "description": "Description not available",
      "type": "string"
     },
     "bgpNeighborSummary": {
      "description": "Description not available",
      "type": "string"
     },
     "bmc": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "bmcConfig": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "breakout": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "brigSymmetricSigningKey": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "bulkUpliftJobRequest": {
      "description": "Description not available",
      "type": "string"
     },
     "bulkUpliftJobStatus": {
      "description": "Description not available",
      "type": "string"
     },
     "claimAndBindTask": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "dacQsfp": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "dbTableUpdateNotification": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "deleted": {
      "description": "Indicates that this object was deleted.",
      "type": "boolean"
     },
     "device": {
      "description": "Description not available",
      "type": "string"
     },
     "deviceClaim": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "deviceConnection": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "esiInfo": {
      "description": "Description not available",
      "type": "string"
     },
     "esiVtepInfo": {
      "description": "Description not available",
      "type": "string"
     },
     "fabric": {
      "description": "Description not available",
      "type": "string"
     },
     "fabricConfig": {
      "description": "Description not available",
      "type": "string"
     },
     "fabricConfigEvent": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "fabricConfigNotification": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "fabricConnectionTask": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "fabricDevice": {
      "description": "Description not available",
      "type": "string"
     },
     "fabricMemoryUsage": {
      "description": "Description not available",
      "type": "string"
     },
     "fabricTransaction": {
      "description": "Description not available",
      "type": "string"
     },
     "fabricUuid": {
      "description": "Description not available",
      "type": "string"
     },
     "fan": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "fiberQsfp": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "firmwareVersion": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "ipNextHop": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "ipPrefix": {
      "description": "Description not available",
      "type": "string"
     },
     "ipRouteTable": {
      "description": "Description not available",
      "type": "string"
     },
     "ipmLivenessCounters": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "ipmProcJitterCounters": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "ipmProcLatencyCounters": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "ipmProcLossCounters": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "ipmRawLatencyCounters": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "ipmSessionId": {
      "description": "Description not available",
      "type": "string"
     },
     "kubernetesServiceInstance": {
      "description": "Description not available",
      "type": "string"
     },
     "l2Fdb": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "l2Mac": {
      "description": "Description not available",
      "type": "string"
     },
     "l3Table": {
      "description": "Description not available",
      "type": "string"
     },
     "lineCard": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "loadBalancedSvcRoute": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "mac": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "managementConfig": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "managementState": {
      "description": "Description not available",
      "type": "string"
     },
     "manifestImageState": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "manifestPartitionFileCacheStatus": {
      "description": "Description not available",
      "type": "string"
     },
     "manifestRunningImageStatus": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "negativeConnectionTask": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "node": {
      "description": "Description not available",
      "type": "string"
     },
     "nodeBreakout": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "nodeConfig": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "nodeLineCard": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "nodePort": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "orgToCellPairMapping": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "orgUuid": {
      "description": "Description not available",
      "type": "string"
     },
     "pathString": {
      "description": "Optional string representation of the schema path. Only populated on request.",
      "type": "string"
     },
     "plannedConfig": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "port": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "portChannelMemberState": {
      "description": "Description not available",
      "type": "string"
     },
     "portChannelState": {
      "description": "Description not available",
      "type": "string"
     },
     "portConfig": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "portCounters": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "portNeighbor": {
      "description": "Description not available",
      "type": "string"
     },
     "portRateCounters": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "portSetupTask": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "portVlan": {
      "description": "Description not available",
      "type": "string"
     },
     "procTable": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "proxyConnectionState": {
      "description": "Description not available",
      "type": "string"
     },
     "proxyConnectionStats": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "proxyStats": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "psu": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "qsfpDomSensor": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "qsfpDomThreshold": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "qsfpInfo": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "refPoint": {
      "description": "Description not available",
      "type": "string"
     },
     "refPointStatus": {
      "description": "Description not available",
      "type": "string"
     },
     "remedyAction": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteVtep": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "resourceAssignment": {
      "description": "Description not available",
      "type": "string"
     },
     "routedInterfaceCounters": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "serverFan": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "serverIpRouteAddress": {
      "description": "Description not available",
      "type": "string"
     },
     "serverIpRouteTable": {
      "description": "Description not available",
      "type": "string"
     },
     "serverPortInfo": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "serverPsu": {
      "description": "Description not available",
      "type": "string"
     },
     "serverTempSensor": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "serviceInstanceHealth": {
      "description": "Description not available",
      "type": "string"
     },
     "spyglassBrokerEntry": {
      "description": "Description not available",
      "type": "string"
     },
     "spyglassDevice": {
      "description": "Description not available",
      "type": "string"
     },
     "spyglassGingerEntry": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "spyglassSshSessionEntry": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "spyglassTcpListener": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "spyglassTcpSession": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "stpPortState": {
      "description": "Description not available",
      "type": "string"
     },
     "stpVlanPortState": {
      "description": "Description not available",
      "type": "string"
     },
     "stpVlanState": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "subInterface": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "systemStats": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "tempSensor": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "tenantMetadata": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "tenantUuid": {
      "description": "Description not available",
      "type": "string"
     },
     "testIpAddress": {
      "description": "Description not available",
      "type": "string"
     },
     "testIpPrefix": {
      "description": "Description not available",
      "type": "string"
     },
     "testLeafOne": {
      "description": "Description not available",
      "type": "string"
     },
     "testMacAddress": {
      "description": "Description not available",
      "type": "string"
     },
     "testMidOne": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "testPlaceHolder1Secret": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "testRootOne": {
      "description": "Description not available",
      "type": "string"
     },
     "testRootTwo": {
      "description": "Description not available",
      "type": "string"
     },
     "type": {
      "$ref": "#/components/schemas/schemaPathSchemaType"
     },
     "typeMemoryUsage": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "underlayInfo": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "unknownVlan": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "unknownVlanPort": {
      "description": "Description not available",
      "type": "string"
     },
     "unpackAndAssembleTask": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "userEmail": {
      "description": "Description not available",
      "type": "string"
     },
     "userEula": {
      "description": "Description not available",
      "type": "string"
     },
     "userPreferenceItem": {
      "description": "Description not available",
      "type": "string"
     },
     "vlanCounters": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vlanState": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vlanVniMap": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vniPort": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vrf": {
      "description": "Description not available",
      "type": "string"
     },
     "vtep": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaPathSchemaType": {
    "default": "SyncCursorType",
    "description": "SchemaType defines an enumeration of the types of messages or informational objects.",
    "enum": [
     "SyncCursorType",
     "AsyncCursorType",
     "DeleteCursorType",
     "FabricType",
     "DeviceType",
     "FanType",
     "PsuType",
     "TempSensorType",
     "LineCardType",
     "PortType",
     "DacQsfpType",
     "FiberQsfpType",
     "BreakoutType",
     "PortNeighborType",
     "VtepType",
     "VniPortType",
     "MacType",
     "ProcTableType",
     "PortVlanType",
     "VlanStateType",
     "QsfpDomSensorType",
     "PortConfigType",
     "NodeConfigType",
     "FabricConfigType",
     "FabricConfigEventType",
     "L2FdbType",
     "PortCountersType",
     "RemedyActionType",
     "QsfpInfoType",
     "FabricDeviceType",
     "AssertConfigPortLinkUpType",
     "AssertPortLinkUpType",
     "AssertConfigDeviceConnectedToCloudType",
     "AssertDeviceConnectedToCloudType",
     "AssertConfigPortExpectedNeighborType",
     "AssertPortExpectedNeighborType",
     "AssertConfigPortNotConnectedToFabricType",
     "AssertPortNotConnectedToFabricType",
     "AssertConfigDeviceConnectedToFabricType",
     "AssertDeviceConnectedToFabricType",
     "AssertConfigPortLinkDownType",
     "AssertPortLinkDownType",
     "AssertConfigPortConnectionSpeedMatchType",
     "AssertPortConnectionSpeedMatchType",
     "AssertConfigPortSpeedConsistentType",
     "AssertPortSpeedConsistentType",
     "AllAssertTypes",
     "UnderlayInfoType",
     "ProxyStatsType",
     "VlanCountersType",
     "TestPlaceHolder1SecretType",
     "AssertConfigVlanHasTrafficType",
     "AssertVlanHasTrafficType",
     "RemoteVtepType",
     "QsfpDomThresholdType",
     "L3TableType",
     "VlanVniMapType",
     "ProxyConnectionStateType",
     "ProxyConnectionStatsType",
     "L2MacType",
     "BmcType",
     "IpRouteTableType",
     "VrfType",
     "IpNextHopType",
     "IpPrefixType",
     "SubInterfaceType",
     "AssertConfigStaticDefaultRouteExistsType",
     "AssertStaticDefaultRouteExistsType",
     "SpyglassBrokerEntryType",
     "ManagementStateType",
     "AllDeviceAssertTypes",
     "AllPortAssertTypes",
     "AssertConfigManagementPortConfigSameType",
     "AssertManagementPortConfigSameType",
     "FabricConfigNotificationType",
     "SpyglassGingerEntryType",
     "PlannedConfigType",
     "RoutedInterfaceCountersType",
     "IpmRawLatencyCountersType",
     "IpmProcLatencyCountersType",
     "IpmProcLossCountersType",
     "IpmLivenessCountersType",
     "IpmSessionIdType",
     "IpmProcJitterCountersType",
     "SystemStatsType",
     "TestRootOneType",
     "TestRootTwoType",
     "TestMidOneType",
     "TestMidTwoType",
     "TestLeafOneType",
     "TestLeafTwoType",
     "TestIpAddressType",
     "TestIpPrefixType",
     "TestMacAddressType",
     "AssertConfigDeviceResourceUsageBelowThresholdType",
     "AssertDeviceResourceUsageBelowThresholdType",
     "FabricTransactionType",
     "BgpNeighborSummaryType",
     "BmcConfigType",
     "DeviceConnectionType",
     "BgpNeighborFamilyType",
     "AssertConfigBgpPeerEstablishedType",
     "AssertBgpPeerEstablishedType",
     "SpyglassSshSessionEntryType",
     "PortChannelMemberStateType",
     "PortChannelStateType",
     "SpyglassDeviceType",
     "SpyglassTcpListenerType",
     "SpyglassTcpSessionType",
     "UnknownVlanType",
     "UnknownVlanPortType",
     "AssertConfigExpectedPortBreakoutExistsType",
     "AssertExpectedPortBreakoutExistsType",
     "AssertConfigSubInterfaceUpType",
     "AssertSubInterfaceUpType",
     "AssertSubInterfaceDownType",
     "AssertConfigSubInterfaceDownType",
     "AllSubInterfaceAssertTypes",
     "DeviceClaimType",
     "AggregatedDeviceClaimType",
     "AssertPortChannelMemberUpType",
     "AssertConfigPortChannelMemberUpType",
     "EsiInfoType",
     "EsiVtepInfoType",
     "AssertPortVlanStpStateConsistentType",
     "AssertConfigPortVlanStpStateConsistentType",
     "AssertPortPluggablePidSameType",
     "AssertConfigPortPluggablePidSameType",
     "ManifestImageStateType",
     "PortRateCountersType",
     "OrgUuidType",
     "FabricUuidType",
     "ApiPathType",
     "ApiPathMethodType",
     "ApiServiceMappingType",
     "OrgToCellPairMappingType",
     "TenantUuidType",
     "UserEmailType",
     "ManagementConfigType",
     "ServiceInstanceHealthType",
     "AssignmentStatusType",
     "KubernetesServiceInstanceType",
     "BearerTokenType",
     "ApiKeyType",
     "FabricMemoryUsageType",
     "TypeMemoryUsageType",
     "ManifestRunningImageStatusType",
     "ManifestPartitionFileCacheStatusType",
     "StpPortStateType",
     "StpVlanStateType",
     "StpVlanPortStateType",
     "AssertDeviceEnvPsuUsageBelowThresholdType",
     "AssertConfigDeviceEnvPsuUsageBelowThresholdType",
     "AllSmartHandsTypes",
     "UnpackAndAssembleTaskType",
     "ClaimAndBindTaskType",
     "PortSetupTaskType",
     "FabricConnectionTaskType",
     "NegativeConnectionTaskType",
     "ApplicationType",
     "ResourceAssignmentType",
     "NodeType",
     "NodeLineCardType",
     "NodePortType",
     "NodeBreakoutType",
     "TenantMetadataType",
     "AssertPortNoUnknownVlanFoundType",
     "AssertConfigPortNoUnknownVlanFoundType",
     "BulkUpliftJobRequestType",
     "BulkUpliftJobStatusType",
     "BgpNeighborInfoType",
     "RefPointType",
     "RefPointStatusType",
     "UserPreferenceItemType",
     "BgpNeighborReceivedRouteType",
     "UserEulaType",
     "BrigSymmetricSigningKeyType",
     "FirmwareVersionType",
     "ServerIpRouteAddressType",
     "ServerIpRouteTableType",
     "ApiPathProtocolType",
     "ServerPsuType",
     "ServerTempSensorType",
     "LoadBalancedSvcRouteType",
     "AssignmentSvcRouteType",
     "DbTableUpdateNotificationType",
     "AssertDeviceFanSpeedBelowThresholdType",
     "AssertConfigDeviceFanSpeedBelowThresholdType",
     "AssertDeviceTemperatureBelowThresholdType",
     "AssertConfigDeviceTemperatureBelowThresholdType",
     "ActiveWorkerType",
     "ServerFanType",
     "ServerPortInfoType"
    ],
    "type": "string"
   },
   "schemaPlannedConfig": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "plannedConfig": {
      "$ref": "#/components/schemas/schemaPlannedConfigData"
     }
    },
    "type": "object"
   },
   "schemaPlannedConfigData": {
    "description": "Description not available",
    "properties": {
     "currentConfigFp": {
      "description": "Description not available",
      "type": "string"
     },
     "plannedConfigFp": {
      "description": "Description not available",
      "type": "string"
     },
     "plannedConfigPhase": {
      "$ref": "#/components/schemas/schemaPlannedConfigPhase"
     },
     "plannedConfigUpdatedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaPlannedConfigPhase": {
    "default": "CONFIG_PHASE_ACK",
    "description": "Description not available",
    "enum": [
     "CONFIG_PHASE_ACK",
     "CONFIG_PHASE_RECEIVING",
     "CONFIG_PHASE_APPLYING",
     "CONFIG_PHASE_COMPLETED"
    ],
    "type": "string"
   },
   "schemaPort": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaPortBreakoutConfig": {
    "description": "Description not available",
    "properties": {
     "media": {
      "$ref": "#/components/schemas/modelsCableType"
     },
     "name": {
      "description": "Description not available",
      "type": "string"
     },
     "speed": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaPortChannelKernelTeamMode": {
    "default": "LOAD_BALANCE",
    "description": "Description not available",
    "enum": [
     "LOAD_BALANCE",
     "ROUND_ROBIN"
    ],
    "type": "string"
   },
   "schemaPortChannelMemberInfoState": {
    "default": "DISABLED",
    "description": "Description not available",
    "enum": [
     "DISABLED",
     "CURRENT",
     "EXPIRED",
     "DEFAULTED"
    ],
    "type": "string"
   },
   "schemaPortChannelMemberState": {
    "description": "Description not available",
    "properties": {
     "actorLacpduInfoPort": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "actorLacpduInfoState": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "actorLacpduInfoSystem": {
      "description": "Description not available",
      "type": "string"
     },
     "aggregatorId": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "aggregatorSelected": {
      "description": "Description not available",
      "type": "boolean"
     },
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "devAddr": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "ifIndex": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "lacpStatus": {
      "description": "Description not available",
      "type": "boolean"
     },
     "linkUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "linkWatchUp": {
      "description": "Description not available",
      "type": "boolean"
     },
     "memberInterfaceName": {
      "description": "Description not available",
      "type": "string"
     },
     "name": {
      "description": "Description not available",
      "type": "string"
     },
     "partnerLacpduInfoPort": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "partnerLacpduInfoState": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "partnerLacpduInfoSystem": {
      "description": "Description not available",
      "type": "string"
     },
     "protocol": {
      "$ref": "#/components/schemas/schemaPortChannelProtocol"
     },
     "selected": {
      "description": "Description not available",
      "type": "boolean"
     },
     "state": {
      "$ref": "#/components/schemas/schemaPortChannelMemberInfoState"
     }
    },
    "type": "object"
   },
   "schemaPortChannelProtocol": {
    "default": "LACP",
    "description": "Description not available",
    "enum": [
     "LACP"
    ],
    "type": "string"
   },
   "schemaPortChannelState": {
    "description": "Description not available",
    "properties": {
     "adminStatus": {
      "$ref": "#/components/schemas/modelsOperState"
     },
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "mtu": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "name": {
      "description": "Description not available",
      "type": "string"
     },
     "operStatus": {
      "$ref": "#/components/schemas/modelsOperState"
     },
     "protocol": {
      "$ref": "#/components/schemas/schemaPortChannelProtocol"
     },
     "runnerActive": {
      "description": "Description not available",
      "type": "boolean"
     },
     "runnerFallback": {
      "description": "Description not available",
      "type": "boolean"
     },
     "runnerFastRate": {
      "description": "Description not available",
      "type": "boolean"
     },
     "setupKernelTeamModeName": {
      "$ref": "#/components/schemas/schemaPortChannelKernelTeamMode"
     },
     "setupPid": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "state": {
      "$ref": "#/components/schemas/schemaPortChannelStatus"
     },
     "teamDeviceIfInfoDevAddr": {
      "description": "Description not available",
      "type": "string"
     },
     "teamDeviceIfInfoIfIndex": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaPortChannelStatus": {
    "default": "PORT_CHANNEL_STATUS_OK",
    "description": "Description not available",
    "enum": [
     "PORT_CHANNEL_STATUS_OK",
     "PORT_CHANNEL_STATUS_NOT_OK",
     "PORT_CHANNEL_STATUS_UP",
     "PORT_CHANNEL_STATUS_DOWN"
    ],
    "type": "string"
   },
   "schemaPortConfig": {
    "description": "Description not available",
    "properties": {
     "config": {
      "$ref": "#/components/schemas/schemaPortConfigDetails"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaPortConfigDetails": {
    "description": "Description not available",
    "properties": {
     "adminState": {
      "$ref": "#/components/schemas/modelsAdminState"
     },
     "breakOut": {
      "description": "Description not available",
      "type": "boolean"
     },
     "deviceId": {
      "description": "Description not available",
      "type": "string"
     },
     "modifiedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "mtu": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "portIndex": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "portName": {
      "description": "Description not available",
      "type": "string"
     },
     "portRole": {
      "$ref": "#/components/schemas/modelsPortRole"
     },
     "targetDeviceId": {
      "description": "Description not available",
      "type": "string"
     },
     "targetPortName": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaPortCounters": {
    "description": "Description not available",
    "properties": {
     "carrierTransitions": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "inBitsps": {
      "description": "bytes per second",
      "format": "float",
      "type": "number"
     },
     "inBroadcastPkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "inDiscards": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "inErrors": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "inFcsErrors": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "inMulticastPkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "inOctets": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "inPfc0Pkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "inPfc1Pkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "inPfc2Pkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "inPfc3Pkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "inPfc4Pkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "inPfc5Pkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "inPfc6Pkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "inPfc7Pkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "inPfcPps": {
      "description": "Aggregate packets per second over all PFC counters",
      "format": "float",
      "type": "number"
     },
     "inPkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "inPps": {
      "description": "packets per second",
      "format": "float",
      "type": "number"
     },
     "inUnicastPkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "inUnicastPps": {
      "description": "unicast packets per second",
      "format": "float",
      "type": "number"
     },
     "inUnknownProtos": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "lastClear": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "outBitsps": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "outBroadcastPkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "outDiscards": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "outErrors": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "outMulticastPkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "outOctets": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "outPfc0Pkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "outPfc1Pkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "outPfc2Pkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "outPfc3Pkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "outPfc4Pkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "outPfc5Pkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "outPfc6Pkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "outPfc7Pkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "outPfcPps": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "outPkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "outPps": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "outUnicastPkts": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "outUnicastPps": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "portAlias": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaPortNeighbor": {
    "description": "PortNeighbor encapsulates the state of the remote side of a port's link.",
    "properties": {
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "deprecatedRemoteSysCap": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaRemoteSysCapability"
      },
      "type": "array"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "localPort": {
      "description": "Description not available",
      "type": "string"
     },
     "meType": {
      "$ref": "#/components/schemas/modelsManagedEndpointType"
     },
     "neighborType": {
      "$ref": "#/components/schemas/schemaNeighborType"
     },
     "portAlias": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteDeviceId": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteDeviceIdSubtype": {
      "$ref": "#/components/schemas/schemaLLDPRemoteDeviceHostSubType"
     },
     "remoteIndex": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "remoteManagementAddrIpv4": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteManagementAddrIpv6": {
      "description": "Description not available",
      "type": "string"
     },
     "remotePortAutoNegotiation": {
      "$ref": "#/components/schemas/schemaRemotePortAutoNegotiation"
     },
     "remotePortDesc": {
      "description": "Description not available",
      "type": "string"
     },
     "remotePortId": {
      "description": "Description not available",
      "type": "string"
     },
     "remotePortIdSubtype": {
      "$ref": "#/components/schemas/schemaLLDPRemoteDeviceHostSubType"
     },
     "remotePortTtl": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "remoteSysCapabilityBridge": {
      "description": "Description not available",
      "type": "boolean"
     },
     "remoteSysCapabilityDocsisCableDevice": {
      "description": "Description not available",
      "type": "boolean"
     },
     "remoteSysCapabilityRepeater": {
      "description": "Description not available",
      "type": "boolean"
     },
     "remoteSysCapabilityRouter": {
      "description": "Description not available",
      "type": "boolean"
     },
     "remoteSysCapabilityStation": {
      "description": "Description not available",
      "type": "boolean"
     },
     "remoteSysCapabilityTelephone": {
      "description": "Description not available",
      "type": "boolean"
     },
     "remoteSysCapabilityWlan": {
      "description": "Description not available",
      "type": "boolean"
     },
     "remoteSysDescription": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteSysName": {
      "description": "Description not available",
      "type": "string"
     },
     "remoteTimeMark": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "serverInfo": {
      "$ref": "#/components/schemas/schemaManagedEndpointServerInfo"
     }
    },
    "type": "object"
   },
   "schemaPortPluggableDetails": {
    "description": "Description not available",
    "properties": {
     "pid": {
      "description": "Description not available",
      "type": "string"
     },
     "portType": {
      "$ref": "#/components/schemas/schemaNeighborType"
     }
    },
    "type": "object"
   },
   "schemaPortRateCounters": {
    "description": "Description not available",
    "properties": {
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "portName": {
      "description": "Description not available",
      "type": "string"
     },
     "rxBps": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxPps": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "saiPortStatIfInNonUcastPktsLast": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "saiPortStatIfInOctetsLast": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "saiPortStatIfInUcastPktsLast": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "saiPortStatIfOutNonUcastPktsLast": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "saiPortStatIfOutOctetsLast": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "saiPortStatIfOutUcastPktsLast": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "txBps": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "txPps": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     }
    },
    "type": "object"
   },
   "schemaPortSetupTask": {
    "description": "PortSetupTask is a task to setup and connect a port to the network This task is monitored, we will check the port is correctly setup by checking the state held for this device",
    "properties": {
     "common": {
      "$ref": "#/components/schemas/schemaSmartHandsCommonTask"
     },
     "correctPid": {
      "$ref": "#/components/schemas/schemaSmartHandsCompletionStatus"
     },
     "fromPort": {
      "$ref": "#/components/schemas/schemaSmartHandsPort"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "requiredPid": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaPortState": {
    "description": "Description not available",
    "properties": {
     "adminDownCounter": {
      "description": "Incremented whenever admin state goes ENABLED -\u003e DISABLED",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "adminState": {
      "$ref": "#/components/schemas/modelsAdminState"
     },
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "fec": {
      "$ref": "#/components/schemas/schemaFecType"
     },
     "ipv4": {
      "description": "Description not available",
      "type": "string"
     },
     "mtu": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "operDownCounter": {
      "description": "Incremented whenever operational state goes ENABLED -\u003e DISABLED",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "operState": {
      "$ref": "#/components/schemas/modelsOperState"
     },
     "portAlias": {
      "description": "Description not available",
      "type": "string"
     },
     "speed": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaPortVlan": {
    "description": "Description not available",
    "properties": {
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "deprecatedUntagged": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "taggingMode": {
      "$ref": "#/components/schemas/schemaVlanTaggingMode"
     },
     "vlan": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaPowerStateEnum": {
    "default": "POWER_STATE_ON",
    "description": "Description not available",
    "enum": [
     "POWER_STATE_ON",
     "POWER_STATE_OFF",
     "POWER_STATE_POWERING_ON",
     "POWER_STATE_POWERING_OFF",
     "POWER_STATE_PAUSED"
    ],
    "type": "string"
   },
   "schemaProcTable": {
    "description": "Description not available",
    "properties": {
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "processes": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaProcess"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "schemaProcess": {
    "description": "Description not available",
    "properties": {
     "cmd": {
      "description": "Description not available",
      "type": "string"
     },
     "cpuPercent": {
      "description": "FIXME: we should probably report CPU in CPU core units rather than percent",
      "format": "float",
      "type": "number"
     },
     "cpuTimeS": {
      "description": "CPU time in seconds",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "memPercent": {
      "description": "FIXME: we should report memory in MB",
      "format": "float",
      "type": "number"
     }
    },
    "type": "object"
   },
   "schemaProtocolType": {
    "default": "SYSTEM",
    "description": "Description not available",
    "enum": [
     "SYSTEM",
     "KERNEL",
     "DIRECTLY_CONNECTED",
     "STATIC",
     "RIP",
     "RIPNG",
     "OSFP",
     "OSFP6",
     "ISIS",
     "BGP",
     "PIM",
     "HSLS",
     "OLSR",
     "BABEL"
    ],
    "type": "string"
   },
   "schemaProxyAuthState": {
    "default": "CLOUD_AUTH_IN_PROGRESS",
    "description": "Description not available",
    "enum": [
     "CLOUD_AUTH_IN_PROGRESS",
     "CLOUD_AUTH_DONE",
     "CLOUD_AUTH_FAILED",
     "CLOUD_AUTH_NONE"
    ],
    "type": "string"
   },
   "schemaProxyConfig": {
    "description": "Description not available",
    "properties": {
     "httpProxy": {
      "description": "Description not available",
      "type": "string"
     },
     "httpsProxy": {
      "description": "Description not available",
      "type": "string"
     },
     "noProxy": {
      "description": "Description not available",
      "type": "string"
     },
     "pass": {
      "description": "Description not available",
      "type": "string"
     },
     "user": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaProxyConnectionState": {
    "description": "Description not available",
    "properties": {
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "destIp": {
      "description": "Description not available",
      "type": "string"
     },
     "destPort": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "fabricPath": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "initiatedAt": {
      "description": "Session initiation time",
      "format": "date-time",
      "type": "string"
     },
     "innerTlsConnectionState": {
      "$ref": "#/components/schemas/schemaTlsConnectionState"
     },
     "innerTlsErr": {
      "description": "Description not available",
      "type": "string"
     },
     "outerTlsConnectionState": {
      "$ref": "#/components/schemas/schemaTlsConnectionState"
     },
     "outerTlsErr": {
      "description": "An error string used for internal debugging",
      "type": "string"
     },
     "outerTlsIntermediateCerts": {
      "description": "Description not available",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "outerTlsLeafCert": {
      "description": "All certificates are base64 encoded DER certificates",
      "type": "string"
     },
     "outerTlsRootCerts": {
      "description": "Description not available",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "outerTlsSessionState": {
      "$ref": "#/components/schemas/schemaTlsSessionState"
     },
     "outerTlsVerifyErr": {
      "$ref": "#/components/schemas/schemaTLSVerifyError"
     },
     "outerTlsVerifyErrString": {
      "description": "Description not available",
      "type": "string"
     },
     "proxyUrl": {
      "description": "Description not available",
      "type": "string"
     },
     "source": {
      "description": "Description not available",
      "type": "string"
     },
     "sourceIp": {
      "description": "Description not available",
      "type": "string"
     },
     "sourcePort": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaProxyConnectionStats": {
    "description": "Description not available",
    "properties": {
     "bytesIn": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "bytesOut": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "inBitsps": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "outBitsps": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     }
    },
    "type": "object"
   },
   "schemaProxySessionInfo": {
    "description": "Description not available",
    "properties": {
     "certChain": {
      "description": "TODO: document the cert format",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "initiatedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "proxyAuthState": {
      "$ref": "#/components/schemas/schemaProxyAuthState"
     },
     "validUntil": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaProxyStats": {
    "description": "ProxyStats contains useful debug information we can use to examine network issues between Drakes and the cloud. For now, this should not be user-facing.",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "maxRtt": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "meanRtt": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "medianRtt": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "minRtt": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "reqCount": {
      "description": "TLS stats only for now",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "reqErrors": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "respCount": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "respErrors": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaPsu": {
    "description": "A PSU represents an hardware power supply unit of a Device.",
    "properties": {
     "current": {
      "description": "The input current of the PSU in amperes (A).",
      "format": "float",
      "type": "number"
     },
     "fanSpeed": {
      "description": "The fan speed as a percentage of the maximum rated speed",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "ledStatus": {
      "$ref": "#/components/schemas/schemaEnvLedStatus"
     },
     "model": {
      "description": "The model name of the PSU.",
      "type": "string"
     },
     "name": {
      "description": "The name of the PSU.",
      "type": "string"
     },
     "serial": {
      "description": "The serial number of the PSU.",
      "type": "string"
     },
     "status": {
      "$ref": "#/components/schemas/schemaEnvStatus"
     },
     "voltage": {
      "description": "The input voltage of the PSU in volts (V).",
      "format": "float",
      "type": "number"
     },
     "watts": {
      "description": "The power usage of the PSU.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaQsfpAdvertisedAutoNegotiation": {
    "default": "QSFP_ADVERTISED_AUTO_NEGOTIATION_YES",
    "description": "Description not available",
    "enum": [
     "QSFP_ADVERTISED_AUTO_NEGOTIATION_YES",
     "QSFP_ADVERTISED_AUTO_NEGOTIATION_NO"
    ],
    "type": "string"
   },
   "schemaQsfpAutoNegotiation": {
    "default": "QSFP_AUTO_NEGOTIATION_ON",
    "description": "Description not available",
    "enum": [
     "QSFP_AUTO_NEGOTIATION_ON",
     "QSFP_AUTO_NEGOTIATION_OFF"
    ],
    "type": "string"
   },
   "schemaQsfpDomSensor": {
    "description": "Description not available",
    "properties": {
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "laserTemperature": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "mediaLaneCount": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "rx1power": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rx2power": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rx3power": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rx4power": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rx5power": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rx6power": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rx7power": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rx8power": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "temperature": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "tx1bias": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "tx1power": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "tx2bias": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "tx2power": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "tx3bias": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "tx3power": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "tx4bias": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "tx4power": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "tx5bias": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "tx5power": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "tx6bias": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "tx6power": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "tx7bias": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "tx7power": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "tx8bias": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "tx8power": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "voltage": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     }
    },
    "type": "object"
   },
   "schemaQsfpDomThreshold": {
    "description": "Description not available",
    "properties": {
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "lasertemphighalarm": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "lasertemphighwarning": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "lasertemplowalarm": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "lasertemplowwarning": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxpowerhighalarm": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxpowerhighwarning": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxpowerlowalarm": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rxpowerlowwarning": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "temphighalarm": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "temphighwarning": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "templowalarm": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "templowwarning": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "txbiashighalarm": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "txbiashighwarning": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "txbiaslowalarm": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "txbiaslowwarning": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "txpowerhighalarm": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "txpowerhighwarning": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "txpowerlowalarm": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "txpowerlowwarning": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "vcchighalarm": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "vcchighwarning": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "vcclowalarm": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "vcclowwarning": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     }
    },
    "type": "object"
   },
   "schemaQsfpDupex": {
    "default": "FULL",
    "description": "Description not available",
    "enum": [
     "FULL",
     "HALF"
    ],
    "type": "string"
   },
   "schemaQsfpInfo": {
    "description": "Description not available",
    "properties": {
     "activeApselHostlane1": {
      "description": "Description not available",
      "type": "boolean"
     },
     "activeApselHostlane2": {
      "description": "Description not available",
      "type": "boolean"
     },
     "activeApselHostlane3": {
      "description": "Description not available",
      "type": "boolean"
     },
     "activeApselHostlane4": {
      "description": "Description not available",
      "type": "boolean"
     },
     "activeApselHostlane5": {
      "description": "Description not available",
      "type": "boolean"
     },
     "activeApselHostlane6": {
      "description": "Description not available",
      "type": "boolean"
     },
     "activeApselHostlane7": {
      "description": "Description not available",
      "type": "boolean"
     },
     "activeApselHostlane8": {
      "description": "Description not available",
      "type": "boolean"
     },
     "activeFirmware": {
      "description": "Description not available",
      "type": "string"
     },
     "advertisedAutoNegotiation": {
      "$ref": "#/components/schemas/schemaQsfpAdvertisedAutoNegotiation"
     },
     "advertisedFec": {
      "$ref": "#/components/schemas/schemaFecType"
     },
     "advertisedPauseFrameUse": {
      "description": "Description not available",
      "type": "string"
     },
     "applicationAdvertisement": {
      "description": "This will likely be truncated but that is fine.",
      "type": "string"
     },
     "autoNegotiation": {
      "$ref": "#/components/schemas/schemaQsfpAutoNegotiation"
     },
     "cableLength": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "cableType": {
      "description": "Description not available",
      "type": "string"
     },
     "cmisRev": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "connector": {
      "description": "Description not available",
      "type": "string"
     },
     "domCapability": {
      "description": "Description not available",
      "type": "string"
     },
     "duplex": {
      "$ref": "#/components/schemas/schemaQsfpDupex"
     },
     "encoding": {
      "description": "Description not available",
      "type": "string"
     },
     "extIdentifier": {
      "description": "Description not available",
      "type": "string"
     },
     "extRateselectCompliance": {
      "description": "Description not available",
      "type": "string"
     },
     "hardwareRev": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "hostElectricalInterface": {
      "description": "Description not available",
      "type": "string"
     },
     "hostLaneAssignmentOption": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "hostLaneCount": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "inactiveFirmware": {
      "description": "Description not available",
      "type": "string"
     },
     "interfaceName": {
      "description": "Description not available",
      "type": "string"
     },
     "isReplaceable": {
      "description": "Description not available",
      "type": "boolean"
     },
     "lot": {
      "description": "Description not available",
      "type": "string"
     },
     "manufacturer": {
      "description": "Description not available",
      "type": "string"
     },
     "mediaInterfaceCode": {
      "description": "Description not available",
      "type": "string"
     },
     "mediaInterfaceTechnology": {
      "description": "Description not available",
      "type": "string"
     },
     "mediaLaneAssignmentOption": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "mediaLaneCount": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "model": {
      "description": "Description not available",
      "type": "string"
     },
     "neighborType": {
      "$ref": "#/components/schemas/schemaNeighborType"
     },
     "nominalBitRate": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "phyAd": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "pid": {
      "description": "Description not available",
      "type": "string"
     },
     "portAlias": {
      "description": "Description not available",
      "type": "string"
     },
     "serial": {
      "description": "Description not available",
      "type": "string"
     },
     "specificationCompliance": {
      "description": "Description not available",
      "type": "string"
     },
     "supportedMaxLaserFreq": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "supportedMaxTxPower": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "supportedMinLaserFreq": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "supportedMinTxPower": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "transceiver": {
      "$ref": "#/components/schemas/schemaQsfpTransceiver"
     },
     "transceiverModule": {
      "$ref": "#/components/schemas/schemaQsfpTransceiverModule"
     },
     "type": {
      "description": "Description not available",
      "type": "string"
     },
     "vendorDate": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "vendorOui": {
      "description": "Description not available",
      "type": "string"
     },
     "vendorRev": {
      "description": "Description not available",
      "type": "string"
     },
     "wakeOn": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaQsfpTransceiver": {
    "default": "QSFP_TRANSCEIVER_INTERNAL",
    "description": "Description not available",
    "enum": [
     "QSFP_TRANSCEIVER_INTERNAL",
     "QSFP_TRANSCEIVER_EXTERNAL"
    ],
    "type": "string"
   },
   "schemaQsfpTransceiverModule": {
    "default": "COPPER",
    "description": "Description not available",
    "enum": [
     "COPPER",
     "FIBER",
     "FIBER_400GBASE_DR4",
     "FIBER_400GBASE_FR4",
     "FIBER_400GBASE_SR8",
     "FIBER_400GBASE_LR8"
    ],
    "type": "string"
   },
   "schemaRefPoint": {
    "description": "Description not available",
    "properties": {
     "createCompleted": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "createJobState": {
      "$ref": "#/components/schemas/schemaRefPointJobState"
     },
     "created": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "deviceIds": {
      "description": "Description not available",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "diffAgainstTime": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "diffJobState": {
      "$ref": "#/components/schemas/schemaRefPointJobState"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "name": {
      "description": "Description not available",
      "type": "string"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaRefPointJobState": {
    "default": "REF_POINT_JOB_NOT_REQUESTED",
    "description": "Enum for the state of a reference point job Ordering is important - later states are bigger",
    "enum": [
     "REF_POINT_JOB_NOT_REQUESTED",
     "REF_POINT_JOB_QUEUED",
     "REF_POINT_JOB_PROCESSING",
     "REF_POINT_JOB_READY",
     "REF_POINT_JOB_FAILED"
    ],
    "type": "string"
   },
   "schemaRefPointJobType": {
    "default": "REF_POINT_JOB_TYPE_CREATE",
    "description": "Description not available",
    "enum": [
     "REF_POINT_JOB_TYPE_CREATE",
     "REF_POINT_JOB_TYPE_DIFF"
    ],
    "type": "string"
   },
   "schemaRefPointStatus": {
    "description": "Description not available",
    "properties": {
     "completedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "jobState": {
      "$ref": "#/components/schemas/schemaRefPointJobState"
     },
     "jobType": {
      "$ref": "#/components/schemas/schemaRefPointJobType"
     }
    },
    "type": "object"
   },
   "schemaRemedyAction": {
    "description": "Description not available",
    "properties": {
     "actionType": {
      "$ref": "#/components/schemas/schemaRemedyActionCode"
     },
     "addConnection": {
      "$ref": "#/components/schemas/schemaRemedyActionAddMissingConnection"
     },
     "fixConnection": {
      "$ref": "#/components/schemas/schemaRemedyActionFixConnection"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "relatedAsserts": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaPathPathId"
      },
      "type": "array"
     },
     "removeConnection": {
      "$ref": "#/components/schemas/schemaRemedyActionRemoveUnexpectedConnection"
     }
    },
    "type": "object"
   },
   "schemaRemedyActionAddMissingConnection": {
    "description": "Description not available",
    "properties": {
     "connectFrom": {
      "description": "Description not available",
      "type": "string"
     },
     "connectTo": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaRemedyActionCode": {
    "default": "FIX_CONNECTION",
    "description": "Description not available",
    "enum": [
     "FIX_CONNECTION",
     "ADD_MISSING_CONNECTION",
     "REMOVE_UNEXPECTED_CONNECTION"
    ],
    "type": "string"
   },
   "schemaRemedyActionFixConnection": {
    "description": "Description not available",
    "properties": {
     "connectFrom": {
      "description": "Description not available",
      "type": "string"
     },
     "connectTo": {
      "description": "Description not available",
      "type": "string"
     },
     "moveFrom": {
      "description": "Description not available",
      "type": "string"
     },
     "moveTo": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaRemedyActionRemoveUnexpectedConnection": {
    "description": "Description not available",
    "properties": {
     "disconnectFrom": {
      "description": "Description not available",
      "type": "string"
     },
     "disconnectTo": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaRemotePortAutoNegotiation": {
    "description": "Description not available",
    "properties": {
     "advertised": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAdvertisedAutoNegotiation"
      },
      "type": "array"
     },
     "current": {
      "description": "Description not available",
      "type": "string"
     },
     "enabled": {
      "description": "Description not available",
      "type": "boolean"
     },
     "supported": {
      "description": "Description not available",
      "type": "boolean"
     }
    },
    "type": "object"
   },
   "schemaRemoteSysCapability": {
    "description": "DEPRECATED",
    "properties": {
     "enabled": {
      "description": "Description not available",
      "type": "boolean"
     },
     "sysCapability": {
      "$ref": "#/components/schemas/schemaLLDPSysCapabilityType"
     }
    },
    "type": "object"
   },
   "schemaRemoteVtep": {
    "description": "Description not available",
    "properties": {
     "bytesIn": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "bytesOut": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "pktsIn": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "pktsOut": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaResourceAssignment": {
    "description": "Description not available",
    "properties": {
     "active": {
      "description": "Description not available",
      "type": "string"
     },
     "activeDemote": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "resourceType": {
      "$ref": "#/components/schemas/schemaResourceType"
     },
     "revision": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "sourceUrl": {
      "description": "Description not available",
      "type": "string"
     },
     "standby": {
      "description": "list of UUIDS",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "standbyPromote": {
      "description": "Description not available",
      "type": "string"
     },
     "updatedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaResourceType": {
    "default": "RESOURCE_TYPE_FABRIC",
    "description": "Description not available",
    "enum": [
     "RESOURCE_TYPE_FABRIC",
     "RESOURCE_TYPE_ORG"
    ],
    "type": "string"
   },
   "schemaRoutedInterfaceCounters": {
    "description": "Description not available",
    "properties": {
     "bytesIn": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "bytesOut": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "errIn": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "errOut": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "errPktsIn": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "errPktsOut": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "pktsIn": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "pktsOut": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaRoutingPolicy": {
    "default": "ROUTING_POLICY_LOAD_BALANCED",
    "description": "Description not available",
    "enum": [
     "ROUTING_POLICY_LOAD_BALANCED",
     "ROUTING_POLICY_ASSIGNMENT"
    ],
    "type": "string"
   },
   "schemaServerBmcPreAuthInfo": {
    "description": "ServerBmcMinimalHardwareInfo On BMC's with Redfish this information is available pre-authorization from the resource Service Root /redfish/v1",
    "properties": {
     "id": {
      "description": "Description not available",
      "type": "string"
     },
     "product": {
      "description": "Description not available",
      "type": "string"
     },
     "vendor": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaServerCertificate": {
    "description": "Description not available",
    "properties": {
     "certString": {
      "description": "This is big, not going to uplift this for now unless there is a need",
      "type": "string"
     },
     "certType": {
      "description": "Description not available",
      "type": "string"
     },
     "description": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "description": "Description not available",
      "type": "string"
     },
     "issuer": {
      "$ref": "#/components/schemas/schemaServerCertificateIssuerOrSubject"
     },
     "name": {
      "description": "Description not available",
      "type": "string"
     },
     "serialNumber": {
      "description": "Description not available",
      "type": "string"
     },
     "subject": {
      "$ref": "#/components/schemas/schemaServerCertificateIssuerOrSubject"
     },
     "validNotAfter": {
      "description": "Description not available",
      "type": "string"
     },
     "validNotBefore": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaServerCertificateIssuerOrSubject": {
    "description": "Description not available",
    "properties": {
     "city": {
      "description": "Description not available",
      "type": "string"
     },
     "commonName": {
      "description": "Description not available",
      "type": "string"
     },
     "country": {
      "description": "Description not available",
      "type": "string"
     },
     "organization": {
      "description": "Description not available",
      "type": "string"
     },
     "organizationUnit": {
      "description": "Description not available",
      "type": "string"
     },
     "state": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaServerEthernetInterface": {
    "description": "Description not available",
    "properties": {
     "description": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "description": "Description not available",
      "type": "string"
     },
     "ipv4Addresses": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaServerIpv4Address"
      },
      "type": "array"
     },
     "ipv6Addresses": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaServerIPv6Address"
      },
      "type": "array"
     },
     "macAddress": {
      "description": "Description not available",
      "type": "string"
     },
     "mtu": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "name": {
      "description": "Description not available",
      "type": "string"
     },
     "nameServers": {
      "description": "Description not available",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "speedMbps": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaServerFan": {
    "description": "Description not available",
    "properties": {
     "collectedAt": {
      "description": "The time the data was last collected in.",
      "format": "date-time",
      "type": "string"
     },
     "fanId": {
      "description": "Internal fan id.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "highCriticalThreshold": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "highThreshold": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "lowCriticalThreshold": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "lowThreshold": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "name": {
      "description": "The name of the Fan.",
      "type": "string"
     },
     "position": {
      "$ref": "#/components/schemas/schemaServerFanPosition"
     },
     "speed": {
      "description": "The Fan speed as rpm.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "status": {
      "$ref": "#/components/schemas/schemaEnvStatus"
     }
    },
    "type": "object"
   },
   "schemaServerFanPosition": {
    "default": "FAN_POSITION_FRONT",
    "description": "Description not available",
    "enum": [
     "FAN_POSITION_FRONT",
     "FAN_POSITION_REAR"
    ],
    "type": "string"
   },
   "schemaServerFirmwareInventoryItem": {
    "description": "Description not available",
    "properties": {
     "description": {
      "description": "Description not available",
      "type": "string"
     },
     "manufacturer": {
      "description": "Description not available",
      "type": "string"
     },
     "name": {
      "description": "Description not available",
      "type": "string"
     },
     "version": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaServerIPv6Address": {
    "description": "Description not available",
    "properties": {
     "addressOrigin": {
      "description": "Description not available",
      "type": "string"
     },
     "ipPrefix": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaServerIpRouteAddress": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaServerIpRouteScope": {
    "default": "SERVER_ROUTE_SCOPE_LINK",
    "description": "Description not available",
    "enum": [
     "SERVER_ROUTE_SCOPE_LINK",
     "SERVER_ROUTE_SCOPE_HOST"
    ],
    "type": "string"
   },
   "schemaServerIpRouteTable": {
    "description": "Description not available",
    "properties": {
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "dst": {
      "description": "Description not available",
      "type": "string"
     },
     "dstMask": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "familyType": {
      "$ref": "#/components/schemas/schemaIpFamilyType"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "interfaceName": {
      "description": "Description not available",
      "type": "string"
     },
     "metric": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "prefSrc": {
      "description": "Description not available",
      "type": "string"
     },
     "protocol": {
      "$ref": "#/components/schemas/schemaProtocolType"
     },
     "scope": {
      "$ref": "#/components/schemas/schemaServerIpRouteScope"
     },
     "type": {
      "$ref": "#/components/schemas/schemaServerIpRouteType"
     }
    },
    "type": "object"
   },
   "schemaServerIpRouteType": {
    "default": "SERVER_ROUTE_TYPE_LOCAL",
    "description": "Description not available",
    "enum": [
     "SERVER_ROUTE_TYPE_LOCAL",
     "SERVER_ROUTE_TYPE_BROADCAST",
     "SEVER_ROUTE_TYPE_MULTICAST"
    ],
    "type": "string"
   },
   "schemaServerIpv4Address": {
    "description": "Description not available",
    "properties": {
     "addressOrigin": {
      "description": "Description not available",
      "type": "string"
     },
     "gateway": {
      "description": "Description not available",
      "type": "string"
     },
     "ipPrefix": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaServerManager": {
    "description": "Description not available",
    "properties": {
     "certificates": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaServerCertificate"
      },
      "type": "array"
     },
     "ethernetInterfaces": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaServerEthernetInterface"
      },
      "type": "array"
     },
     "id": {
      "description": "Description not available",
      "type": "string"
     },
     "managerType": {
      "description": "Description not available",
      "type": "string"
     },
     "name": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaServerPortInfo": {
    "description": "Information about server networking ports accessible from the BMC. This is a subset of information available from the Redfish model on network adaptors and interfaces. The purpose of this information is to provide enough information to the Cloud to be able to diagnose when the server host Drake is not reachable from the leaf switch. This could be due to many reasons:  - Tortuga agent package has not been installed on the server host  - Tortuga agent package is installed but docker has crashed  - Tortuga agents in container are running but there is an issue with Drake",
    "properties": {
     "adaptorId": {
      "description": "redfish.NetworkPort.ID",
      "type": "string"
     },
     "adminState": {
      "$ref": "#/components/schemas/modelsAdminState"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "mac": {
      "description": "redfish.NetworkPort.AssociatedNetworkAddresses[0]",
      "type": "string"
     },
     "name": {
      "description": "Mapping of adaptor_id + port_id to normalized interface name",
      "type": "string"
     },
     "operState": {
      "$ref": "#/components/schemas/modelsOperState"
     },
     "osNativeIfName": {
      "description": "The OS native interface id",
      "type": "string"
     },
     "rfPortName": {
      "description": "redfish.NetworkAdaptor.ID",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaServerPsu": {
    "description": "Description not available",
    "properties": {
     "fanSpeed": {
      "description": "The fan speed as a percentage of the maximum rated speed",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "model": {
      "description": "The model name of the PSU.",
      "type": "string"
     },
     "name": {
      "description": "The name of the PSU.",
      "type": "string"
     },
     "serial": {
      "description": "The serial number of the PSU.",
      "type": "string"
     },
     "status": {
      "$ref": "#/components/schemas/schemaEnvStatus"
     },
     "watts": {
      "description": "The power usage of the PSU.",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaServerSystem": {
    "description": "Description not available",
    "properties": {
     "hostName": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "description": "Description not available",
      "type": "string"
     },
     "manufacturer": {
      "description": "Description not available",
      "type": "string"
     },
     "model": {
      "description": "Description not available",
      "type": "string"
     },
     "name": {
      "description": "Description not available",
      "type": "string"
     },
     "powerState": {
      "$ref": "#/components/schemas/schemaPowerStateEnum"
     },
     "serialNum": {
      "description": "Description not available",
      "type": "string"
     },
     "uuid": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaServerTempSensor": {
    "description": "Description not available",
    "properties": {
     "category": {
      "$ref": "#/components/schemas/schemaTemperatureSensorCategory"
     },
     "degCelsius": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "highCriticalThreshold": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "highThreshold": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "lowCriticalThreshold": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "lowThreshold": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaServiceInstanceHealth": {
    "description": "Description not available",
    "properties": {
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "cpuSystemTime": {
      "description": "Number of seconds of CPU system runtime since process start",
      "format": "double",
      "type": "number"
     },
     "cpuUserTime": {
      "description": "Number of seconds of CPU user runtime since process start",
      "format": "double",
      "type": "number"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "instanceUid": {
      "description": "UUID representing the \"incarnation\" of this instance (e.g. container uuid)",
      "type": "string"
     },
     "memoryFree": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "memoryTotal": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaSmartHandsCommonTask": {
    "description": "SmartHandsCommonTask contains data common to all tasks",
    "properties": {
     "completed": {
      "$ref": "#/components/schemas/schemaSmartHandsCompletionStatus"
     },
     "connectedToCloud": {
      "description": "True if the device is connected to the cloud",
      "type": "boolean"
     },
     "deviceId": {
      "description": "Description not available",
      "type": "string"
     },
     "groupName": {
      "description": "Description not available",
      "type": "string"
     },
     "groupPosition": {
      "description": "1-based index of the overall group position",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "hint": {
      "description": "Short text hint to help if the observed state is not yet correct",
      "type": "string"
     },
     "naturalOrder": {
      "description": "The lexicographic task order within a single category",
      "type": "string"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "order": {
      "description": "The sensible global task order",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "position": {
      "description": "1-based index of the slot. E.g. 1 for Leaf1, 2 for Leaf2, 2 for Spine2",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "role": {
      "$ref": "#/components/schemas/modelsNodeRole"
     },
     "serialNumber": {
      "description": "Description not available",
      "type": "string"
     },
     "worker": {
      "description": "The worker who this task is assigned to",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaSmartHandsCompletionStatus": {
    "default": "COMPLETION_STATUS_UNKNOWN",
    "description": "Description not available",
    "enum": [
     "COMPLETION_STATUS_UNKNOWN",
     "COMPLETION_STATUS_COMPLETE",
     "COMPLETION_STATUS_ERROR"
    ],
    "type": "string"
   },
   "schemaSmartHandsFanTray": {
    "description": "Description not available",
    "properties": {
     "correctPid": {
      "$ref": "#/components/schemas/schemaSmartHandsCompletionStatus"
     },
     "foundPid": {
      "description": "Description not available",
      "type": "string"
     },
     "required": {
      "description": "true if this fan tray is required for this device model",
      "type": "boolean"
     },
     "requiredPid": {
      "description": "Description not available",
      "type": "string"
     },
     "running": {
      "$ref": "#/components/schemas/schemaSmartHandsCompletionStatus"
     }
    },
    "type": "object"
   },
   "schemaSmartHandsPort": {
    "description": "SmartHandsPort represets a port on a device using the usual 0-based indexing scheme for linecard, port and breakout",
    "properties": {
     "breakout": {
      "description": "0 for no breakout, otherwise 0-based index of the breakout",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "deviceId": {
      "description": "Description not available",
      "type": "string"
     },
     "groupName": {
      "description": "Description not available",
      "type": "string"
     },
     "interfaceName": {
      "description": "Description not available",
      "type": "string"
     },
     "linecard": {
      "description": "0-based index of the linecard",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "nodeId": {
      "description": "Description not available",
      "type": "string"
     },
     "port": {
      "description": "0-based index of the port",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "position": {
      "description": "1-based index of the slot. E.g. 1 for Leaf1, 2 for Leaf2, 2 for Spine2",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "role": {
      "$ref": "#/components/schemas/modelsNodeRole"
     }
    },
    "type": "object"
   },
   "schemaSmartHandsPsu": {
    "description": "Description not available",
    "properties": {
     "correctPid": {
      "$ref": "#/components/schemas/schemaSmartHandsCompletionStatus"
     },
     "foundPid": {
      "description": "Description not available",
      "type": "string"
     },
     "poweredOn": {
      "$ref": "#/components/schemas/schemaSmartHandsCompletionStatus"
     },
     "required": {
      "description": "true if this PSU is required for this device model",
      "type": "boolean"
     },
     "requiredPid": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaSonicConfig": {
    "description": "Description not available",
    "properties": {
     "hostname": {
      "description": "Description not available",
      "type": "string"
     },
     "ipv4Addr": {
      "description": "Description not available",
      "type": "string"
     },
     "ipv4Gateway": {
      "description": "Description not available",
      "type": "string"
     },
     "ipv6Addr": {
      "description": "Description not available",
      "type": "string"
     },
     "ipv6Gateway": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaSpyglassBrokerEntry": {
    "description": "Uplifted from Configd for Spyglass Broker status",
    "properties": {
     "connectedExternal": {
      "description": "Description not available",
      "type": "boolean"
     },
     "connectedInternal": {
      "description": "Description not available",
      "type": "boolean"
     },
     "deviceId": {
      "description": "Description not available",
      "type": "string"
     },
     "externalConnectionCreated": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "internalConnectionCreated": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "pktsExtToInt": {
      "description": "Packets sent to internal intf",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "pktsIntToExt": {
      "description": "Packets sent to external intf",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaSpyglassDevice": {
    "description": "A Spyglass device is indexed by a device-id (switch MAC)",
    "properties": {
     "connectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "listenerCount": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaSpyglassGingerEntry": {
    "description": "DEPRECATED",
    "properties": {
     "connectionCreated": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "deviceId": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "status": {
      "$ref": "#/components/schemas/schemaSpyglassSessionStatus"
     },
     "tcpPort": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaSpyglassSessionStatus": {
    "default": "SPYGLASS_SESSION_INVALID",
    "description": "Description not available",
    "enum": [
     "SPYGLASS_SESSION_INVALID",
     "SPYGLASS_SESSION_INIT",
     "SPYGLASS_SESSION_READY_LOCAL",
     "SPYGLASS_SESSION_CONNECTED",
     "SPYGLASS_SESSION_COMPLETE"
    ],
    "type": "string"
   },
   "schemaSpyglassSshSessionEntry": {
    "description": "For the table of current Spyglass sessions; maps TCP port to device",
    "properties": {
     "deviceId": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "tcpPort": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaSpyglassTcpListener": {
    "description": "A Spyglass listener is a child of a spyglass device and is indexed by its TCP port",
    "properties": {
     "createdAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "currentSessionCount": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "failedConnectionCount": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "maxConcurrentSessions": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "totalSessionCount": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaSpyglassTcpSession": {
    "description": "A Spyglass session is spawned from a listener (for a device) It is indexed by its session port",
    "properties": {
     "created": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaStpPortState": {
    "description": "Description not available",
    "properties": {
     "bpduGuardShutdown": {
      "description": "Description not available",
      "type": "boolean"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "portFast": {
      "description": "Description not available",
      "type": "boolean"
     },
     "portName": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaStpVlanPortState": {
    "description": "Description not available",
    "properties": {
     "bpduReceived": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "bpduSent": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "desigBridge": {
      "description": "Description not available",
      "type": "string"
     },
     "desigCost": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "desigPort": {
      "description": "Description not available",
      "type": "string"
     },
     "desigRoot": {
      "description": "Description not available",
      "type": "string"
     },
     "fwdTransitions": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "pathCost": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "portName": {
      "description": "Description not available",
      "type": "string"
     },
     "portNum": {
      "description": "Description not available",
      "type": "string"
     },
     "portState": {
      "$ref": "#/components/schemas/schemaStpVlanPortStateStatus"
     },
     "priority": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "rootGuardTimer": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "tcReceived": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "tcSent": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vlanId": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaStpVlanPortStateStatus": {
    "default": "STP_VLAN_PORT_STATE_DISABLED",
    "description": "Description not available",
    "enum": [
     "STP_VLAN_PORT_STATE_DISABLED",
     "STP_VLAN_PORT_STATE_BLOCKING",
     "STP_VLAN_PORT_STATE_LISTENING",
     "STP_VLAN_PORT_STATE_LEARNING",
     "STP_VLAN_PORT_STATE_FORWARDING",
     "STP_VLAN_PORT_STATE_UNKNOWN",
     "STP_VLAN_PORT_STATE_BROKEN",
     "STP_VLAN_PORT_STATE_BPDU_DIS",
     "STP_VLAN_PORT_STATE_BLOCKING_ROOT_GUARD_INCONSISTENT",
     "STP_VLAN_PORT_STATE_LISTENING_ROOT_GUARD_INCONSISTENT",
     "STP_VLAN_PORT_STATE_LEARNING_ROOT_GUARD_INCONSISTENT",
     "STP_VLAN_PORT_STATE_BPDU_DIS_ROOT_GUARD_INCONSISTENT",
     "STP_VLAN_PORT_STATE_BLOCKING_ROOT_INCONSISTENT"
    ],
    "type": "string"
   },
   "schemaStpVlanState": {
    "description": "Description not available",
    "properties": {
     "bridgeId": {
      "description": "Description not available",
      "type": "string"
     },
     "designatedBridgeId": {
      "description": "Description not available",
      "type": "string"
     },
     "forwardDelay": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "helloTime": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "holdTime": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "lastTopologyChange": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "maxAge": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "rootBridgeId": {
      "description": "Description not available",
      "type": "string"
     },
     "rootForwardDelay": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "rootHelloTime": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "rootMaxAge": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "rootPathCost": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "rootPort": {
      "description": "Description not available",
      "type": "string"
     },
     "stpInstance": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "topologyChangeCount": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vlanId": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaSubInterface": {
    "description": "Description not available",
    "properties": {
     "details": {
      "$ref": "#/components/schemas/schemaSubInterfaceDetails"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaSubInterfaceDetails": {
    "description": "Description not available",
    "properties": {
     "adminState": {
      "$ref": "#/components/schemas/modelsAdminState"
     },
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "macAddr": {
      "description": "Description not available",
      "type": "string"
     },
     "mtu": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "operState": {
      "$ref": "#/components/schemas/modelsOperState"
     },
     "portName": {
      "description": "Description not available",
      "type": "string"
     },
     "subInterfaceName": {
      "description": "Description not available",
      "type": "string"
     },
     "vlan": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaSvcRoute": {
    "description": "Description not available",
    "properties": {
     "externalHost": {
      "$ref": "#/components/schemas/schemaHostPort"
     },
     "internalHost": {
      "$ref": "#/components/schemas/schemaHostPort"
     },
     "loadBalancedHost": {
      "$ref": "#/components/schemas/schemaHostPort"
     }
    },
    "type": "object"
   },
   "schemaSystemStats": {
    "description": "Description not available",
    "properties": {
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "cpuIdle": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "cpuUsed": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "diskFree": {
      "description": "Description not available",
      "type": "string"
     },
     "diskTotal": {
      "description": "Description not available",
      "type": "string"
     },
     "diskUsed": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "memFree": {
      "description": "Description not available",
      "type": "string"
     },
     "memTotal": {
      "description": "Description not available",
      "type": "string"
     },
     "memUsed": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaTLSVerifyError": {
    "default": "UNKNOWN_ERROR",
    "description": "Description not available",
    "enum": [
     "UNKNOWN_ERROR",
     "NOT_AUTHORIZED_TO_SIGN",
     "CERTIFICATE_EXPIRED",
     "CA_NOT_AUTHORIZED_FOR_THIS_NAME",
     "TOO_MANY_INTERMEDIATES",
     "INCOMPATIBLE_USAGE",
     "NAME_MISMATCH",
     "NAME_CONSTRAINTS_WITHOUT_SANS",
     "UNCONSTRAINED_NAME",
     "TOO_MANY_CONSTRAINTS",
     "CA_NOT_AUTHORIZED_FOR_EXTKEYUSAGE",
     "HOST_NAME_ERROR",
     "UNKNOWN_AUTHORITY_ERROR",
     "SYSTEM_ROOTS_ERROR"
    ],
    "type": "string"
   },
   "schemaTempSensor": {
    "description": "Description not available",
    "properties": {
     "category": {
      "$ref": "#/components/schemas/schemaTemperatureSensorCategory"
     },
     "degC": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "degCelsius": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "highThreshold": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "lowThreshold": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaTemperatureSensorCategory": {
    "default": "CPU",
    "description": "Description not available",
    "enum": [
     "CPU",
     "GPU",
     "DIMM",
     "ENV",
     "NVMe",
     "PCIe",
     "POWER_PSU",
     "POWER_PDB",
     "LINE_PROCESSING_SENSORS",
     "FRONT_HAUL_SENSORS",
     "BOARD_NPU",
     "FAN",
     "OTHERS",
     "DDR_RAM",
     "NSV",
     "HSC",
     "PCB",
     "AIR_FLOW",
     "RTM"
    ],
    "type": "string"
   },
   "schemaTenantMetadata": {
    "description": "Description not available",
    "properties": {
     "enabled": {
      "description": "Description not available",
      "type": "boolean"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "orgId": {
      "description": "Description not available",
      "type": "string"
     },
     "orgName": {
      "description": "Description not available",
      "type": "string"
     },
     "tenantName": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaTenantUuid": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaTestEnum": {
    "default": "TEST_ENUM_ONE",
    "description": "Description not available",
    "enum": [
     "TEST_ENUM_ONE",
     "TEST_ENUM_TWO"
    ],
    "type": "string"
   },
   "schemaTestIpAddress": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaTestIpPrefix": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaTestLeafOne": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaTestMacAddress": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaTestMidOne": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaTestPlaceHolder1Secret": {
    "description": "Uplifted from Lira, contains the internal keys",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaTestRootOne": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "rint32": {
      "description": "Description not available",
      "items": {
       "format": "int32",
       "type": "integer"
      },
      "type": "array"
     },
     "rootBool": {
      "description": "Description not available",
      "type": "boolean"
     },
     "rootBytes": {
      "description": "Description not available",
      "format": "byte",
      "type": "string"
     },
     "rootDouble": {
      "description": "Description not available",
      "format": "double",
      "type": "number"
     },
     "rootEnum": {
      "$ref": "#/components/schemas/schemaTestEnum"
     },
     "rootFloat": {
      "description": "Description not available",
      "format": "float",
      "type": "number"
     },
     "rootInt32": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "rootInt64": {
      "description": "Description not available",
      "type": "string"
     },
     "rootIpaddress": {
      "description": "Description not available",
      "type": "string"
     },
     "rootIpprefix": {
      "description": "Description not available",
      "type": "string"
     },
     "rootMacaddress": {
      "description": "Description not available",
      "type": "string"
     },
     "rootMemo": {
      "description": "Description not available",
      "type": "string"
     },
     "rootRepeatedMac": {
      "description": "Description not available",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "rootSfixed32": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "rootSfixed64": {
      "description": "Description not available",
      "type": "string"
     },
     "rootSint32": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "rootSint64": {
      "description": "Description not available",
      "type": "string"
     },
     "rootString": {
      "description": "Description not available",
      "type": "string"
     },
     "rootTimestamp": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "rootUint32": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "rstr": {
      "description": "Description not available",
      "items": {
       "type": "string"
      },
      "type": "array"
     },
     "subMessage": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaTestSubMessage"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "schemaTestRootTwo": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaTestSubMessage": {
    "description": "Description not available",
    "properties": {
     "subInt32": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     },
     "subRepeatedString": {
      "description": "Description not available",
      "items": {
       "type": "string"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "schemaTlsConnectionState": {
    "default": "CONNECTING",
    "description": "Description not available",
    "enum": [
     "CONNECTING",
     "CONNECTED",
     "DISCONNECTED",
     "CONNECTION_FAILED"
    ],
    "type": "string"
   },
   "schemaTlsSessionState": {
    "default": "VERIFY_IN_PROGRESS",
    "description": "Description not available",
    "enum": [
     "VERIFY_IN_PROGRESS",
     "VERIFY_INVALID",
     "VERIFY_VALID"
    ],
    "type": "string"
   },
   "schemaTypeMemoryUsage": {
    "description": "Description not available",
    "properties": {
     "bytes": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaUnderlayInfo": {
    "description": "Description not available",
    "properties": {
     "gatewayInfo": {
      "$ref": "#/components/schemas/schemaGatewayInfo"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "proxySessionInfo": {
      "$ref": "#/components/schemas/schemaProxySessionInfo"
     }
    },
    "type": "object"
   },
   "schemaUnknownVlan": {
    "description": "Description not available",
    "properties": {
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "lastRxPkt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "port": {
      "description": "Description not available",
      "type": "string"
     },
     "vlanId": {
      "description": "Description not available",
      "format": "int32",
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaUnknownVlanPort": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaUnpackAndAssembleTask": {
    "description": "UnpackAndAssembleTask is a task to unpack and assemble a device This task is not initially monitored, we tell the user what they would check to know they did it right Once the device has been claimed and bound we will update the status for fans and PSUs with the observed state",
    "properties": {
     "common": {
      "$ref": "#/components/schemas/schemaSmartHandsCommonTask"
     },
     "connectManagementPort": {
      "description": "Description not available",
      "type": "boolean"
     },
     "fanTray1": {
      "$ref": "#/components/schemas/schemaSmartHandsFanTray"
     },
     "fanTray2": {
      "$ref": "#/components/schemas/schemaSmartHandsFanTray"
     },
     "fanTray3": {
      "$ref": "#/components/schemas/schemaSmartHandsFanTray"
     },
     "fanTray4": {
      "$ref": "#/components/schemas/schemaSmartHandsFanTray"
     },
     "fanTray5": {
      "$ref": "#/components/schemas/schemaSmartHandsFanTray"
     },
     "fanTray6": {
      "$ref": "#/components/schemas/schemaSmartHandsFanTray"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "managementPortUp": {
      "$ref": "#/components/schemas/schemaSmartHandsCompletionStatus"
     },
     "psu1": {
      "$ref": "#/components/schemas/schemaSmartHandsPsu"
     },
     "psu2": {
      "$ref": "#/components/schemas/schemaSmartHandsPsu"
     }
    },
    "type": "object"
   },
   "schemaUserEmail": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "lastLogin": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "orgKind": {
      "$ref": "#/components/schemas/modelsOrgKind"
     },
     "orgUuid": {
      "description": "Description not available",
      "type": "string"
     },
     "tenantUuid": {
      "description": "Description not available",
      "type": "string"
     },
     "userEmail": {
      "description": "Description not available",
      "type": "string"
     },
     "userRole": {
      "$ref": "#/components/schemas/modelsUserRole"
     }
    },
    "type": "object"
   },
   "schemaUserEula": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "provider": {
      "description": "Description not available",
      "type": "string"
     },
     "version": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaUserPreferenceItem": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "provider": {
      "description": "Description not available",
      "type": "string"
     },
     "skipFeatureHighlights": {
      "description": "Description not available",
      "type": "boolean"
     },
     "skipVideoTour": {
      "description": "Description not available",
      "type": "boolean"
     },
     "theme": {
      "$ref": "#/components/schemas/modelsTheme"
     },
     "timeFormat": {
      "description": "Description not available",
      "type": "string"
     },
     "timezone": {
      "description": "Description not available",
      "type": "string"
     }
    },
    "type": "object"
   },
   "schemaVlanCounters": {
    "description": "Description not available",
    "properties": {
     "bytesIn": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "bytesOut": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "errIn": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "errOut": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "errPktsIn": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "errPktsOut": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "pktsIn": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "pktsOut": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaVlanState": {
    "description": "Description not available",
    "properties": {
     "adminState": {
      "$ref": "#/components/schemas/modelsAdminState"
     },
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "hostIfname": {
      "description": "Description not available",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "macAddr": {
      "description": "Description not available",
      "type": "string"
     },
     "mtu": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vlanId": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaVlanTaggingMode": {
    "default": "VLAN_TAGGING_MODE_TAGGED",
    "description": "Description not available",
    "enum": [
     "VLAN_TAGGING_MODE_TAGGED",
     "VLAN_TAGGING_MODE_UNTAGGED",
     "VLAN_TAGGING_MODE_PRIORITY_TAGGED"
    ],
    "type": "string"
   },
   "schemaVlanVniMap": {
    "description": "Description not available",
    "properties": {
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "vlan": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "vni": {
      "description": "Description not available",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "schemaVniPort": {
    "description": "Vni encapsulates the per-port VNI counters.",
    "properties": {
     "counters": {
      "$ref": "#/components/schemas/schemaBasicCounters"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaVrf": {
    "description": "Description not available",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     }
    },
    "type": "object"
   },
   "schemaVtep": {
    "description": "Description not available",
    "properties": {
     "bytesIn": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "bytesOut": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "collectedAt": {
      "description": "Description not available",
      "format": "date-time",
      "type": "string"
     },
     "id": {
      "$ref": "#/components/schemas/schemaPathPathId"
     },
     "pktsIn": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "pktsOut": {
      "description": "Description not available",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     }
    },
    "type": "object"
   },
   "stateAssertionsResponse": {
    "description": "The response returned to a request for a list of assertions.",
    "properties": {
     "assertions": {
      "description": "A list of assertions associated with a specific device.",
      "items": {
       "$ref": "#/components/schemas/assertionsAssertion"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "stateCounter": {
    "description": "Description not available",
    "properties": {
     "basic": {
      "$ref": "#/components/schemas/schemaBasicCounters"
     },
     "dac": {
      "$ref": "#/components/schemas/schemaDacCounters"
     },
     "port": {
      "$ref": "#/components/schemas/schemaPortCounters"
     },
     "vlans": {
      "$ref": "#/components/schemas/schemaVlanCounters"
     }
    },
    "type": "object"
   },
   "stateCountersResponse": {
    "description": "Description not available",
    "properties": {
     "counters": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/stateCounter"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "stateDeviceManagementPortsResponse": {
    "description": "The response to a request for the list of management ports of a specific device.",
    "properties": {
     "ports": {
      "description": "A list of management ports reported by a specific device.",
      "items": {
       "$ref": "#/components/schemas/modelsManagementPort"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "stateSensor": {
    "description": "Description not available",
    "properties": {
     "fan": {
      "$ref": "#/components/schemas/schemaFan"
     },
     "power": {
      "$ref": "#/components/schemas/schemaPsu"
     },
     "temperature": {
      "$ref": "#/components/schemas/schemaTempSensor"
     }
    },
    "type": "object"
   },
   "stateSensorsResponse": {
    "description": "Description not available",
    "properties": {
     "sensors": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/stateSensor"
      },
      "type": "array"
     }
    },
    "type": "object"
   },
   "syncfollowDataSeries": {
    "description": "Description not available",
    "properties": {
     "activeWorker": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaActiveWorker"
      },
      "type": "array"
     },
     "aggregatedDeviceClaim": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAggregatedDeviceClaim"
      },
      "type": "array"
     },
     "apiKey": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaApiKey"
      },
      "type": "array"
     },
     "apiPath": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaApiPath"
      },
      "type": "array"
     },
     "apiPathMethod": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaApiPathMethod"
      },
      "type": "array"
     },
     "apiPathProtocol": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaApiPathProtocol"
      },
      "type": "array"
     },
     "apiServiceMapping": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaApiServiceMapping"
      },
      "type": "array"
     },
     "application": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaApplication"
      },
      "type": "array"
     },
     "assertBgpPeerEstablished": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertBgpPeerEstablished"
      },
      "type": "array"
     },
     "assertConfigBgpPeerEstablished": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigBgpPeerEstablished"
      },
      "type": "array"
     },
     "assertConfigDeviceConnectedToCloud": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigDeviceConnectedToCloud"
      },
      "type": "array"
     },
     "assertConfigDeviceConnectedToFabric": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigDeviceConnectedToFabric"
      },
      "type": "array"
     },
     "assertConfigDeviceEnvPsuUsageBelowThreshold": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigDeviceEnvPsuUsageBelowThreshold"
      },
      "type": "array"
     },
     "assertConfigDeviceFanSpeedBelowThreshold": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigDeviceFanSpeedBelowThreshold"
      },
      "type": "array"
     },
     "assertConfigDeviceResourceUsageBelowThreshold": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigDeviceResourceUsageBelowThreshold"
      },
      "type": "array"
     },
     "assertConfigDeviceTemperatureBelowThreshold": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigDeviceTemperatureBelowThreshold"
      },
      "type": "array"
     },
     "assertConfigExpectedPortBreakoutExists": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigExpectedPortBreakoutExists"
      },
      "type": "array"
     },
     "assertConfigManagementPortConfigSame": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigManagementPortConfigSame"
      },
      "type": "array"
     },
     "assertConfigPortChannelMemberUp": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigPortChannelMemberUp"
      },
      "type": "array"
     },
     "assertConfigPortConnectionSpeedMatch": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigPortConnectionSpeedMatch"
      },
      "type": "array"
     },
     "assertConfigPortExpectedNeighbor": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigPortExpectedNeighbor"
      },
      "type": "array"
     },
     "assertConfigPortLinkDown": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigPortLinkDown"
      },
      "type": "array"
     },
     "assertConfigPortLinkUp": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigPortLinkUp"
      },
      "type": "array"
     },
     "assertConfigPortNoUnknownVlanFound": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigPortNoUnknownVlanFound"
      },
      "type": "array"
     },
     "assertConfigPortNotConnectedToFabric": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigPortNotConnectedToFabric"
      },
      "type": "array"
     },
     "assertConfigPortPluggablePidSame": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigPortPluggablePidSame"
      },
      "type": "array"
     },
     "assertConfigPortSpeedConsistent": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigPortSpeedConsistent"
      },
      "type": "array"
     },
     "assertConfigPortVlanStpStateConsistent": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigPortVlanStpStateConsistent"
      },
      "type": "array"
     },
     "assertConfigStaticDefaultRouteExists": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigStaticDefaultRouteExists"
      },
      "type": "array"
     },
     "assertConfigSubInterfaceDown": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigSubInterfaceDown"
      },
      "type": "array"
     },
     "assertConfigSubInterfaceUp": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigSubInterfaceUp"
      },
      "type": "array"
     },
     "assertConfigVlanHasTraffic": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertConfigVlanHasTraffic"
      },
      "type": "array"
     },
     "assertDeviceConnectedToCloud": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertDeviceConnectedToCloud"
      },
      "type": "array"
     },
     "assertDeviceConnectedToFabric": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertDeviceConnectedToFabric"
      },
      "type": "array"
     },
     "assertDeviceEnvPsuUsageBelowThreshold": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertDeviceEnvPsuUsageBelowThreshold"
      },
      "type": "array"
     },
     "assertDeviceFanSpeedBelowThreshold": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertDeviceFanSpeedBelowThreshold"
      },
      "type": "array"
     },
     "assertDeviceResourceUsageBelowThreshold": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertDeviceResourceUsageBelowThreshold"
      },
      "type": "array"
     },
     "assertDeviceTemperatureBelowThreshold": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertDeviceTemperatureBelowThreshold"
      },
      "type": "array"
     },
     "assertExpectedPortBreakoutExists": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertExpectedPortBreakoutExists"
      },
      "type": "array"
     },
     "assertManagementPortConfigSame": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertManagementPortConfigSame"
      },
      "type": "array"
     },
     "assertPortChannelMemberUp": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertPortChannelMemberUp"
      },
      "type": "array"
     },
     "assertPortConnectionSpeedMatch": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertPortConnectionSpeedMatch"
      },
      "type": "array"
     },
     "assertPortExpectedNeighbor": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertPortExpectedNeighbor"
      },
      "type": "array"
     },
     "assertPortLinkDown": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertPortLinkDown"
      },
      "type": "array"
     },
     "assertPortLinkUp": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertPortLinkUp"
      },
      "type": "array"
     },
     "assertPortNoUnknownVlanFound": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertPortNoUnknownVlanFound"
      },
      "type": "array"
     },
     "assertPortNotConnectedToFabric": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertPortNotConnectedToFabric"
      },
      "type": "array"
     },
     "assertPortPluggablePidSame": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertPortPluggablePidSame"
      },
      "type": "array"
     },
     "assertPortSpeedConsistent": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertPortSpeedConsistent"
      },
      "type": "array"
     },
     "assertPortVlanStpStateConsistent": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertPortVlanStpStateConsistent"
      },
      "type": "array"
     },
     "assertStaticDefaultRouteExists": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertStaticDefaultRouteExists"
      },
      "type": "array"
     },
     "assertSubInterfaceDown": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertSubInterfaceDown"
      },
      "type": "array"
     },
     "assertSubInterfaceUp": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertSubInterfaceUp"
      },
      "type": "array"
     },
     "assertVlanHasTraffic": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssertVlanHasTraffic"
      },
      "type": "array"
     },
     "assignmentStatus": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssignmentStatus"
      },
      "type": "array"
     },
     "assignmentSvcRoute": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaAssignmentSvcRoute"
      },
      "type": "array"
     },
     "bearerToken": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaBearerToken"
      },
      "type": "array"
     },
     "bgpNeighborFamily": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaBgpNeighborFamily"
      },
      "type": "array"
     },
     "bgpNeighborInfo": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaBgpNeighborInfo"
      },
      "type": "array"
     },
     "bgpNeighborReceivedRoute": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaBgpNeighborReceivedRoute"
      },
      "type": "array"
     },
     "bgpNeighborSummary": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaBgpNeighborSummary"
      },
      "type": "array"
     },
     "bmc": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaBmc"
      },
      "type": "array"
     },
     "bmcConfig": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaBmcConfig"
      },
      "type": "array"
     },
     "breakout": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaBreakout"
      },
      "type": "array"
     },
     "brigSymmetricSigningKey": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaBrigSymmetricSigningKey"
      },
      "type": "array"
     },
     "bulkUpliftJobRequest": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaBulkUpliftJobRequest"
      },
      "type": "array"
     },
     "bulkUpliftJobStatus": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaBulkUpliftJobStatus"
      },
      "type": "array"
     },
     "claimAndBindTask": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaClaimAndBindTask"
      },
      "type": "array"
     },
     "dacQsfp": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaDacQsfp"
      },
      "type": "array"
     },
     "dbTableUpdateNotification": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaDbTableUpdateNotification"
      },
      "type": "array"
     },
     "device": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaDevice"
      },
      "type": "array"
     },
     "deviceClaim": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaDeviceClaim"
      },
      "type": "array"
     },
     "deviceConnection": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaDeviceConnection"
      },
      "type": "array"
     },
     "esiInfo": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaEsiInfo"
      },
      "type": "array"
     },
     "esiVtepInfo": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaEsiVtepInfo"
      },
      "type": "array"
     },
     "fabric": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaFabric"
      },
      "type": "array"
     },
     "fabricConfig": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaFabricConfig"
      },
      "type": "array"
     },
     "fabricConfigEvent": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaFabricConfigEvent"
      },
      "type": "array"
     },
     "fabricConfigNotification": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaFabricConfigNotification"
      },
      "type": "array"
     },
     "fabricConnectionTask": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaFabricConnectionTask"
      },
      "type": "array"
     },
     "fabricDevice": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaFabricDevice"
      },
      "type": "array"
     },
     "fabricMemoryUsage": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaFabricMemoryUsage"
      },
      "type": "array"
     },
     "fabricTransaction": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaFabricTransaction"
      },
      "type": "array"
     },
     "fabricUuid": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaFabricUuid"
      },
      "type": "array"
     },
     "fan": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaFan"
      },
      "type": "array"
     },
     "fiberQsfp": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaFiberQsfp"
      },
      "type": "array"
     },
     "firmwareVersion": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaFirmwareVersion"
      },
      "type": "array"
     },
     "instance": {
      "description": "The instance the offset is valid for",
      "maximum": 4294967295,
      "minimum": 0,
      "type": "integer"
     },
     "ipNextHop": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaIpNextHop"
      },
      "type": "array"
     },
     "ipPrefix": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaIpPrefix"
      },
      "type": "array"
     },
     "ipRouteTable": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaIpRouteTable"
      },
      "type": "array"
     },
     "ipmLivenessCounters": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaIpmLivenessCounters"
      },
      "type": "array"
     },
     "ipmProcJitterCounters": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaIpmProcJitterCounters"
      },
      "type": "array"
     },
     "ipmProcLatencyCounters": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaIpmProcLatencyCounters"
      },
      "type": "array"
     },
     "ipmProcLossCounters": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaIpmProcLossCounters"
      },
      "type": "array"
     },
     "ipmRawLatencyCounters": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaIpmRawLatencyCounters"
      },
      "type": "array"
     },
     "ipmSessionId": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaIpmSessionId"
      },
      "type": "array"
     },
     "kubernetesServiceInstance": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaKubernetesServiceInstance"
      },
      "type": "array"
     },
     "l2Fdb": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaL2Fdb"
      },
      "type": "array"
     },
     "l2Mac": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaL2Mac"
      },
      "type": "array"
     },
     "l3Table": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaL3Table"
      },
      "type": "array"
     },
     "lineCard": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaLineCard"
      },
      "type": "array"
     },
     "loadBalancedSvcRoute": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaLoadBalancedSvcRoute"
      },
      "type": "array"
     },
     "mac": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaMac"
      },
      "type": "array"
     },
     "managementConfig": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaManagementConfig"
      },
      "type": "array"
     },
     "managementState": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaManagementState"
      },
      "type": "array"
     },
     "manifestImageState": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaManifestImageState"
      },
      "type": "array"
     },
     "manifestPartitionFileCacheStatus": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaManifestPartitionFileCacheStatus"
      },
      "type": "array"
     },
     "manifestRunningImageStatus": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaManifestRunningImageStatus"
      },
      "type": "array"
     },
     "negativeConnectionTask": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaNegativeConnectionTask"
      },
      "type": "array"
     },
     "node": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaNode"
      },
      "type": "array"
     },
     "nodeBreakout": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaNodeBreakout"
      },
      "type": "array"
     },
     "nodeConfig": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaNodeConfig"
      },
      "type": "array"
     },
     "nodeLineCard": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaNodeLineCard"
      },
      "type": "array"
     },
     "nodePort": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaNodePort"
      },
      "type": "array"
     },
     "objectName": {
      "description": "The threadlist object name for this data",
      "type": "string"
     },
     "objectType": {
      "$ref": "#/components/schemas/schemaPathSchemaType"
     },
     "offset": {
      "description": "The offset of this data point, can be used in the Request when requesting a resume",
      "maximum": 18446744073709552000,
      "minimum": 0,
      "type": "integer"
     },
     "orgToCellPairMapping": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaOrgToCellPairMapping"
      },
      "type": "array"
     },
     "orgUuid": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaOrgUuid"
      },
      "type": "array"
     },
     "plannedConfig": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaPlannedConfig"
      },
      "type": "array"
     },
     "port": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaPort"
      },
      "type": "array"
     },
     "portChannelMemberState": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaPortChannelMemberState"
      },
      "type": "array"
     },
     "portChannelState": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaPortChannelState"
      },
      "type": "array"
     },
     "portConfig": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaPortConfig"
      },
      "type": "array"
     },
     "portCounters": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaPortCounters"
      },
      "type": "array"
     },
     "portNeighbor": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaPortNeighbor"
      },
      "type": "array"
     },
     "portRateCounters": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaPortRateCounters"
      },
      "type": "array"
     },
     "portSetupTask": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaPortSetupTask"
      },
      "type": "array"
     },
     "portVlan": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaPortVlan"
      },
      "type": "array"
     },
     "procTable": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaProcTable"
      },
      "type": "array"
     },
     "proxyConnectionState": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaProxyConnectionState"
      },
      "type": "array"
     },
     "proxyConnectionStats": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaProxyConnectionStats"
      },
      "type": "array"
     },
     "proxyStats": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaProxyStats"
      },
      "type": "array"
     },
     "psu": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaPsu"
      },
      "type": "array"
     },
     "qsfpDomSensor": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaQsfpDomSensor"
      },
      "type": "array"
     },
     "qsfpDomThreshold": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaQsfpDomThreshold"
      },
      "type": "array"
     },
     "qsfpInfo": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaQsfpInfo"
      },
      "type": "array"
     },
     "refPoint": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaRefPoint"
      },
      "type": "array"
     },
     "refPointStatus": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaRefPointStatus"
      },
      "type": "array"
     },
     "remedyAction": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaRemedyAction"
      },
      "type": "array"
     },
     "remoteVtep": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaRemoteVtep"
      },
      "type": "array"
     },
     "resourceAssignment": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaResourceAssignment"
      },
      "type": "array"
     },
     "routedInterfaceCounters": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaRoutedInterfaceCounters"
      },
      "type": "array"
     },
     "serverFan": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaServerFan"
      },
      "type": "array"
     },
     "serverIpRouteAddress": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaServerIpRouteAddress"
      },
      "type": "array"
     },
     "serverIpRouteTable": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaServerIpRouteTable"
      },
      "type": "array"
     },
     "serverPortInfo": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaServerPortInfo"
      },
      "type": "array"
     },
     "serverPsu": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaServerPsu"
      },
      "type": "array"
     },
     "serverTempSensor": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaServerTempSensor"
      },
      "type": "array"
     },
     "serviceInstanceHealth": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaServiceInstanceHealth"
      },
      "type": "array"
     },
     "spyglassBrokerEntry": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaSpyglassBrokerEntry"
      },
      "type": "array"
     },
     "spyglassDevice": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaSpyglassDevice"
      },
      "type": "array"
     },
     "spyglassGingerEntry": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaSpyglassGingerEntry"
      },
      "type": "array"
     },
     "spyglassSshSessionEntry": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaSpyglassSshSessionEntry"
      },
      "type": "array"
     },
     "spyglassTcpListener": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaSpyglassTcpListener"
      },
      "type": "array"
     },
     "spyglassTcpSession": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaSpyglassTcpSession"
      },
      "type": "array"
     },
     "stpPortState": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaStpPortState"
      },
      "type": "array"
     },
     "stpVlanPortState": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaStpVlanPortState"
      },
      "type": "array"
     },
     "stpVlanState": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaStpVlanState"
      },
      "type": "array"
     },
     "subInterface": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaSubInterface"
      },
      "type": "array"
     },
     "systemStats": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaSystemStats"
      },
      "type": "array"
     },
     "tempSensor": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaTempSensor"
      },
      "type": "array"
     },
     "tenantMetadata": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaTenantMetadata"
      },
      "type": "array"
     },
     "tenantUuid": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaTenantUuid"
      },
      "type": "array"
     },
     "testIpAddress": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaTestIpAddress"
      },
      "type": "array"
     },
     "testIpPrefix": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaTestIpPrefix"
      },
      "type": "array"
     },
     "testLeafOne": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaTestLeafOne"
      },
      "type": "array"
     },
     "testMacAddress": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaTestMacAddress"
      },
      "type": "array"
     },
     "testMidOne": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaTestMidOne"
      },
      "type": "array"
     },
     "testPlaceHolder1Secret": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaTestPlaceHolder1Secret"
      },
      "type": "array"
     },
     "testRootOne": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaTestRootOne"
      },
      "type": "array"
     },
     "testRootTwo": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaTestRootTwo"
      },
      "type": "array"
     },
     "typeMemoryUsage": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaTypeMemoryUsage"
      },
      "type": "array"
     },
     "underlayInfo": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaUnderlayInfo"
      },
      "type": "array"
     },
     "unknownVlan": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaUnknownVlan"
      },
      "type": "array"
     },
     "unknownVlanPort": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaUnknownVlanPort"
      },
      "type": "array"
     },
     "unpackAndAssembleTask": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaUnpackAndAssembleTask"
      },
      "type": "array"
     },
     "userEmail": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaUserEmail"
      },
      "type": "array"
     },
     "userEula": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaUserEula"
      },
      "type": "array"
     },
     "userPreferenceItem": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaUserPreferenceItem"
      },
      "type": "array"
     },
     "vlanCounters": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaVlanCounters"
      },
      "type": "array"
     },
     "vlanState": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaVlanState"
      },
      "type": "array"
     },
     "vlanVniMap": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaVlanVniMap"
      },
      "type": "array"
     },
     "vniPort": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaVniPort"
      },
      "type": "array"
     },
     "vrf": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaVrf"
      },
      "type": "array"
     },
     "vtep": {
      "description": "Description not available",
      "items": {
       "$ref": "#/components/schemas/schemaVtep"
      },
      "type": "array"
     }
    },
    "type": "object"
   }
  },
  "securitySchemes": {
   "http": {
    "bearerFormat": "JWT",
    "description": "A bearer token issued by the service",
    "scheme": "bearer",
    "type": "http"
   }
  }
 }
}
